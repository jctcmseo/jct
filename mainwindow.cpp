#include "mainwindow.h"
#include "ui_mainwindow.h"
#define arc_accel   1000
QDataStream &operator<<(QDataStream &stream, const QVector<ST_DATA> &data);
QDataStream &operator>>(QDataStream &stream, QVector<ST_DATA> &data);
QProcess *Process;

ST_MEMORY MEMORY[11];
//qDebug(QHostInfo::localHostName().toLocal8Bit());
//QString PC_NAME = "JCT-T3-N1";
//QString PC_NAME = "PC";
//QString PC_NAME = "2023";
//QString PC_NAME = "JCT-C1-N2";
//QString PC_NAME = "welsystem";
QString PC_NAME = "";

int data_axis7 = 0; // 0:미사용 , 1:사용
int data_axis8 = 0; // 0:미사용 , 1:사용
int data_axis9 = 0; // 0:미사용 , 1:사용
int data_sound = 0; // 0:미사용 , 1:사용
int data_tig = 0;  // 0:미사용 , 1:사용
int data_wire = 0; // 0:미사용 , 1:사용
int data_foot = 0; // 0:미사용 , 1:사용
int data_robotfree = 0; // 0:미사용 , 1:사용

int data_motion = 0;   // 용접선택 모션
int data_condition = 0;    //용접선택 조건

int save_file_no = 0;
int load_file_no = 0;

int data_start = 0;
int run_alarm = 0;
int teach_mode = 0; // 0:교시 , 1:미교시

int modify_mode = 0;

int tool_btn_memory = 0;
int data_sound_mode = 0;

int motion_scrollbar = 0;
int data_lv = 0;

int ment = 0;

int data_next = 0;
int data_load = 0;

QString motion_text = "";
QString file_pos = "./music/";
QString save_type = "";
QString load_type = "";

int data_B0R1_key_view = 0;
int data_TW_1_row = 0;
int data_TW_1_column = 0;
int data_B1R1_key_view = 0;
int data_TW_10_row = 0;
int data_TW_10_column = 0;
int data_B2C01_key_view = 0;
int data_B2C1_key_view = 0;
int data_D0C0R1_key_view = 0;
int data_D0C0L1_key_view = 0;
int data_D0C1R1_key_view = 0;
int data_D0C2R1_key_view = 0;
int data_C7C0_key_view = 0;

int data_B4R1_key_view = 0;
int data_TW_Home_row = 0;
int data_TW_Home_column = 0;

int manual_M_PB = 0;
int manual_T5_PB = 0;

int manual_state = 0;

int mode_type = 0; // 0: base, 1: LH, 2: RH, 3: Home, 11 : JIG 1, 12 : JIG 2, 13 : JIG, 101~110 : Load_File_1~10

int play_type = 0; // 0: base, 1: Line (Home_LH_RH), 2: Line (Home_JIG1_JIG2_JIG3), 3: multi(play)

int mode_shift = 0; // 시프트

int line_lh_load_no = 0;

int line_rh_load_no = 0;

int line_JIG1_load_no = 0;

int line_JIG2_load_no = 0;

int line_JIG3_load_no = 0;

int TW_1_cell = 0;

int fronius_job = 1;

int data_jog_mode = 0;
int data_jog_type = 0;
int data_weld_type = 0;

int speed_changed = false;

int lamp_memory = 0;

int robot_power = 0;

int check_pos = 0; // 0 = 미교시 지점있음, 1 = 교시 지점

int file_load_no_1 = 0; // 0 = 미사용, 1 = 사용
int file_load_no_2 = 0; // 0 = 미사용, 1 = 사용
int file_load_no_3 = 0; // 0 = 미사용, 1 = 사용
int file_load_no_4 = 0; // 0 = 미사용, 1 = 사용
int file_load_no_5 = 0; // 0 = 미사용, 1 = 사용
int file_load_no_6 = 0; // 0 = 미사용, 1 = 사용
int file_load_no_7 = 0; // 0 = 미사용, 1 = 사용
int file_load_no_8 = 0; // 0 = 미사용, 1 = 사용
int file_load_no_9 = 0; // 0 = 미사용, 1 = 사용
int file_load_no_10 = 0;    // 0 = 미사용, 1 = 사용

int play_move = 0;

//240104
float icv_sec = 0.1;
float icv_x = 0.1;
float icv_y = 0.1;
float icv_z = 0.1;

float arc_set_A = 0.1;
float arc_set_V = 0.1;

//240129
int data_weld_play = 0;

MainWindow::MainWindow(QWidget *parent) :
    QMainWindow(parent),
    ui(new Ui::MainWindow)
{
    ui->setupUi(this);

    ui->LB_PN_0->setText(PC_NAME);
    mMediaPlayer = new QMediaPlayer(this);

    mMediaPlayer->setVolume(100);

    connect(mMediaPlayer, &QMediaPlayer::positionChanged, this, &MainWindow ::video_positionChanged);
    connect(mMediaPlayer, &QMediaPlayer::durationChanged, this, &MainWindow ::video_durationChanged);

    setWindowFlags(Qt::FramelessWindowHint);    // 제목 표시줄 삭제
    ui->SW_A->setCurrentIndex(0);

    ui->SW_B->setCurrentIndex(0);
    ui->SW_data_A->setCurrentIndex(0);
    ui->SW_B_0_L->setCurrentIndex(0);
    ui->SW_B_0_R->setCurrentIndex(0);
    ui->SW_B_1_L->setCurrentIndex(0);
    ui->SW_B_1_R->setCurrentIndex(0);
    ui->SW_B1R0_C->setCurrentIndex(0);
    if(data_weld_play==0){
        ui->SW_B2C0->setCurrentIndex(0);
        ui->SW_C7C0->setCurrentIndex(0);
    }
    if(data_weld_play==1){
        ui->SW_B2C0->setCurrentIndex(2);
        ui->SW_C7C0->setCurrentIndex(2);
    }

    if(ui->LE_D_0_data_0->text()=="0"){
        ui->SW_data_B->setCurrentIndex(0);
    }
    if(ui->LE_D_0_data_0->text()=="1"){ // 한독 실행화면 LH,RH 표시
        ui->SW_data_B->setCurrentIndex(1);
    }
    if(ui->LE_D_0_data_0->text()=="2"){ // 실행 화면 JIG 1, JIG 2, JIG 3 표시
        ui->SW_data_B->setCurrentIndex(2);
    }
    if(ui->LE_D_0_data_0->text()=="3"){ // 한독 실행화면 LH,RH 표시
        ui->SW_data_B->setCurrentIndex(1);
    }
    ui->SW_B_2_C->setCurrentIndex(0);
    ui->SW_C->setCurrentIndex(0);
    ui->SW_C_0_C->setCurrentIndex(0);
    ui->SW_D->setCurrentIndex(0);
    ui->SW_D_0_C->setCurrentIndex(0);
    ui->SW_D_0_C_0_L->setCurrentIndex(0);
    ui->SW_D_0_C_0_R->setCurrentIndex(0);
    ui->SW_D_0_C_1_L->setCurrentIndex(0);
    ui->SW_D_0_C_1_R->setCurrentIndex(0);

    ui->TW_1->horizontalHeader()->setVisible(true);
    ui->TW_10->verticalHeader()->setVisible(true);

    // ===========================================================================
    // 시스템 파라미터 초기화
    // ===========================================================================
    TLR_step = 0;
    TLR_time_out_count = 0;
    is_first_check = true;
    is_first_count = 0;
    real_simul_count = 0;
    booting_check = false;
    sockConnectionStatusCmd = false;
    sockConnectionStatusData = false;
    // JCT_PLEASE_CHECK_THIS
    sys_status.sdata.task_state = 1;
    rb_soket_on();
    // ===========================================================================
#ifdef WILL_USE_AUTO_UI_ON
    Process=new QProcess(this);
    Process->start("D:\\Rainbow_Work\\메뉴얼_문서_예제_그림\\System_update\\RB_Release_21040604_343\\RB_window_343\\Rainbow-RB.exe");
    int time_out_count = 0;
    while(1){
        if(Process->isOpen()){
            qDebug()<<"로봇 Ui 정상 실행";
            break;
        }
        time_out_count++;
        if(time_out_count > 5){
            qDebug()<<"로봇 Ui 실행 타임아웃";
            break;
        }
        QThread::sleep(1);
    }
#endif
    popup_timer = 0;
    // ===========================================================================
    setting_air_move_J_vel = 45;
    setting_air_move_J_acc = 90;
    setting_air_move_L_vel = 100;
    setting_air_move_L_acc = 250;

    setting_pc_ip_address[0] = 10;//웰시스템 컴퓨터 IP
    setting_pc_ip_address[1] = 0;
    setting_pc_ip_address[2] = 2;
    setting_pc_ip_address[3] = 50;

    setting_rb_ip_address[0] = 10;//로봇 IP
    setting_rb_ip_address[1] = 0;
    setting_rb_ip_address[2] = 2;
    setting_rb_ip_address[3] = 7;

    setting_is_tig_welder = 0;

    setting_arc_retry_vel = 5;
    setting_arc_retry_time = 2.0;

    setting_air_Axis_0_vel = 100;
    setting_air_Axis_0_acc = 100;
    setting_air_Axis_1_vel = 20;
    setting_air_Axis_1_acc = 20;
    setting_air_Axis_2_vel = 20;
    setting_air_Axis_2_acc = 20;

    setting_memory_data[0] = 0;// 0: 기본, 1: 한독(주행,턴,턴), 2: 두이엔지(JIG 1,2,3), 3: 한독 (주행,턴)
    setting_memory_data[1] = 0;// 0: 기본, 1: 한독(포인트 개별),
    setting_memory_data[3] = 0;//기능
    setting_memory_data[4] = 0;//기능
    setting_memory_data[5] = 0;//기능

    home_axis0 = 90.0;
    home_axis1 = -90.0;
    home_axis2 = -90.0;
    home_axis3 = 90.0;
    home_axis4 = 90.0;
    home_axis5 = 0.0;
    home_axis6 = 0.0;
    home_axis7 = 0.0;
    home_axis8 = 0.0;
    home_axis9 = 0.0;

    Setting_Speed_And_IP_Load();

    Setting_Memory_Load();

    load_TW_Home();

    setting_data_condition();

    // Set Table --------------------------------------------------------------
    SetTableFormat();

    memset(&sys_status, 0, sizeof(systemSTAT));

    connect(&commandtimer, SIGNAL(timeout()), this, SLOT(Loop_Command()));
    commandtimer.start(200);

    // Refresh
    REFRESH_clicked();
    getuser();


}
MainWindow::~MainWindow()
{
#ifdef WILL_USE_AUTO_UI_ON
    if(Process!=NULL){
       if(Process->isOpen()){
           Process->close();
       }
       Process->deleteLater();
    }
#endif
    delete ui;
}

void MainWindow::getuser()
{

    QProcess *username = new QProcess();
    QStringList cmdparamaters, split;
    QString clean1, clean2, clean3, username_a;
    int cutoff, strlen;

    cmdparamaters << "/c"<<"\"%userprofile%\"";
    username->setProcessChannelMode(QProcess::MergedChannels);
    username->start("cmd.exe",cmdparamaters);
    username->waitForFinished();

    QString vusername (username->readAllStandardOutput());
    cutoff = vusername.indexOf("'", 1);
    ui->LB_PN_3->setText(vusername);

    clean1 = vusername.left(cutoff);
    ui->LB_PN_2->setText(clean1);

    clean2 = clean1.remove(0,3);
    strlen = clean2.length();
    ui->LB_PN_1->setText(clean2);

    clean3 = clean2.left(strlen-2);
    split = clean3.split("\\");

    username_a = split[2]; //this is the current system username
    ui->LB_PN_0->setText(username_a);
    PC_NAME = username_a;
    delete username;
}

int MainWindow::IsMotionIdle(){
   return ((cmdConfirmFlag == true) && (sys_status.sdata.robot_state == 1));
}
void MainWindow::CobotInit(){
    QString text;
    text.sprintf("mc jall init");
    cmdConfirmFlag = false;
    sockCmd.write(text.toStdString().c_str(), text.toStdString().length());
}
void MainWindow::ProgramMode_Real(){
    QString text;
    text.sprintf("pgmode real");
    cmdConfirmFlag = false;
    sockCmd.write(text.toStdString().c_str(), text.toStdString().length());
}
void MainWindow::ProgramMode_Simulation(){
    QString text;
    text.sprintf("pgmode simulation");
    cmdConfirmFlag = false;
    sockCmd.write(text.toStdString().c_str(), text.toStdString().length());
}
void MainWindow::MoveJoint(float joint1, float joint2, float joint3, float joint4, float joint5, float joint6, float spd, float acc){
    QString text;
    text.sprintf("jointall %.3f, %.3f, %.3f, %.3f, %.3f, %.3f, %.3f, %.3f", spd, acc, joint1, joint2, joint3, joint4, joint5, joint6);
    moveCmdFlag = true;
    cmdConfirmFlag = false;
    sockCmd.write(text.toStdString().c_str(), text.toStdString().length());
    sys_status.sdata.robot_state = 3; //run
}
void MainWindow::MoveTCP(float x, float y, float z, float rx, float ry, float rz, float spd, float acc){
    QString text;
    text.sprintf("movetcp %.3f, %.3f, %.3f, %.3f, %.3f, %.3f, %.3f, %.3f", spd, acc, x, y, z, rx, ry, rz);
    moveCmdFlag = true;
    cmdConfirmFlag = false;
    sockCmd.write(text.toStdString().c_str(), text.toStdString().length());
    sys_status.sdata.robot_state = 3; //run
}
void MainWindow::MoveCircle_ThreePoint(int type, float x1, float y1, float z1, float rx1, float ry1, float rz1, float x2, float y2, float z2, float rx2, float ry2, float rz2, float spd, float acc){
    QString text;
    char buf[15];
    if(type == 0){
        sprintf(buf, "intended");
    }else if(type == 1){
        sprintf(buf, "constant");
    }else if(type == 2){
        sprintf(buf, "radial");
    }
    text.sprintf("movecircle absolute threepoints %s %.3f, %.3f, %.3f, %.3f, %.3f, %.3f, %.3f, %.3f, %.3f, %.3f, %.3f, %.3f, %.3f, %.3f",
                 buf, spd, acc, x1, y1, z1, rx1, ry1, rz1, x2, y2, z2, rx2, ry2, rz2);
    moveCmdFlag = true;
    cmdConfirmFlag =false;
    sockCmd.write(text.toStdString().c_str(), text.toStdString().length());
    sys_status.sdata.robot_state = 3;
}
void MainWindow::MoveCircle_Axis(int type, float cx, float cy, float cz, float ax, float ay, float az, float rot_angle, float spd, float acc){
    QString text;
    char buf[15];
    if(type == 0){
        sprintf(buf, "intended");
    }else if(type == 1){
        sprintf(buf, "constant");
    }else if(type == 2){
        sprintf(buf, "radial");
    }
    text.sprintf("movecircle absolute axis %s %.3f, %.3f, %.3f, %.3f, %.3f, %.3f, %.3f, %.3f, %.3f",
                 buf, spd, acc, rot_angle, cx, cy, cz, ax, ay, az);
    moveCmdFlag = true;
    cmdConfirmFlag =false;
    sockCmd.write(text.toStdString().c_str(), text.toStdString().length());
    sys_status.sdata.robot_state = 3;
}
void MainWindow::MoveJointBlend_Clear(){
    QString text;
    text.sprintf("blend_jnt clear_pt");
    cmdConfirmFlag = false;
    sockCmd.write(text.toStdString().c_str(), text.toStdString().length());
}
void MainWindow::MoveJointBlend_AddPoint(float joint1, float joint2, float joint3, float joint4, float joint5, float joint6, float spd, float acc){
    QString text;
    text.sprintf("blend_jnt add_pt %.3f, %.3f, %.3f, %.3f, %.3f, %.3f, %.3f, %.3f", spd, acc, joint1, joint2, joint3, joint4, joint5, joint6);
    cmdConfirmFlag = false;
    sockCmd.write(text.toStdString().c_str(), text.toStdString().length());
    sys_status.sdata.robot_state = 3; //run
}
void MainWindow::MoveJointBlend_MovePoint(){
    QString text;
    text.sprintf("blend_jnt move_pt");
    moveCmdFlag = true;
    cmdConfirmFlag = false;
    sockCmd.write(text.toStdString().c_str(), text.toStdString().length());
    sys_status.sdata.robot_state = 3;
}
void MainWindow::MoveTCPBlend_Clear(){
    QString text;
    text.sprintf("blend_tcp clear_pt");
    cmdConfirmFlag = false;
    sockCmd.write(text.toStdString().c_str(), text.toStdString().length());
}
void MainWindow::MoveTCPBlend_AddPoint(float radius, float x, float y, float z, float rx, float ry, float rz, float spd, float acc){
    QString text;
    text.sprintf("blend_tcp add_pt %.3f, %.3f, %.3f, %.3f, %.3f, %.3f, %.3f, %.3f, %.3f", spd, acc, radius, x, y, z, rx, ry, rz);
    cmdConfirmFlag = false;
    sockCmd.write(text.toStdString().c_str(), text.toStdString().length());
    sys_status.sdata.robot_state = 3; //run
}
void MainWindow::MoveTCPBlend_MovePoint(){
    QString text;
    text.sprintf("blend_tcp move_pt");
    moveCmdFlag = true;
    cmdConfirmFlag = false;
    sockCmd.write(text.toStdString().c_str(), text.toStdString().length());
    sys_status.sdata.robot_state = 3;
}
void MainWindow::ControlBoxDigitalOut(int d0, int d1, int d2, int d3, int d4, int d5, int d6, int d7, int d8, int d9, int d10, int d11, int d12, int d13, int d14, int d15){
    QString text;
    text.sprintf("digital_out %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d", d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12, d13, d14, d15);
    cmdConfirmFlag = false;
    sockCmd.write(text.toStdString().c_str(), text.toStdString().length());
}
void MainWindow::ControlBoxAnalogOut(float a0, float a1, float a2, float a3){
    QString text;
    text.sprintf("analog_out %.3f, %.3f, %.3f, %.3f", a0, a1, a2, a3);
    cmdConfirmFlag = false;
    sockCmd.write(text.toStdString().c_str(), text.toStdString().length());
}
void MainWindow::ToolOut(int volt, int d0, int d1){
    int temp_volt = volt;
    if((temp_volt != 12) && (temp_volt != 24))
        temp_volt = 0;

    QString text;
    text.sprintf("tool_out %d, %d, %d", temp_volt, d0, d1);
    cmdConfirmFlag = false;
    sockCmd.write(text.toStdString().c_str(), text.toStdString().length());
}
void MainWindow::BaseSpeedChange(float spd){
    QString text;
    if(sys_status.sdata.task_state == 3 && spd != 1.0){
        spd = 1.0;
    }
    text.sprintf("sdw default_speed %.3f", spd);
    cmdConfirmFlag = false;
    sockCmd.write(text.toStdString().c_str(), text.toStdString().length());
}
void MainWindow::MotionPause(){
    QString text;
    text.sprintf("task pause");
    cmdConfirmFlag = false;
    sockCmd.write(text.toStdString().c_str(), text.toStdString().length());
}
void MainWindow::MotionHalt(){
    QString text;
    text.sprintf("task stop");
    cmdConfirmFlag = false;
    sockCmd.write(text.toStdString().c_str(), text.toStdString().length());
}
void MainWindow::MotionResume(){
    QString text;

    text.sprintf("task resume_a");
    cmdConfirmFlag = false;
    sockCmd.write(text.toStdString().c_str(), text.toStdString().length());
}
void MainWindow::CollisionResume(){
    QString text;
    text.sprintf("task resume_b");
    cmdConfirmFlag = false;
    sockCmd.write(text.toStdString().c_str(), text.toStdString().length());
}
void MainWindow::rb_soket_on()
{
    // Socket Part=============================================================================
    #define FOLD_START___SOCKET_PART  {
        cmdConfirmFlag = true;
        moveCmdFlag = false;
        moveCmdCnt = 0;

        sockConnectionStatusCmd = false;
        sockConnectionStatusData = false;

        connect(&sockCmd, SIGNAL(connected()), this, SLOT(onConnectedCmd()));
        connect(&sockCmd, SIGNAL(disconnected()), this, SLOT(onDisconnectedCmd()));
        connect(&sockCmd, SIGNAL(readyRead()), this, SLOT(onReadyReadCmd()));

        connect(&sockData, SIGNAL(connected()), this, SLOT(onConnectedData()));
        connect(&sockData, SIGNAL(disconnected()), this, SLOT(onDisconnectedData()));
        connect(&sockData, SIGNAL(readyRead()), this, SLOT(onReadyReadData()));

        connect(&sockConnectionTimer, SIGNAL(timeout()), this, SLOT(onConnectionTimer()));
        sockConnectionTimer.start(1000);
    #define FOLD_END___SOCKET_PART  }
    // ========================================================================================
}

void MainWindow::Loop_Command()
{
    popup_timer++;
    if(popup_timer > 50000)
    {
        popup_timer = 50000;
    }
    if(ui->SW_B->currentIndex()==1)
    {
        ui->LB_Line_Count->setText(QString::number(ui->TW_10->currentRow()+1));
    }

    if(ui->SW_B->currentIndex()==1)
    {
        float minus_limit = 0.2;
        float plus_limit = 0.2;

        int target_line = ui->LB_Line_Count->text().toInt();
         if(target_line >=1 && target_line<=welding_data.size()){
             if(welding_data[target_line-1].tcp[0] >= sys_status.sdata.tcp_ref[0]-minus_limit
                 &&welding_data[target_line-1].tcp[0] <= sys_status.sdata.tcp_ref[0]+plus_limit
                 &&welding_data[target_line-1].tcp[1] >= sys_status.sdata.tcp_ref[1]-minus_limit
                 &&welding_data[target_line-1].tcp[1] <= sys_status.sdata.tcp_ref[1]+plus_limit
                 &&welding_data[target_line-1].tcp[2] >= sys_status.sdata.tcp_ref[2]-minus_limit
                 &&welding_data[target_line-1].tcp[2] <= sys_status.sdata.tcp_ref[2]+plus_limit
                 &&welding_data[target_line-1].tcp[3] >= sys_status.sdata.tcp_ref[3]-minus_limit
                 &&welding_data[target_line-1].tcp[3] <= sys_status.sdata.tcp_ref[3]+plus_limit
                 &&welding_data[target_line-1].tcp[4] >= sys_status.sdata.tcp_ref[4]-minus_limit
                 &&welding_data[target_line-1].tcp[4] <= sys_status.sdata.tcp_ref[4]+plus_limit
                 &&welding_data[target_line-1].tcp[5] >= sys_status.sdata.tcp_ref[5]-minus_limit
                 &&welding_data[target_line-1].tcp[5] <= sys_status.sdata.tcp_ref[5]+plus_limit
                 &&welding_data[target_line-1].joint[0] >= sys_status.sdata.jnt_ref[0]-minus_limit
                 &&welding_data[target_line-1].joint[0] <= sys_status.sdata.jnt_ref[0]+plus_limit
                 &&welding_data[target_line-1].joint[1] >= sys_status.sdata.jnt_ref[1]-minus_limit
                 &&welding_data[target_line-1].joint[1] <= sys_status.sdata.jnt_ref[1]+plus_limit
                 &&welding_data[target_line-1].joint[2] >= sys_status.sdata.jnt_ref[2]-minus_limit
                 &&welding_data[target_line-1].joint[2] <= sys_status.sdata.jnt_ref[2]+plus_limit
                 &&welding_data[target_line-1].joint[3] >= sys_status.sdata.jnt_ref[3]-minus_limit
                 &&welding_data[target_line-1].joint[3] <= sys_status.sdata.jnt_ref[3]+plus_limit
                 &&welding_data[target_line-1].joint[4] >= sys_status.sdata.jnt_ref[4]-minus_limit
                 &&welding_data[target_line-1].joint[4] <= sys_status.sdata.jnt_ref[4]+plus_limit
                 &&welding_data[target_line-1].joint[5] >= sys_status.sdata.jnt_ref[5]-minus_limit
                 &&welding_data[target_line-1].joint[5] <= sys_status.sdata.jnt_ref[5]+plus_limit)
             {
                     ui->LCD_STATE_LINE->setStyleSheet("background-color:green;");
             }else {
                 ui->LCD_STATE_LINE->setStyleSheet("background-color:red;");
             }
         }
    }
    if(ui->SW_B->currentIndex()==2)
    {
        float minus_limit = 0.2;
        float plus_limit = 0.2;

        int target_line = ui->LE_B_2_nPlay->text().toInt();
         if(target_line >=1 && target_line<=welding_data.size()){
             if(welding_data[target_line-1].tcp[0] >= sys_status.sdata.tcp_ref[0]-minus_limit
                 &&welding_data[target_line-1].tcp[0] <= sys_status.sdata.tcp_ref[0]+plus_limit
                 &&welding_data[target_line-1].tcp[1] >= sys_status.sdata.tcp_ref[1]-minus_limit
                 &&welding_data[target_line-1].tcp[1] <= sys_status.sdata.tcp_ref[1]+plus_limit
                 &&welding_data[target_line-1].tcp[2] >= sys_status.sdata.tcp_ref[2]-minus_limit
                 &&welding_data[target_line-1].tcp[2] <= sys_status.sdata.tcp_ref[2]+plus_limit
                 &&welding_data[target_line-1].tcp[3] >= sys_status.sdata.tcp_ref[3]-minus_limit
                 &&welding_data[target_line-1].tcp[3] <= sys_status.sdata.tcp_ref[3]+plus_limit
                 &&welding_data[target_line-1].tcp[4] >= sys_status.sdata.tcp_ref[4]-minus_limit
                 &&welding_data[target_line-1].tcp[4] <= sys_status.sdata.tcp_ref[4]+plus_limit
                 &&welding_data[target_line-1].tcp[5] >= sys_status.sdata.tcp_ref[5]-minus_limit
                 &&welding_data[target_line-1].tcp[5] <= sys_status.sdata.tcp_ref[5]+plus_limit
                 &&welding_data[target_line-1].joint[0] >= sys_status.sdata.jnt_ref[0]-minus_limit
                 &&welding_data[target_line-1].joint[0] <= sys_status.sdata.jnt_ref[0]+plus_limit
                 &&welding_data[target_line-1].joint[1] >= sys_status.sdata.jnt_ref[1]-minus_limit
                 &&welding_data[target_line-1].joint[1] <= sys_status.sdata.jnt_ref[1]+plus_limit
                 &&welding_data[target_line-1].joint[2] >= sys_status.sdata.jnt_ref[2]-minus_limit
                 &&welding_data[target_line-1].joint[2] <= sys_status.sdata.jnt_ref[2]+plus_limit
                 &&welding_data[target_line-1].joint[3] >= sys_status.sdata.jnt_ref[3]-minus_limit
                 &&welding_data[target_line-1].joint[3] <= sys_status.sdata.jnt_ref[3]+plus_limit
                 &&welding_data[target_line-1].joint[4] >= sys_status.sdata.jnt_ref[4]-minus_limit
                 &&welding_data[target_line-1].joint[4] <= sys_status.sdata.jnt_ref[4]+plus_limit
                 &&welding_data[target_line-1].joint[5] >= sys_status.sdata.jnt_ref[5]-minus_limit
                 &&welding_data[target_line-1].joint[5] <= sys_status.sdata.jnt_ref[5]+plus_limit)
             {
                     ui->LCD_POS_CHECK->setStyleSheet("background-color:green;");
             }else {
                 ui->LCD_POS_CHECK->setStyleSheet("background-color:red;");
             }
         }

    }
    if(play_move == 0&& data_robotfree == 1 && ui->SW_A->currentIndex()==2 && ui->SW_B->currentIndex()==1 && ui->TW_10->item(ui->TW_10->rowCount()-1, 1)->text() != "설정 완료")
    {
        if(sys_status.sdata.is_freedrive_mode == 0)
        {
        QString text;
        text.sprintf("freedrive_teach_on()");
        cmdConfirmFlag = false;
        sockCmd.write(text.toStdString().c_str(), text.toStdString().length());
        }
    }
    if(sockConnectionStatusCmd == false && sockConnectionStatusData == false && ui->SW_A->currentIndex()!= 0)
    {
        TLR_step = 0;
        TLR_time_out_count = 0;
        is_first_check = true;
        is_first_count = 0;
        real_simul_count = 0;
        booting_check = false;
        sockConnectionStatusCmd = false;
        sockConnectionStatusData = false;
        // JCT_PLEASE_CHECK_THIS
        sys_status.sdata.task_state = 1;

        ui->SW_A->setCurrentIndex(0);
    }
    if(ui->LE_D_0_data_0->text()=="0"){
        ui->SW_A_Sub->setCurrentIndex(0);
    }
    if(ui->LE_D_0_data_0->text()=="2"){
        ui->SW_A_Sub->setCurrentIndex(1);
    }

    float spd = (float)ui->HS_BASE_SPEED->value()/100.0;

    if(fabs(spd - sys_status.sdata.default_speed) > 0.005){
        if(speed_changed == true){
            // value changed
            BaseSpeedChange(spd);
            speed_changed = false;
        }else{
            /*float spd = sys_status.sdata.default_speed;
            ui->HS_BASE_SPEED->setValue(spd*100);*/
        }
    }

    if(ui->SW_A->currentIndex()==3){
        ui->LB_A_3->setText(ui->LB_A_2->text());
    }
    if(sys_status.sdata.init_error>=1) // 로봇 초기화 에러 코드
    {
        int init_error = sys_status.sdata.init_error;

        switch(init_error){
        case 1:
            ui->LB_A_2->setText("로봇 SMPS 에러 상태입니다.");
            break;
        case 2:
            ui->LB_A_2->setText("로봇 비상스위치 에러 상태입니다.");
            break;
        case 3:
            ui->LB_A_2->setText("로봇 컨트롤 박스 내부 파워 전환 에러 1 상태입니다.");
            break;
        case 4:
            ui->LB_A_2->setText("로봇 컨트롤 박스 내부 파워 전환 에러 2 상태입니다.");
            break;
        case 5:
            ui->LB_A_2->setText("로봇 접속 에러 상태입니다.");
            break;
        case 6:
            ui->LB_A_2->setText("로봇 초기화 에러 상태입니다.");
            break;
        case 7:
            ui->LB_A_2->setText("로봇 부하 세팅 검사 에러 상태입니다.");
            break;
        case 8:
            ui->LB_A_2->setText("로봇 툴플랜지 접속 에러 상태입니다.");
            break;
        case 9:
            ui->LB_A_2->setText("로봇 툴플랜지 각도 에러 상태입니다.");
            break;
        case 10:
            ui->LB_A_2->setText("로봇 모터 제어기 엔코더 초기값 에러 1 상태입니다.");
            break;
        case 11:
            ui->LB_A_2->setText("로봇 모터 제어기 엔코더 초기값 에러 2 상태입니다.");
            break;
        case 12:
            ui->LB_A_2->setText("로봇 디지털 인풋 16/17 단락 에러 상태입니다.");
            break;
        case 13:
            ui->LB_A_2->setText("로봇 48V 스위치 에러 상태입니다.");
            break;
        case 14:
            ui->LB_A_2->setText("로봇 직접교시 버튼 눌림 에러 상태입니다.");
            break;
        default:

            break;

        }
    }
    if(sys_status.sdata.op_stat_sos_flag>=1) // 로봇 장치 오류 발견 상태
    {
        int op_stat_sos_flag = sys_status.sdata.op_stat_sos_flag;
        switch(op_stat_sos_flag){
        case 1:
            ui->LB_A_2->setText("로봇 PVL 에러 상태입니다.");
            break;
        case 2:
            ui->LB_A_2->setText("로봇 CPU 에러 상태입니다.");
            break;
        case 3:
            ui->LB_A_2->setText("로봇 Big 에러 상태입니다.");
            break;
        case 4:
            ui->LB_A_2->setText("로봇 Input 에러 상태입니다.");
            break;
        case 5:
            ui->LB_A_2->setText("로봇 JAM 에러 상태입니다.");
            break;
        case 6:
            ui->LB_A_2->setText("로봇 Over Current 에러 상태입니다.");
            break;
        case 7:
            ui->LB_A_2->setText("로봇 관절 각도 에러 상태입니다.");
            break;
        case 8:
            ui->LB_A_2->setText("로봇 제어 모드 에러 상태입니다.");
            break;
        case 9:
            ui->LB_A_2->setText("로봇 엔코더 오차 에러 상태입니다.");
            break;
        case 10:
            ui->LB_A_2->setText("로봇 상위제어기 전류 에러 상태입니다.");
            break;
        case 11:
            ui->LB_A_2->setText("로봇 온도 에러 상태입니다.");
            break;
        case 12:
            ui->LB_A_2->setText("로봇 직접교시 속도 초과 에러 상태입니다.");
            break;
        default:
            break;

        }
    }
    if(sys_status.sdata.op_stat_ems_flag>=1)
    {
        int op_stat_ems_flag = sys_status.sdata.op_stat_ems_flag;
        switch(op_stat_ems_flag){
        case 1:
            ui->LB_A_2->setText("로봇이 쭉 뻗은 상태에서 TCP 명령 들어왔습니다.");
            break;
        case 2:
            ui->LB_A_2->setText("로봇 TCP 명령의 한계 도달 오류 상태입니다.");
            break;
        case 3:
            ui->LB_A_2->setText("로봇 관절 각도 명령의 한계 도달 오류 상태입니다.");
            break;
        case 4:
            ui->LB_A_2->setText("로봇 해가 없는 TCP 명령 오류 상태입니다.");
            break;
        default:
            break;
        }
    }

    if(sys_status.sdata.op_stat_collision_occur == 1)
    {
        ui->LB_A_2->setText("외부 충돌 감지 상태입니다.");

        // JCT_PLEASE_CHECK_THIS
        if(popup_timer > 10){
            QMessageBox msgBox;
            msgBox.setText("!!! 충돌감지가 발생 !!!");
            msgBox.setInformativeText("로봇 팔에 외부 충돌이 감지되었습니다.\계속 진행하겠습니까?");
            msgBox.setStandardButtons(QMessageBox::Yes | QMessageBox::No);
            msgBox.setDefaultButton(QMessageBox::No);
            qDebug()<<"Show Popup op_stat_collision_occur";
            int ret = msgBox.exec();
            popup_timer = 0;
            switch(ret){
            case QMessageBox::Yes:
                resume_Collision();
                break;
            case QMessageBox::No:
                on_PB_B_2_Stop_clicked();
                break;
            default:
                break;
            }
        }
    }
    if(sys_status.sdata.op_stat_self_collision == 1)
    {
        ui->LB_A_2->setText("자가 충돌 감지 상태입니다.");
    }
    if(ui->LE_D_0_data_0->text()=="3")
    {
        if(sys_status.sdata.digital_in[4] == 0 || sys_status.sdata.digital_in[9] == 0)
        {
            ui->LB_A_2->setText("비상정지 상태입니다.");
            if(data_axis7 == 1){
            is_first_check = true;
            is_first_count = 0;
            real_simul_count = 0;
            booting_check = false;
            }
            if(sys_status.sdata.task_state != 1){
                on_PB_B_2_Stop_clicked();
            }
        }
    }
    if(ui->LE_D_0_data_0->text()=="2")
    {
        if(sys_status.sdata.digital_in[4] == 0 || sys_status.sdata.digital_in[7] == 0 || sys_status.sdata.digital_in[11] == 0 || sys_status.sdata.digital_in[14] == 0)
        {
            ui->LB_A_2->setText("비상정지 상태입니다.");
            if(data_axis7 == 1){
            is_first_check = true;
            is_first_count = 0;
            real_simul_count = 0;
            booting_check = false;
            }
            if(sys_status.sdata.task_state != 1){
                on_PB_B_2_Stop_clicked();
            }
        }
    }

    if(ui->LE_D_0_data_0->text()=="1")
    {
        if(sys_status.sdata.digital_in[4] == 0 || sys_status.sdata.digital_in[9] == 0 || sys_status.sdata.digital_in[11] == 0)
        {
            ui->LB_A_2->setText("비상정지 상태입니다.");
            if(data_axis7 == 1){
            is_first_check = true;
            is_first_count = 0;
            real_simul_count = 0;
            booting_check = false;
            }
            if(sys_status.sdata.task_state != 1){
                on_PB_B_2_Stop_clicked();
            }
        }
    }
    if(ui->LE_D_0_data_0->text()=="0"){
        if(sys_status.sdata.digital_in[4] == 0)
        {
            ui->LB_A_2->setText("비상정지 상태입니다.");
            if(data_axis7 == 1){
            is_first_check = true;
            is_first_count = 0;
            real_simul_count = 0;
            booting_check = false;
            }
            if(sys_status.sdata.task_state != 1){
                on_PB_B_2_Stop_clicked();
            }
        }
    }
    if(data_weld_type == 3){
        if(data_axis7 == 1 && data_axis8 == 1){
            if(sys_status.sdata.digital_in[15] == 0)
            {
                ui->LB_A_2->setText("비상정지 상태입니다.");
                if(data_axis7 == 1){
                is_first_check = true;
                is_first_count = 0;
                real_simul_count = 0;
                booting_check = false;
                }
                if(sys_status.sdata.task_state != 1){
                    on_PB_B_2_Stop_clicked();
                }
            }
            if(sys_status.sdata.digital_in[10] == 1)
            {
                ui->LB_A_2->setText("와이어 앞 라인 검출 상태입니다.");
                if(sys_status.sdata.task_state != 1){
                    on_PB_B_2_Stop_clicked();
                }
            }
            if(sys_status.sdata.digital_in[11] == 1)
            {
                ui->LB_A_2->setText("와이어 뒷 라인 검출 상태입니다.");
                if(sys_status.sdata.task_state != 1){
                    on_PB_B_2_Stop_clicked();
                }
            }
        }

    }
    if(data_weld_type !=3){
        if(ui->LE_D_0_data_0->text()=="0")
        {
            if(sys_status.sdata.digital_in[4]==1 && sys_status.sdata.init_error==0 && sys_status.sdata.op_stat_sos_flag == 0 && sys_status.sdata.op_stat_ems_flag == 0 && sys_status.sdata.op_stat_collision_occur == 0 && sys_status.sdata.op_stat_self_collision != 1) // 로봇 초기화 에러 코드
            {
                ui->LB_A_2->setText("");
            }
        }
        if(ui->LE_D_0_data_0->text()=="1")
        {
            if(sys_status.sdata.digital_in[4]==1 && sys_status.sdata.digital_in[9]==1 && sys_status.sdata.digital_in[11]==1 && sys_status.sdata.init_error==0 && sys_status.sdata.op_stat_sos_flag == 0 && sys_status.sdata.op_stat_ems_flag == 0 && sys_status.sdata.op_stat_collision_occur == 0 && sys_status.sdata.op_stat_self_collision != 1) // 로봇 초기화 에러 코드
            {
                ui->LB_A_2->setText("");
            }
        }
        if(ui->LE_D_0_data_0->text()=="2")
        {
            if(sys_status.sdata.digital_in[4] == 1 && sys_status.sdata.digital_in[7] == 1 && sys_status.sdata.digital_in[11] == 1 && sys_status.sdata.digital_in[14] == 1 && sys_status.sdata.init_error==0 && sys_status.sdata.op_stat_sos_flag == 0 && sys_status.sdata.op_stat_ems_flag == 0 && sys_status.sdata.op_stat_collision_occur == 0 && sys_status.sdata.op_stat_self_collision != 1) // 로봇 초기화 에러 코드
            {
                ui->LB_A_2->setText("");
            }
        }
        if(ui->LE_D_0_data_0->text()=="3")
        {
            if(sys_status.sdata.digital_in[4]==1 && sys_status.sdata.digital_in[9]==1 && sys_status.sdata.init_error==0 && sys_status.sdata.op_stat_sos_flag == 0 && sys_status.sdata.op_stat_ems_flag == 0 && sys_status.sdata.op_stat_collision_occur == 0 && sys_status.sdata.op_stat_self_collision != 1) // 로봇 초기화 에러 코드
            {
                ui->LB_A_2->setText("");
            }
        }
    }
    if(data_weld_type == 3){
        if(data_axis7 == 1 && data_axis8 == 1){
            if(sys_status.sdata.digital_in[4]==1 && sys_status.sdata.init_error==0 && sys_status.sdata.op_stat_sos_flag == 0 && sys_status.sdata.op_stat_ems_flag == 0 && sys_status.sdata.op_stat_collision_occur == 0&& sys_status.sdata.op_stat_self_collision != 1 && sys_status.sdata.digital_in[15]==1 && sys_status.sdata.digital_in[10] == 0 && sys_status.sdata.digital_in[11] == 0) // 로봇 초기화 에러 코드
            {
                ui->LB_A_2->setText("");
            }
        }
        if(data_axis7 == 0 && data_axis8 == 0){
            if(sys_status.sdata.digital_in[4]==1 && sys_status.sdata.init_error==0 && sys_status.sdata.op_stat_sos_flag == 0 && sys_status.sdata.op_stat_ems_flag == 0 && sys_status.sdata.op_stat_collision_occur == 0&& sys_status.sdata.op_stat_self_collision != 1) // 로봇 초기화 에러 코드
            {
                ui->LB_A_2->setText("");
            }
        }

    }

    if(data_weld_type == 3){
        ui->TW_1->horizontalHeaderItem(1)->setText("JOB No");
        ui->TW_2->horizontalHeaderItem(0)->setText("JOB No");
        ui->TW_10->horizontalHeaderItem(15)->setText("JOB No");
        ui->LB_B0_11_A->setText("JOB No");
        ui->LB_110->setText("JOB");
        ui->LB_111->setText("No");
    }
    if(data_weld_type == 4){
        ui->TW_1->horizontalHeaderItem(2)->setText("Sync(50~150%)");
        ui->TW_1->horizontalHeaderItem(9)->setText("ON시 Sync(50~150%)");
        ui->TW_1->horizontalHeaderItem(12)->setText("OFF시 Sync(50~150%)");

        ui->TW_2->horizontalHeaderItem(1)->setText("Sync(50~150%)");
        ui->TW_2->horizontalHeaderItem(4)->setText("ON시 Sync(50~150%)");
        ui->TW_2->horizontalHeaderItem(7)->setText("OFF시 Sync(50~150%)");

        ui->TW_10->horizontalHeaderItem(16)->setText("Sync(50~150%)");
        ui->TW_10->horizontalHeaderItem(23)->setText("ON시 Sync(50~150%)");
        ui->TW_10->horizontalHeaderItem(26)->setText("OFF시 Sync(50~150%)");

        ui->LB_B0_11_V->setText("Sync(50~150%)");
        ui->LB_B0_11_ONV->setText("ON 시 Sync(50~150%)");
        ui->LB_B0_11_OFFV->setText("OFF 시 Sync(50~150%)");
        ui->LB_100->setText("Sync");
        ui->LB_101->setText("(50~150%)");
        ui->LB_102->setText("Sync");
        ui->LB_103->setText("Sync");
    }
    if(setting_is_tig_welder == 1 && data_weld_type !=3 && data_weld_type !=4){
        ui->TW_1->horizontalHeaderItem(2)->setText("WIRE(mm/s)");
        ui->TW_1->horizontalHeaderItem(9)->setText("ON시 WIRE(mm/s)");
        ui->TW_1->horizontalHeaderItem(12)->setText("OFF시 WIRE(mm/s)");

        ui->TW_2->horizontalHeaderItem(1)->setText("WIRE(mm/s)");
        ui->TW_2->horizontalHeaderItem(4)->setText("ON시 WIRE(mm/s)");
        ui->TW_2->horizontalHeaderItem(7)->setText("OFF시 WIRE(mm/s)");

        ui->TW_10->horizontalHeaderItem(16)->setText("WIRE(mm/s)");
        ui->TW_10->horizontalHeaderItem(23)->setText("ON시 WIRE(mm/s)");
        ui->TW_10->horizontalHeaderItem(26)->setText("OFF시 WIRE(mm/s)");

        ui->LB_B0_11_V->setText("WIRE(mm/s)");
        ui->LB_B0_11_ONV->setText("ON 시 WIRE(mm/s)");
        ui->LB_B0_11_OFFV->setText("OFF 시 WIRE(mm/s)");
        ui->LB_100->setText("WIRE");
        ui->LB_101->setText("(mm/s)");
        ui->LB_102->setText("WIRE");
        ui->LB_103->setText("WIRE");
    }
    if(setting_is_tig_welder == 0 && data_weld_type !=3 && data_weld_type !=4){
        ui->TW_1->horizontalHeaderItem(2)->setText("전압(V)");
        ui->TW_1->horizontalHeaderItem(9)->setText("ON시 전압(V)");
        ui->TW_1->horizontalHeaderItem(12)->setText("OFF시 전압(V)");

        ui->TW_2->horizontalHeaderItem(1)->setText("전압(V)");
        ui->TW_2->horizontalHeaderItem(4)->setText("ON시 전압(V)");
        ui->TW_2->horizontalHeaderItem(7)->setText("OFF시 전압(V)");

        ui->TW_10->horizontalHeaderItem(16)->setText("전압(V)");
        ui->TW_10->horizontalHeaderItem(23)->setText("ON시 전압(V)");
        ui->TW_10->horizontalHeaderItem(26)->setText("OFF시 전압(V)");

        ui->LB_B0_11_V->setText("전압(V)");
        ui->LB_B0_11_ONV->setText("ON 시 전압(V)");
        ui->LB_B0_11_OFFV->setText("OFF 시 전압(V)");
        ui->LB_100->setText("전압");
        ui->LB_101->setText("(V)");
        ui->LB_102->setText("전압(V)");
        ui->LB_103->setText("전압(V)");
    }

    if(sockConnectionStatusCmd && sockConnectionStatusData){
        // ===========================================================================
        // 로봇 정보 획득
        // ===========================================================================
        sockData.write("reqdata ");
        Handler_Trans_Load_Run();
        Handler_IO();

        if(is_first_check){
            if(is_first_count > 10){
                if(sys_status.sdata.init_state_info != 6){
                    qDebug()<<"활성화 신호 전송";
                    sockCmd.write("mc jall init ");
                }else{
                    qDebug()<<"이미 활성화 되어 있음";
                    booting_check = true;

                }
                is_first_check = false;
                is_first_count = 0;
            }
            is_first_count++;
        }
        if(sys_status.sdata.init_state_info == 6 && sys_status.sdata.program_mode == 1){
            real_simul_count++;
            if(real_simul_count > 10){
                real_simul_count = 0;
                qDebug()<<"리얼 모드 전환 전송";
                sockCmd.write("pgmode real ");
                booting_check = true;
            }
        }else{
            real_simul_count = 0;
        }
        if(sys_status.sdata.init_state_info == 6 && sys_status.sdata.program_mode == 0 && booting_check == true){
            ui->SW_A->setCurrentIndex(1);
            booting_check = false;
            mode_type = 0;
            play_type = 0;
        }

        // ===========================================================================
        // LCD 정보창 업데이트
        // ===========================================================================

        ui->LCD_STATE_CONNECTION_A0->setStyleSheet("background-color:green;");
        ui->LCD_STATE_CONNECTION_A1->setStyleSheet("background-color:green;");
        ui->LCD_STATE_CONNECTION_A2->setStyleSheet("background-color:green;");
        ui->LCD_STATE_CONNECTION_A3->setStyleSheet("background-color:green;");

        // 6 = ARM is activated
        if(sys_status.sdata.init_state_info == 6){
            ui->LCD_STATE_ARM_ACTIVATION_A0->setStyleSheet("background-color:green;");
            ui->LCD_STATE_ARM_ACTIVATION_A1->setStyleSheet("background-color:green;");
            ui->LCD_STATE_ARM_ACTIVATION_A2->setStyleSheet("background-color:green;");
            ui->LCD_STATE_ARM_ACTIVATION_A3->setStyleSheet("background-color:green;");

        }else{
            ui->LCD_STATE_ARM_ACTIVATION_A0->setStyleSheet("background-color:red;");
            ui->LCD_STATE_ARM_ACTIVATION_A1->setStyleSheet("background-color:red;");
            ui->LCD_STATE_ARM_ACTIVATION_A2->setStyleSheet("background-color:red;");
            ui->LCD_STATE_ARM_ACTIVATION_A3->setStyleSheet("background-color:red;");
        }
        // 1 = simulation mode
        if(sys_status.sdata.program_mode == 1){
            ui->LCD_STATE_REAL_SIMUL_A0->setStyleSheet("background-color:red;");
            ui->LCD_STATE_REAL_SIMUL_A1->setStyleSheet("background-color:red;");
            ui->LCD_STATE_REAL_SIMUL_A2->setStyleSheet("background-color:red;");
            ui->LCD_STATE_REAL_SIMUL_A3->setStyleSheet("background-color:red;");

        }else{
            ui->LCD_STATE_REAL_SIMUL_A0->setStyleSheet("background-color:green;");
            ui->LCD_STATE_REAL_SIMUL_A1->setStyleSheet("background-color:green;");
            ui->LCD_STATE_REAL_SIMUL_A2->setStyleSheet("background-color:green;");
            ui->LCD_STATE_REAL_SIMUL_A3->setStyleSheet("background-color:green;");
        }
        //
        if(sys_status.sdata.is_freedrive_mode){
            ui->LCD_STATE_DIRECT_TEACH_A1->setStyleSheet("background-color:yellow;");
            ui->LCD_STATE_DIRECT_TEACH_A2->setStyleSheet("background-color:yellow;");
            ui->LCD_STATE_DIRECT_TEACH_A3->setStyleSheet("background-color:yellow;");
        }else{
            ui->LCD_STATE_DIRECT_TEACH_A1->setStyleSheet("background-color:green;");
            ui->LCD_STATE_DIRECT_TEACH_A2->setStyleSheet("background-color:green;");
            ui->LCD_STATE_DIRECT_TEACH_A3->setStyleSheet("background-color:green;");
        }

        // 1 = idle / 2 = pause / 3 = program run
        if(sys_status.sdata.task_state == 3){
            ui->LCD_STATE_PROGRAM_A1->setStyleSheet("background-color:orange;");//재생중~
            ui->LCD_STATE_PROGRAM_A2->setStyleSheet("background-color:orange;");//재생중~
            ui->LCD_STATE_PROGRAM_A3->setStyleSheet("background-color:orange;");//재생중~
        }else if(sys_status.sdata.task_state == 2){
            ui->LCD_STATE_PROGRAM_A1->setStyleSheet("background-color:yellow;");//일시정지
            ui->LCD_STATE_PROGRAM_A2->setStyleSheet("background-color:yellow;");//일시정지
            ui->LCD_STATE_PROGRAM_A3->setStyleSheet("background-color:yellow;");//일시정지
        }else{
            ui->LCD_STATE_PROGRAM_A1->setStyleSheet("background-color:green;");//프로그램 재생중 아님 ...idle
            ui->LCD_STATE_PROGRAM_A2->setStyleSheet("background-color:green;");//프로그램 재생중 아님 ...idle
            ui->LCD_STATE_PROGRAM_A3->setStyleSheet("background-color:green;");//프로그램 재생중 아님 ...idle
        }

        if(sys_status.sdata.digital_in[0])
            ui->LCD_DIN_0->setStyleSheet("background-color:green;");
        else
            ui->LCD_DIN_0->setStyleSheet("background-color:red;");
        if(sys_status.sdata.digital_in[1])
            ui->LCD_DIN_1->setStyleSheet("background-color:green;");
        else
            ui->LCD_DIN_1->setStyleSheet("background-color:red;");
        if(sys_status.sdata.digital_in[2])
            ui->LCD_DIN_2->setStyleSheet("background-color:green;");
        else
            ui->LCD_DIN_2->setStyleSheet("background-color:red;");
        if(sys_status.sdata.digital_in[3])
            ui->LCD_DIN_3->setStyleSheet("background-color:green;");
        else
            ui->LCD_DIN_3->setStyleSheet("background-color:red;");
        if(sys_status.sdata.digital_in[4])
            ui->LCD_DIN_4->setStyleSheet("background-color:green;");
        else
            ui->LCD_DIN_4->setStyleSheet("background-color:red;");
        if(sys_status.sdata.digital_in[5])
            ui->LCD_DIN_5->setStyleSheet("background-color:green;");
        else
            ui->LCD_DIN_5->setStyleSheet("background-color:red;");
        if(sys_status.sdata.digital_in[6])
            ui->LCD_DIN_6->setStyleSheet("background-color:green;");
        else
            ui->LCD_DIN_6->setStyleSheet("background-color:red;");
        if(sys_status.sdata.digital_in[7])
            ui->LCD_DIN_7->setStyleSheet("background-color:green;");
        else
            ui->LCD_DIN_7->setStyleSheet("background-color:red;");
        if(sys_status.sdata.digital_in[8])
            ui->LCD_DIN_8->setStyleSheet("background-color:green;");
        else
            ui->LCD_DIN_8->setStyleSheet("background-color:red;");
        if(sys_status.sdata.digital_in[9])
            ui->LCD_DIN_9->setStyleSheet("background-color:green;");
        else
            ui->LCD_DIN_9->setStyleSheet("background-color:red;");
        if(sys_status.sdata.digital_in[10])
            ui->LCD_DIN_10->setStyleSheet("background-color:green;");
        else
            ui->LCD_DIN_10->setStyleSheet("background-color:red;");
        if(sys_status.sdata.digital_in[11])
            ui->LCD_DIN_11->setStyleSheet("background-color:green;");
        else
            ui->LCD_DIN_11->setStyleSheet("background-color:red;");
        if(sys_status.sdata.digital_in[12])
            ui->LCD_DIN_12->setStyleSheet("background-color:green;");
        else
            ui->LCD_DIN_12->setStyleSheet("background-color:red;");
        if(sys_status.sdata.digital_in[13])
            ui->LCD_DIN_13->setStyleSheet("background-color:green;");
        else
            ui->LCD_DIN_13->setStyleSheet("background-color:red;");
        if(sys_status.sdata.digital_in[14])
            ui->LCD_DIN_14->setStyleSheet("background-color:green;");
        else
            ui->LCD_DIN_14->setStyleSheet("background-color:red;");
        if(sys_status.sdata.digital_in[15])
            ui->LCD_DIN_15->setStyleSheet("background-color:green;");
        else
            ui->LCD_DIN_15->setStyleSheet("background-color:red;");

        if(sys_status.sdata.digital_out[0])
            ui->LCD_DOUT_0->setStyleSheet("background-color:green;");
        else
            ui->LCD_DOUT_0->setStyleSheet("background-color:red;");
        if(sys_status.sdata.digital_out[1])
            ui->LCD_DOUT_1->setStyleSheet("background-color:green;");
        else
            ui->LCD_DOUT_1->setStyleSheet("background-color:red;");
        if(sys_status.sdata.digital_out[2])
            ui->LCD_DOUT_2->setStyleSheet("background-color:green;");
        else
            ui->LCD_DOUT_2->setStyleSheet("background-color:red;");
        if(sys_status.sdata.digital_out[3])
            ui->LCD_DOUT_3->setStyleSheet("background-color:green;");
        else
            ui->LCD_DOUT_3->setStyleSheet("background-color:red;");
        if(sys_status.sdata.digital_out[4])
            ui->LCD_DOUT_4->setStyleSheet("background-color:green;");
        else
            ui->LCD_DOUT_4->setStyleSheet("background-color:red;");
        if(sys_status.sdata.digital_out[5])
            ui->LCD_DOUT_5->setStyleSheet("background-color:green;");
        else
            ui->LCD_DOUT_5->setStyleSheet("background-color:red;");
        if(sys_status.sdata.digital_out[6])
            ui->LCD_DOUT_6->setStyleSheet("background-color:green;");
        else
            ui->LCD_DOUT_6->setStyleSheet("background-color:red;");
        if(sys_status.sdata.digital_out[7])
            ui->LCD_DOUT_7->setStyleSheet("background-color:green;");
        else
            ui->LCD_DOUT_7->setStyleSheet("background-color:red;");
        if(sys_status.sdata.digital_out[8])
            ui->LCD_DOUT_8->setStyleSheet("background-color:green;");
        else
            ui->LCD_DOUT_8->setStyleSheet("background-color:red;");
        if(sys_status.sdata.digital_out[9])
            ui->LCD_DOUT_9->setStyleSheet("background-color:green;");
        else
            ui->LCD_DOUT_9->setStyleSheet("background-color:red;");
        if(sys_status.sdata.digital_out[10])
            ui->LCD_DOUT_10->setStyleSheet("background-color:green;");
        else
            ui->LCD_DOUT_10->setStyleSheet("background-color:red;");
        if(sys_status.sdata.digital_out[11])
            ui->LCD_DOUT_11->setStyleSheet("background-color:green;");
        else
            ui->LCD_DOUT_11->setStyleSheet("background-color:red;");
        if(sys_status.sdata.digital_out[12])
            ui->LCD_DOUT_12->setStyleSheet("background-color:green;");
        else
            ui->LCD_DOUT_12->setStyleSheet("background-color:red;");
        if(sys_status.sdata.digital_out[13])
            ui->LCD_DOUT_13->setStyleSheet("background-color:green;");
        else
            ui->LCD_DOUT_13->setStyleSheet("background-color:red;");
        if(sys_status.sdata.digital_out[14])
            ui->LCD_DOUT_14->setStyleSheet("background-color:green;");
        else
            ui->LCD_DOUT_14->setStyleSheet("background-color:red;");
        if(sys_status.sdata.digital_out[15])
            ui->LCD_DOUT_15->setStyleSheet("background-color:green;");
        else
            ui->LCD_DOUT_15->setStyleSheet("background-color:red;");

        // ===========================================================================
        // 금지 버튼 처리
        // ===========================================================================

        if(sys_status.sdata.task_state == 1){//idle 상태일때
            ui->PB_B_2_Pause->setEnabled(false);
            ui->PB_B_2_Stop->setEnabled(false);
        }else{
            ui->PB_B_2_Pause->setEnabled(true);
            ui->PB_B_2_Stop->setEnabled(true);
        }

        if(TLR_step == 0 && sys_status.sdata.task_state != 3 && sys_status.sdata.is_freedrive_mode == 0){
            ui->PB_B_2_Play->setEnabled(true);
            ui->PB_C_7_Play->setEnabled(true);
        }else{
            ui->PB_B_2_Play->setEnabled(false);
            ui->PB_C_7_Play->setEnabled(false);
        }
        // ===========================================================================
        // 램프 처리
        // ===========================================================================
        if(data_weld_type == 3){
            if(data_axis7 == 1 && data_axis8 == 1){
                if(sys_status.sdata.task_state != 1 && lamp_memory == 1){
                    lamp_memory=0;
                    qDebug()<<"r1"<<endl;
                }
                if(sys_status.sdata.task_state != 2 && lamp_memory == 2){

                    lamp_memory=0;
                    qDebug()<<"r2"<<endl;
                }
                if(sys_status.sdata.task_state != 3 && lamp_memory == 3){
                    lamp_memory=0;
                    qDebug()<<"r3"<<endl;
                }

                if(sys_status.sdata.task_state == 1 && lamp_memory == 0){//idle 상태일때
                    if(lamp_memory==0){
                        QString text;
                        text.sprintf("ex_digital_out -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,0,0");
                        cmdConfirmFlag = false;
                        sockCmd.write(text.toStdString().c_str(), text.toStdString().length());
                        if(data_weld_type == 3)
                        {
                            QString text;
                            text.sprintf("digital_out -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1");
                            cmdConfirmFlag = false;
                            sockCmd.write(text.toStdString().c_str(), text.toStdString().length());
                        }
                        lamp_memory=1;
                    }
                }
                if(sys_status.sdata.task_state == 2 && lamp_memory == 0){//idle 상태일때
                    if(lamp_memory==0){
                        QString text;
                        text.sprintf("ex_digital_out -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,0,0");
                        cmdConfirmFlag = false;
                        sockCmd.write(text.toStdString().c_str(), text.toStdString().length());
                        lamp_memory=2;
                    }
                }
                if(sys_status.sdata.task_state == 3 && lamp_memory == 0){//idle 상태일때
                    if(lamp_memory==0){
                        QString text;
                        text.sprintf("ex_digital_out -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,1,0");
                        cmdConfirmFlag = false;
                        sockCmd.write(text.toStdString().c_str(), text.toStdString().length());
                        if(data_weld_type == 3)
                        {
                            QString text;
                            text.sprintf("digital_out -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,-1,-1");
                            cmdConfirmFlag = false;
                            sockCmd.write(text.toStdString().c_str(), text.toStdString().length());
                        }
                        lamp_memory=3;
                    }
                }
            }

        }

        // ===========================================================================
        // 로봇 정보 업데이트
        // ===========================================================================
        ui->ROBOT_INFO_J_0->setText(QString::number(sys_status.sdata.jnt_ref[0]));
        ui->ROBOT_INFO_J_1->setText(QString::number(sys_status.sdata.jnt_ref[1]));
        ui->ROBOT_INFO_J_2->setText(QString::number(sys_status.sdata.jnt_ref[2]));
        ui->ROBOT_INFO_J_3->setText(QString::number(sys_status.sdata.jnt_ref[3]));
        ui->ROBOT_INFO_J_4->setText(QString::number(sys_status.sdata.jnt_ref[4]));
        ui->ROBOT_INFO_J_5->setText(QString::number(sys_status.sdata.jnt_ref[5]));

        ui->ROBOT_INFO_TCP_0->setText(QString::number(sys_status.sdata.tcp_ref[0]));
        ui->ROBOT_INFO_TCP_1->setText(QString::number(sys_status.sdata.tcp_ref[1]));
        ui->ROBOT_INFO_TCP_2->setText(QString::number(sys_status.sdata.tcp_ref[2]));
        ui->ROBOT_INFO_TCP_3->setText(QString::number(sys_status.sdata.tcp_ref[3]));
        ui->ROBOT_INFO_TCP_4->setText(QString::number(sys_status.sdata.tcp_ref[4]));
        ui->ROBOT_INFO_TCP_5->setText(QString::number(sys_status.sdata.tcp_ref[5]));
    }else{
        ui->LCD_STATE_CONNECTION_A0->setStyleSheet("background-color:red;");
        ui->LCD_STATE_CONNECTION_A1->setStyleSheet("background-color:red;");
        ui->LCD_STATE_CONNECTION_A2->setStyleSheet("background-color:red;");
        ui->LCD_STATE_ARM_ACTIVATION_A0->setStyleSheet("background-color:black;");
        ui->LCD_STATE_ARM_ACTIVATION_A1->setStyleSheet("background-color:black;");
        ui->LCD_STATE_ARM_ACTIVATION_A2->setStyleSheet("background-color:black;");
        ui->LCD_STATE_REAL_SIMUL_A0->setStyleSheet("background-color:black;");
        ui->LCD_STATE_REAL_SIMUL_A1->setStyleSheet("background-color:black;");
        ui->LCD_STATE_REAL_SIMUL_A2->setStyleSheet("background-color:black;");
        ui->LCD_STATE_DIRECT_TEACH_A1->setStyleSheet("background-color:black;");
        ui->LCD_STATE_DIRECT_TEACH_A2->setStyleSheet("background-color:black;");
        ui->LCD_STATE_PROGRAM_A1->setStyleSheet("background-color:black;");
        ui->LCD_STATE_PROGRAM_A2->setStyleSheet("background-color:black;");
        is_first_check = true;
        is_first_count = 0;
        real_simul_count = 0;
        booting_check = false;
    }
    //
    //
    QDateTime W_time(QDateTime::currentDateTime());

    ui->LB_Time_A0->setText(W_time.toString("hh : mm : ss"));
    ui->LB_Time_A1->setText(W_time.toString("hh : mm : ss"));
    ui->LB_Time_A2->setText(W_time.toString("hh : mm : ss"));
    ui->LB_Time_A3->setText(W_time.toString("hh : mm : ss"));
    ui->LB_Time_A4->setText(W_time.toString("hh : mm : ss"));
    ui->LB_Time_A5->setText(W_time.toString("hh : mm : ss"));

    if(data_axis7 == 0)
    {
        ui->PB_D_0_Use_Axis7->setStyleSheet("QPushButton{border-image: url(:/a/image/빈동그라미-45x45.png)}");
        ui->PB_D_0_Unuse_Axis7->setStyleSheet("QPushButton{border-image: url(:/a/image/오른쪽체크눌-45x45.png)}");
    }
    if(data_axis7 == 1)
    {
        ui->PB_D_0_Use_Axis7->setStyleSheet("QPushButton{border-image: url(:/a/image/오른쪽체크눌-45x45.png)}");
        ui->PB_D_0_Unuse_Axis7->setStyleSheet("QPushButton{border-image: url(:/a/image/빈동그라미-45x45.png)}");
    }
    if(data_axis8 == 0)
    {
        ui->PB_D_0_Use_Axis8->setStyleSheet("QPushButton{border-image: url(:/a/image/빈동그라미-45x45.png)}");
        ui->PB_D_0_Unuse_Axis8->setStyleSheet("QPushButton{border-image: url(:/a/image/오른쪽체크눌-45x45.png)}");
    }
    if(data_axis8 == 1)
    {
        ui->PB_D_0_Use_Axis8->setStyleSheet("QPushButton{border-image: url(:/a/image/오른쪽체크눌-45x45.png)}");
        ui->PB_D_0_Unuse_Axis8->setStyleSheet("QPushButton{border-image: url(:/a/image/빈동그라미-45x45.png)}");
    }
    if(data_axis9 == 0)
    {
        ui->PB_D_0_Use_Axis9->setStyleSheet("QPushButton{border-image: url(:/a/image/빈동그라미-45x45.png)}");
        ui->PB_D_0_Unuse_Axis9->setStyleSheet("QPushButton{border-image: url(:/a/image/오른쪽체크눌-45x45.png)}");
    }
    if(data_axis9 == 1)
    {
        ui->PB_D_0_Use_Axis9->setStyleSheet("QPushButton{border-image: url(:/a/image/오른쪽체크눌-45x45.png)}");
        ui->PB_D_0_Unuse_Axis9->setStyleSheet("QPushButton{border-image: url(:/a/image/빈동그라미-45x45.png)}");
    }
    if(data_sound == 0)
    {
        ui->PB_D_0_Use_Sound->setStyleSheet("QPushButton{border-image: url(:/a/image/빈동그라미-45x45.png)}");
        ui->PB_D_0_Unuse_Sound->setStyleSheet("QPushButton{border-image: url(:/a/image/오른쪽체크눌-45x45.png)}");
    }
    if(data_sound == 1)
    {
        ui->PB_D_0_Use_Sound->setStyleSheet("QPushButton{border-image: url(:/a/image/오른쪽체크눌-45x45.png)}");
        ui->PB_D_0_Unuse_Sound->setStyleSheet("QPushButton{border-image: url(:/a/image/빈동그라미-45x45.png)}");
    }
    if(data_tig == 0)
    {
        ui->PB_D_0_Use_Tig->setStyleSheet("QPushButton{border-image: url(:/a/image/빈동그라미-45x45.png)}");
        ui->PB_D_0_Unuse_Tig->setStyleSheet("QPushButton{border-image: url(:/a/image/오른쪽체크눌-45x45.png)}");
    }
    if(data_tig == 1)
    {
        ui->PB_D_0_Use_Tig->setStyleSheet("QPushButton{border-image: url(:/a/image/오른쪽체크눌-45x45.png)}");
        ui->PB_D_0_Unuse_Tig->setStyleSheet("QPushButton{border-image: url(:/a/image/빈동그라미-45x45.png)}");
    }
    if(data_wire == 0)
    {
        ui->PB_D_0_Use_Wire->setStyleSheet("QPushButton{border-image: url(:/a/image/빈동그라미-45x45.png)}");
        ui->PB_D_0_Unuse_Wire->setStyleSheet("QPushButton{border-image: url(:/a/image/오른쪽체크눌-45x45.png)}");
    }
    if(data_wire == 1)
    {
        ui->PB_D_0_Use_Wire->setStyleSheet("QPushButton{border-image: url(:/a/image/오른쪽체크눌-45x45.png)}");
        ui->PB_D_0_Unuse_Wire->setStyleSheet("QPushButton{border-image: url(:/a/image/빈동그라미-45x45.png)}");
    }
    if(data_foot == 0)
    {
        ui->PB_D_0_Use_Foot->setStyleSheet("QPushButton{border-image: url(:/a/image/빈동그라미-45x45.png)}");
        ui->PB_D_0_Unuse_Foot->setStyleSheet("QPushButton{border-image: url(:/a/image/오른쪽체크눌-45x45.png)}");
    }
    if(data_foot == 1)
    {
        ui->PB_D_0_Use_Foot->setStyleSheet("QPushButton{border-image: url(:/a/image/오른쪽체크눌-45x45.png)}");
        ui->PB_D_0_Unuse_Foot->setStyleSheet("QPushButton{border-image: url(:/a/image/빈동그라미-45x45.png)}");
    }
    if(data_robotfree == 0)
    {
        ui->PB_D_0_Use_robotfree->setStyleSheet("QPushButton{border-image: url(:/a/image/빈동그라미-45x45.png)}");
        ui->PB_D_0_Unuse_robotfree->setStyleSheet("QPushButton{border-image: url(:/a/image/오른쪽체크눌-45x45.png)}");
    }
    if(data_robotfree == 1)
    {
        ui->PB_D_0_Use_robotfree->setStyleSheet("QPushButton{border-image: url(:/a/image/오른쪽체크눌-45x45.png)}");
        ui->PB_D_0_Unuse_robotfree->setStyleSheet("QPushButton{border-image: url(:/a/image/빈동그라미-45x45.png)}");
    }
    if(data_weld_play == 0)
    {
        ui->PB_D_0_Use_weld_play->setStyleSheet("QPushButton{border-image: url(:/a/image/빈동그라미-45x45.png)}");
        ui->PB_D_0_Unuse_weld_play->setStyleSheet("QPushButton{border-image: url(:/a/image/오른쪽체크눌-45x45.png)}");
    }
    if(data_weld_play == 1)
    {
        ui->PB_D_0_Use_weld_play->setStyleSheet("QPushButton{border-image: url(:/a/image/오른쪽체크눌-45x45.png)}");
        ui->PB_D_0_Unuse_weld_play->setStyleSheet("QPushButton{border-image: url(:/a/image/빈동그라미-45x45.png)}");
    }

    //용접기 타입
    if(data_weld_type == 0)
    {
        ui->PB_D_0_Use_Analogweld->setStyleSheet("QPushButton{border-image: url(:/a/image/빈동그라미-45x45.png)}");
        ui->PB_D_0_Unuse_Analogweld->setStyleSheet("QPushButton{border-image: url(:/a/image/오른쪽체크눌-45x45.png)}");
        ui->PB_D_0_Use_Digitalweld->setStyleSheet("QPushButton{border-image: url(:/a/image/빈동그라미-45x45.png)}");
        ui->PB_D_0_Unuse_Digitalweld->setStyleSheet("QPushButton{border-image: url(:/a/image/오른쪽체크눌-45x45.png)}");
        ui->PB_D_0_Use_Froniusweld->setStyleSheet("QPushButton{border-image: url(:/a/image/빈동그라미-45x45.png)}");
        ui->PB_D_0_Unuse_Froniusweld->setStyleSheet("QPushButton{border-image: url(:/a/image/오른쪽체크눌-45x45.png)}");
        ui->PB_D_0_Use_Esabweld->setStyleSheet("QPushButton{border-image: url(:/a/image/빈동그라미-45x45.png)}");
        ui->PB_D_0_Unuse_Esabweld->setStyleSheet("QPushButton{border-image: url(:/a/image/오른쪽체크눌-45x45.png)}");
        ui->PB_D_0_Use_Esabweld_Separated->setStyleSheet("QPushButton{border-image: url(:/a/image/빈동그라미-45x45.png)}");
        ui->PB_D_0_Unuse_Esabweld_Separated->setStyleSheet("QPushButton{border-image: url(:/a/image/오른쪽체크눌-45x45.png)}");
    }
    if(data_weld_type == 1)//아날로그용접기
    {
        ui->PB_D_0_Use_Analogweld->setStyleSheet("QPushButton{border-image: url(:/a/image/오른쪽체크눌-45x45.png)}");
        ui->PB_D_0_Unuse_Analogweld->setStyleSheet("QPushButton{border-image: url(:/a/image/빈동그라미-45x45.png)}");
        ui->PB_D_0_Use_Digitalweld->setStyleSheet("QPushButton{border-image: url(:/a/image/빈동그라미-45x45.png)}");
        ui->PB_D_0_Unuse_Digitalweld->setStyleSheet("QPushButton{border-image: url(:/a/image/오른쪽체크눌-45x45.png)}");
        ui->PB_D_0_Use_Froniusweld->setStyleSheet("QPushButton{border-image: url(:/a/image/빈동그라미-45x45.png)}");
        ui->PB_D_0_Unuse_Froniusweld->setStyleSheet("QPushButton{border-image: url(:/a/image/오른쪽체크눌-45x45.png)}");
        ui->PB_D_0_Use_Esabweld->setStyleSheet("QPushButton{border-image: url(:/a/image/빈동그라미-45x45.png)}");
        ui->PB_D_0_Unuse_Esabweld->setStyleSheet("QPushButton{border-image: url(:/a/image/오른쪽체크눌-45x45.png)}");
        ui->PB_D_0_Use_Esabweld_Separated->setStyleSheet("QPushButton{border-image: url(:/a/image/빈동그라미-45x45.png)}");
        ui->PB_D_0_Unuse_Esabweld_Separated->setStyleSheet("QPushButton{border-image: url(:/a/image/오른쪽체크눌-45x45.png)}");
    }
    if(data_weld_type == 2)//디지털용접기
    {
        ui->PB_D_0_Use_Analogweld->setStyleSheet("QPushButton{border-image: url(:/a/image/빈동그라미-45x45.png)}");
        ui->PB_D_0_Unuse_Analogweld->setStyleSheet("QPushButton{border-image: url(:/a/image/오른쪽체크눌-45x45.png)}");
        ui->PB_D_0_Use_Digitalweld->setStyleSheet("QPushButton{border-image: url(:/a/image/오른쪽체크눌-45x45.png)}");
        ui->PB_D_0_Unuse_Digitalweld->setStyleSheet("QPushButton{border-image: url(:/a/image/빈동그라미-45x45.png)}");
        ui->PB_D_0_Use_Froniusweld->setStyleSheet("QPushButton{border-image: url(:/a/image/빈동그라미-45x45.png)}");
        ui->PB_D_0_Unuse_Froniusweld->setStyleSheet("QPushButton{border-image: url(:/a/image/오른쪽체크눌-45x45.png)}");
        ui->PB_D_0_Use_Esabweld->setStyleSheet("QPushButton{border-image: url(:/a/image/빈동그라미-45x45.png)}");
        ui->PB_D_0_Unuse_Esabweld->setStyleSheet("QPushButton{border-image: url(:/a/image/오른쪽체크눌-45x45.png)}");
        ui->PB_D_0_Use_Esabweld_Separated->setStyleSheet("QPushButton{border-image: url(:/a/image/빈동그라미-45x45.png)}");
        ui->PB_D_0_Unuse_Esabweld_Separated->setStyleSheet("QPushButton{border-image: url(:/a/image/오른쪽체크눌-45x45.png)}");
    }
    if(data_weld_type == 3)//프로니우스용접기
    {
        ui->PB_D_0_Use_Analogweld->setStyleSheet("QPushButton{border-image: url(:/a/image/빈동그라미-45x45.png)}");
        ui->PB_D_0_Unuse_Analogweld->setStyleSheet("QPushButton{border-image: url(:/a/image/오른쪽체크눌-45x45.png)}");
        ui->PB_D_0_Use_Digitalweld->setStyleSheet("QPushButton{border-image: url(:/a/image/빈동그라미-45x45.png)}");
        ui->PB_D_0_Unuse_Digitalweld->setStyleSheet("QPushButton{border-image: url(:/a/image/오른쪽체크눌-45x45.png)}");
        ui->PB_D_0_Use_Froniusweld->setStyleSheet("QPushButton{border-image: url(:/a/image/오른쪽체크눌-45x45.png)}");
        ui->PB_D_0_Unuse_Froniusweld->setStyleSheet("QPushButton{border-image: url(:/a/image/빈동그라미-45x45.png)}");
        ui->PB_D_0_Use_Esabweld->setStyleSheet("QPushButton{border-image: url(:/a/image/빈동그라미-45x45.png)}");
        ui->PB_D_0_Unuse_Esabweld->setStyleSheet("QPushButton{border-image: url(:/a/image/오른쪽체크눌-45x45.png)}");
        ui->PB_D_0_Use_Esabweld_Separated->setStyleSheet("QPushButton{border-image: url(:/a/image/빈동그라미-45x45.png)}");
        ui->PB_D_0_Unuse_Esabweld_Separated->setStyleSheet("QPushButton{border-image: url(:/a/image/오른쪽체크눌-45x45.png)}");
    }
    if(data_weld_type == 4)//ESAB용접기 Synergic
    {
        ui->PB_D_0_Use_Analogweld->setStyleSheet("QPushButton{border-image: url(:/a/image/빈동그라미-45x45.png)}");
        ui->PB_D_0_Unuse_Analogweld->setStyleSheet("QPushButton{border-image: url(:/a/image/오른쪽체크눌-45x45.png)}");
        ui->PB_D_0_Use_Digitalweld->setStyleSheet("QPushButton{border-image: url(:/a/image/빈동그라미-45x45.png)}");
        ui->PB_D_0_Unuse_Digitalweld->setStyleSheet("QPushButton{border-image: url(:/a/image/오른쪽체크눌-45x45.png)}");
        ui->PB_D_0_Use_Froniusweld->setStyleSheet("QPushButton{border-image: url(:/a/image/빈동그라미-45x45.png)}");
        ui->PB_D_0_Unuse_Froniusweld->setStyleSheet("QPushButton{border-image: url(:/a/image/오른쪽체크눌-45x45.png)}");
        ui->PB_D_0_Use_Esabweld->setStyleSheet("QPushButton{border-image: url(:/a/image/오른쪽체크눌-45x45.png)}");
        ui->PB_D_0_Unuse_Esabweld->setStyleSheet("QPushButton{border-image: url(:/a/image/빈동그라미-45x45.png)}");
        ui->PB_D_0_Use_Esabweld_Separated->setStyleSheet("QPushButton{border-image: url(:/a/image/빈동그라미-45x45.png)}");
        ui->PB_D_0_Unuse_Esabweld_Separated->setStyleSheet("QPushButton{border-image: url(:/a/image/오른쪽체크눌-45x45.png)}");
    }
    if(data_weld_type == 5)//ESAB용접기 separated
    {
        ui->PB_D_0_Use_Analogweld->setStyleSheet("QPushButton{border-image: url(:/a/image/빈동그라미-45x45.png)}");
        ui->PB_D_0_Unuse_Analogweld->setStyleSheet("QPushButton{border-image: url(:/a/image/오른쪽체크눌-45x45.png)}");
        ui->PB_D_0_Use_Digitalweld->setStyleSheet("QPushButton{border-image: url(:/a/image/빈동그라미-45x45.png)}");
        ui->PB_D_0_Unuse_Digitalweld->setStyleSheet("QPushButton{border-image: url(:/a/image/오른쪽체크눌-45x45.png)}");
        ui->PB_D_0_Use_Froniusweld->setStyleSheet("QPushButton{border-image: url(:/a/image/빈동그라미-45x45.png)}");
        ui->PB_D_0_Unuse_Froniusweld->setStyleSheet("QPushButton{border-image: url(:/a/image/오른쪽체크눌-45x45.png)}");
        ui->PB_D_0_Use_Esabweld->setStyleSheet("QPushButton{border-image: url(:/a/image/빈동그라미-45x45.png)}");
        ui->PB_D_0_Unuse_Esabweld->setStyleSheet("QPushButton{border-image: url(:/a/image/오른쪽체크눌-45x45.png)}");
        ui->PB_D_0_Use_Esabweld_Separated->setStyleSheet("QPushButton{border-image: url(:/a/image/오른쪽체크눌-45x45.png)}");
        ui->PB_D_0_Unuse_Esabweld_Separated->setStyleSheet("QPushButton{border-image: url(:/a/image/빈동그라미-45x45.png)}");
    }

    if(sys_status.sdata.digital_in[0] == 1){
        teach_mode = 1; // 티칭.미교시
    }
    if(sys_status.sdata.digital_in[0] == 0){
        teach_mode = 0; // 티칭.교시
    }
    if(ui->SW_A->currentIndex() == 2 && ui->SW_B->currentIndex() ==0 )
    {
        switch (data_motion) {
        case 0:
            motion_text ="가접용접";
            ui->PB_B_0_0->setStyleSheet("QPushButton{border-image: url(:/a/image/가접용접-눌-128x105.png)}");
            ui->RB_GAJUB->setStyleSheet("QPushButton{border-image: url(:/a/image/가접용접-눌-64x105.png)}");
            ui->PB_B_0_1->setStyleSheet("QPushButton{border-image: url(:/a/image/직선용접-128x105.png)}");
            ui->PB_B_0_2->setStyleSheet("QPushButton{border-image: url(:/a/image/곡선용접반-64x105.png)}");
            ui->PB_B_0_3->setStyleSheet("QPushButton{border-image: url(:/a/image/전환곡선용접반-64x105.png)}");
            ui->PB_B_0_4->setStyleSheet("QPushButton{border-image: url(:/a/image/위빙용접-128x105.png)}");
            ui->PB_B_0_5->setStyleSheet("QPushButton{border-image: url(:/a/image/대지_아이콘_지령대기.png)}");
            ui->PB_B_0_6->setStyleSheet("QPushButton{border-image: url(:/a/image/자유이동-128x105.png)}");
            ui->PB_B_0_7->setStyleSheet("QPushButton{border-image: url(:/a/image/직선이동-128x105.png)}");
            ui->RB_ONEPOINT_WELD->setStyleSheet("QPushButton{border-image: url(:/a/image/1점용접-64x105.png)}");
            ui->PB_B_0_8->setStyleSheet("QPushButton{border-image: url(:/a/image/대지_아이콘_시간대기.png)}");
            break;
        case 1:
            motion_text ="직선용접";
            ui->PB_B_0_0->setStyleSheet("QPushButton{border-image: url(:/a/image/가접용접-128x105.png)}");
            ui->RB_GAJUB->setStyleSheet("QPushButton{border-image: url(:/a/image/가접용접-64x105.png);}");
            ui->PB_B_0_1->setStyleSheet("QPushButton{border-image: url(:/a/image/직선용접-눌-128x105.png)}");
            ui->PB_B_0_2->setStyleSheet("QPushButton{border-image: url(:/a/image/곡선용접반-64x105.png)}");
            ui->PB_B_0_3->setStyleSheet("QPushButton{border-image: url(:/a/image/전환곡선용접반-64x105.png)}");
            ui->PB_B_0_4->setStyleSheet("QPushButton{border-image: url(:/a/image/위빙용접-128x105.png)}");
            ui->PB_B_0_5->setStyleSheet("QPushButton{border-image: url(:/a/image/대지_아이콘_지령대기.png)}");
            ui->PB_B_0_6->setStyleSheet("QPushButton{border-image: url(:/a/image/자유이동-128x105.png)}");
            ui->PB_B_0_7->setStyleSheet("QPushButton{border-image: url(:/a/image/직선이동-128x105.png)}");
            ui->RB_ONEPOINT_WELD->setStyleSheet("QPushButton{border-image: url(:/a/image/1점용접-64x105.png)}");
            ui->PB_B_0_8->setStyleSheet("QPushButton{border-image: url(:/a/image/대지_아이콘_시간대기.png)}");
            break;
        case 2:
            motion_text ="곡선용접";
            ui->PB_B_0_0->setStyleSheet("QPushButton{border-image: url(:/a/image/가접용접-128x105.png)}");
            ui->RB_GAJUB->setStyleSheet("QPushButton{border-image: url(:/a/image/가접용접-64x105.png);}");
            ui->PB_B_0_1->setStyleSheet("QPushButton{border-image: url(:/a/image/직선용접-128x105.png)}");
            ui->PB_B_0_2->setStyleSheet("QPushButton{border-image: url(:/a/image/곡선용접반눌-64x105.png)}");
            ui->PB_B_0_3->setStyleSheet("QPushButton{border-image: url(:/a/image/전환곡선용접반-64x105.png)}");
            ui->PB_B_0_4->setStyleSheet("QPushButton{border-image: url(:/a/image/위빙용접-128x105.png)}");
            ui->PB_B_0_5->setStyleSheet("QPushButton{border-image: url(:/a/image/대지_아이콘_지령대기.png)}");
            ui->PB_B_0_6->setStyleSheet("QPushButton{border-image: url(:/a/image/자유이동-128x105.png)}");
            ui->PB_B_0_7->setStyleSheet("QPushButton{border-image: url(:/a/image/직선이동-128x105.png)}");
            ui->RB_ONEPOINT_WELD->setStyleSheet("QPushButton{border-image: url(:/a/image/1점용접-64x105.png)}");
            ui->PB_B_0_8->setStyleSheet("QPushButton{border-image: url(:/a/image/대지_아이콘_시간대기.png)}");
            break;
        case 3:
            motion_text ="전환곡선용접";
            ui->PB_B_0_0->setStyleSheet("QPushButton{border-image: url(:/a/image/가접용접-128x105.png)}");
            ui->RB_GAJUB->setStyleSheet("QPushButton{border-image: url(:/a/image/가접용접-64x105.png);}");
            ui->PB_B_0_1->setStyleSheet("QPushButton{border-image: url(:/a/image/직선용접-128x105.png)}");
            ui->PB_B_0_2->setStyleSheet("QPushButton{border-image: url(:/a/image/곡선용접반-64x105.png)}");
            ui->PB_B_0_3->setStyleSheet("QPushButton{border-image: url(:/a/image/전환곡선용접반눌-64x105.png)}");
            ui->PB_B_0_4->setStyleSheet("QPushButton{border-image: url(:/a/image/위빙용접-128x105.png)}");
            ui->PB_B_0_5->setStyleSheet("QPushButton{border-image: url(:/a/image/대지_아이콘_지령대기.png)}");
            ui->PB_B_0_6->setStyleSheet("QPushButton{border-image: url(:/a/image/자유이동-128x105.png)}");
            ui->PB_B_0_7->setStyleSheet("QPushButton{border-image: url(:/a/image/직선이동-128x105.png)}");
            ui->RB_ONEPOINT_WELD->setStyleSheet("QPushButton{border-image: url(:/a/image/1점용접-64x105.png)}");
            ui->PB_B_0_8->setStyleSheet("QPushButton{border-image: url(:/a/image/대지_아이콘_시간대기.png)}");
            break;
        case 4:
            motion_text ="위빙직선용접";
            ui->PB_B_0_0->setStyleSheet("QPushButton{border-image: url(:/a/image/가접용접-128x105.png)}");
            ui->RB_GAJUB->setStyleSheet("QPushButton{border-image: url(:/a/image/가접용접-64x105.png);}");
            ui->PB_B_0_1->setStyleSheet("QPushButton{border-image: url(:/a/image/직선용접-128x105.png)}");
            ui->PB_B_0_2->setStyleSheet("QPushButton{border-image: url(:/a/image/곡선용접반-64x105.png)}");
            ui->PB_B_0_3->setStyleSheet("QPushButton{border-image: url(:/a/image/전환곡선용접반-64x105.png)}");
            ui->PB_B_0_4->setStyleSheet("QPushButton{border-image: url(:/a/image/위빙용접-눌-128x105.png)}");
            ui->PB_B_0_5->setStyleSheet("QPushButton{border-image: url(:/a/image/대지_아이콘_지령대기.png)}");
            ui->PB_B_0_6->setStyleSheet("QPushButton{border-image: url(:/a/image/자유이동-128x105.png)}");
            ui->PB_B_0_7->setStyleSheet("QPushButton{border-image: url(:/a/image/직선이동-128x105.png)}");
            ui->RB_ONEPOINT_WELD->setStyleSheet("QPushButton{border-image: url(:/a/image/1점용접-64x105.png)}");
            ui->PB_B_0_8->setStyleSheet("QPushButton{border-image: url(:/a/image/대지_아이콘_시간대기.png)}");
            break;
        case 5:
            motion_text ="대기(신호)";
            ui->PB_B_0_0->setStyleSheet("QPushButton{border-image: url(:/a/image/가접용접-128x105.png)}");
            ui->RB_GAJUB->setStyleSheet("QPushButton{border-image: url(:/a/image/가접용접-64x105.png);}");
            ui->PB_B_0_1->setStyleSheet("QPushButton{border-image: url(:/a/image/직선용접-128x105.png)}");
            ui->PB_B_0_2->setStyleSheet("QPushButton{border-image: url(:/a/image/곡선용접반-64x105.png)}");
            ui->PB_B_0_3->setStyleSheet("QPushButton{border-image: url(:/a/image/전환곡선용접반-64x105.png)}");
            ui->PB_B_0_4->setStyleSheet("QPushButton{border-image: url(:/a/image/위빙용접-128x105.png)}");
            ui->PB_B_0_5->setStyleSheet("QPushButton{border-image: url(:/a/image/대지_아이콘_지령대기_누름.png)}");
            ui->PB_B_0_6->setStyleSheet("QPushButton{border-image: url(:/a/image/자유이동-128x105.png)}");
            ui->PB_B_0_7->setStyleSheet("QPushButton{border-image: url(:/a/image/직선이동-128x105.png)}");
            ui->RB_ONEPOINT_WELD->setStyleSheet("QPushButton{border-image: url(:/a/image/1점용접-64x105.png)}");
            ui->PB_B_0_8->setStyleSheet("QPushButton{border-image: url(:/a/image/대지_아이콘_시간대기.png)}");
            break;
        case 6:
            motion_text ="자유이동";
            ui->PB_B_0_0->setStyleSheet("QPushButton{border-image: url(:/a/image/가접용접-128x105.png)}");
            ui->RB_GAJUB->setStyleSheet("QPushButton{border-image: url(:/a/image/가접용접-64x105.png);}");
            ui->PB_B_0_1->setStyleSheet("QPushButton{border-image: url(:/a/image/직선용접-128x105.png)}");
            ui->PB_B_0_2->setStyleSheet("QPushButton{border-image: url(:/a/image/곡선용접반-64x105.png)}");
            ui->PB_B_0_3->setStyleSheet("QPushButton{border-image: url(:/a/image/전환곡선용접반-64x105.png)}");
            ui->PB_B_0_4->setStyleSheet("QPushButton{border-image: url(:/a/image/위빙용접-128x105.png)}");
            ui->PB_B_0_5->setStyleSheet("QPushButton{border-image: url(:/a/image/대지_아이콘_지령대기.png)}");
            ui->PB_B_0_6->setStyleSheet("QPushButton{border-image: url(:/a/image/자유이동-눌-128x105.png)}");
            ui->PB_B_0_7->setStyleSheet("QPushButton{border-image: url(:/a/image/직선이동-128x105.png)}");
            ui->RB_ONEPOINT_WELD->setStyleSheet("QPushButton{border-image: url(:/a/image/1점용접-64x105.png)}");
            ui->PB_B_0_8->setStyleSheet("QPushButton{border-image: url(:/a/image/대지_아이콘_시간대기.png)}");
            break;
        case 7:
            motion_text ="직선이동";
            ui->PB_B_0_0->setStyleSheet("QPushButton{border-image: url(:/a/image/가접용접-128x105.png)}");
            ui->RB_GAJUB->setStyleSheet("QPushButton{border-image: url(:/a/image/가접용접-64x105.png);}");
            ui->PB_B_0_1->setStyleSheet("QPushButton{border-image: url(:/a/image/직선용접-128x105.png)}");
            ui->PB_B_0_2->setStyleSheet("QPushButton{border-image: url(:/a/image/곡선용접반-64x105.png)}");
            ui->PB_B_0_3->setStyleSheet("QPushButton{border-image: url(:/a/image/전환곡선용접반-64x105.png)}");
            ui->PB_B_0_4->setStyleSheet("QPushButton{border-image: url(:/a/image/위빙용접-128x105.png)}");
            ui->PB_B_0_5->setStyleSheet("QPushButton{border-image: url(:/a/image/대지_아이콘_지령대기.png)}");
            ui->PB_B_0_6->setStyleSheet("QPushButton{border-image: url(:/a/image/자유이동-128x105.png)}");
            ui->PB_B_0_7->setStyleSheet("QPushButton{border-image: url(:/a/image/직선이동-눌-128x105.png)}");
            ui->RB_ONEPOINT_WELD->setStyleSheet("QPushButton{border-image: url(:/a/image/1점용접-64x105.png)}");
            ui->PB_B_0_8->setStyleSheet("QPushButton{border-image: url(:/a/image/대지_아이콘_시간대기.png)}");
            break;
        case 8:
            motion_text ="부가축용접";
            ui->PB_B_0_0->setStyleSheet("QPushButton{border-image: url(:/a/image/가접용접-128x105.png)}");
            ui->RB_GAJUB->setStyleSheet("QPushButton{border-image: url(:/a/image/가접용접-64x105.png);}");
            ui->PB_B_0_1->setStyleSheet("QPushButton{border-image: url(:/a/image/직선용접-128x105.png)}");
            ui->PB_B_0_2->setStyleSheet("QPushButton{border-image: url(:/a/image/곡선용접반-64x105.png)}");
            ui->PB_B_0_3->setStyleSheet("QPushButton{border-image: url(:/a/image/전환곡선용접반-64x105.png)}");
            ui->PB_B_0_4->setStyleSheet("QPushButton{border-image: url(:/a/image/위빙용접-128x105.png)}");
            ui->PB_B_0_5->setStyleSheet("QPushButton{border-image: url(:/a/image/대기-128x105.png)}");
            ui->PB_B_0_6->setStyleSheet("QPushButton{border-image: url(:/a/image/자유이동-128x105.png)}");
            ui->PB_B_0_7->setStyleSheet("QPushButton{border-image: url(:/a/image/직선이동-128x105.png)}");
            ui->RB_ONEPOINT_WELD->setStyleSheet("QPushButton{border-image: url(:/a/image/1점용접-눌-64x105.png)}");
            ui->PB_B_0_8->setStyleSheet("QPushButton{border-image: url(:/a/image/대지_아이콘_시간대기.png)}");
            break;
        case 9:
            motion_text ="대기(시간)";
            ui->PB_B_0_0->setStyleSheet("QPushButton{border-image: url(:/a/image/가접용접-128x105.png)}");
            ui->RB_GAJUB->setStyleSheet("QPushButton{border-image: url(:/a/image/가접용접-64x105.png);}");
            ui->PB_B_0_1->setStyleSheet("QPushButton{border-image: url(:/a/image/직선용접-128x105.png)}");
            ui->PB_B_0_2->setStyleSheet("QPushButton{border-image: url(:/a/image/곡선용접반-64x105.png)}");
            ui->PB_B_0_3->setStyleSheet("QPushButton{border-image: url(:/a/image/전환곡선용접반-64x105.png)}");
            ui->PB_B_0_4->setStyleSheet("QPushButton{border-image: url(:/a/image/위빙용접-128x105.png)}");
            ui->PB_B_0_5->setStyleSheet("QPushButton{border-image: url(:/a/image/대지_아이콘_지령대기.png)}");
            ui->PB_B_0_6->setStyleSheet("QPushButton{border-image: url(:/a/image/자유이동-128x105.png)}");
            ui->PB_B_0_7->setStyleSheet("QPushButton{border-image: url(:/a/image/직선이동-128x105.png)}");
            ui->RB_ONEPOINT_WELD->setStyleSheet("QPushButton{border-image: url(:/a/image/1점용접-64x105.png)}");
            ui->PB_B_0_8->setStyleSheet("QPushButton{border-image: url(:/a/image/대지_아이콘_시간대기_누름.png)}");
            break;
        default:
            ui->PB_B_0_0->setStyleSheet("QPushButton{border-image: url(:/a/image/가접용접-128x105.png)}");
            ui->RB_GAJUB->setStyleSheet("QPushButton{border-image: url(:/a/image/가접용접-64x105.png);}");
            ui->PB_B_0_1->setStyleSheet("QPushButton{border-image: url(:/a/image/직선용접-128x105.png)}");
            ui->PB_B_0_2->setStyleSheet("QPushButton{border-image: url(:/a/image/곡선용접반-64x105.png)}");
            ui->PB_B_0_3->setStyleSheet("QPushButton{border-image: url(:/a/image/전환곡선용접반-64x105.png)}");
            ui->PB_B_0_4->setStyleSheet("QPushButton{border-image: url(:/a/image/위빙용접-128x105.png)}");
            ui->PB_B_0_5->setStyleSheet("QPushButton{border-image: url(:/a/image/대지_아이콘_지령대기.png)}");
            ui->PB_B_0_6->setStyleSheet("QPushButton{border-image: url(:/a/image/자유이동-128x105.png)}");
            ui->PB_B_0_7->setStyleSheet("QPushButton{border-image: url(:/a/image/직선이동-128x105.png)}");
            ui->RB_ONEPOINT_WELD->setStyleSheet("QPushButton{border-image: url(:/a/image/1점용접-64x105.png)}");
            ui->PB_B_0_8->setStyleSheet("QPushButton{border-image: url(:/a/image/대지_아이콘_시간대기.png)}");
            break;
        }
        switch (data_condition) {
        case 0:
            ui->PB_B0_1->setStyleSheet("QPushButton{border-image: url(:/a/image/1눌-45x45.png)}");
            ui->PB_B0_2->setStyleSheet("QPushButton{border-image: url(:/a/image/2-45x45.png);}");
            ui->PB_B0_3->setStyleSheet("QPushButton{border-image: url(:/a/image/3-45x45.png)}");
            ui->PB_B0_4->setStyleSheet("QPushButton{border-image: url(:/a/image/4-45x45.png)}");
            ui->PB_B0_5->setStyleSheet("QPushButton{border-image: url(:/a/image/5-45x45.png)}");
            ui->PB_B0_6->setStyleSheet("QPushButton{border-image: url(:/a/image/6-45x45.png)}");
            ui->PB_B0_7->setStyleSheet("QPushButton{border-image: url(:/a/image/7-45x45.png)}");
            ui->PB_B0_8->setStyleSheet("QPushButton{border-image: url(:/a/image/8-45x45.png)}");
            ui->PB_B0_9->setStyleSheet("QPushButton{border-image: url(:/a/image/9-45x45.png)}");
            ui->PB_B0_10->setStyleSheet("QPushButton{border-image: url(:/a/image/10-45x45.png)}");
            ui->PB_B0_11->setStyleSheet("QPushButton{border-image: url(:/a/image/11-45x45.png)}");
            break;
        case 1:
            ui->PB_B0_1->setStyleSheet("QPushButton{border-image: url(:/a/image/1-45x45.png)}");
            ui->PB_B0_2->setStyleSheet("QPushButton{border-image: url(:/a/image/2눌-45x45.png);}");
            ui->PB_B0_3->setStyleSheet("QPushButton{border-image: url(:/a/image/3-45x45.png)}");
            ui->PB_B0_4->setStyleSheet("QPushButton{border-image: url(:/a/image/4-45x45.png)}");
            ui->PB_B0_5->setStyleSheet("QPushButton{border-image: url(:/a/image/5-45x45.png)}");
            ui->PB_B0_6->setStyleSheet("QPushButton{border-image: url(:/a/image/6-45x45.png)}");
            ui->PB_B0_7->setStyleSheet("QPushButton{border-image: url(:/a/image/7-45x45.png)}");
            ui->PB_B0_8->setStyleSheet("QPushButton{border-image: url(:/a/image/8-45x45.png)}");
            ui->PB_B0_9->setStyleSheet("QPushButton{border-image: url(:/a/image/9-45x45.png)}");
            ui->PB_B0_10->setStyleSheet("QPushButton{border-image: url(:/a/image/10-45x45.png)}");
            ui->PB_B0_11->setStyleSheet("QPushButton{border-image: url(:/a/image/11-45x45.png)}");
            break;
        case 2:
            ui->PB_B0_1->setStyleSheet("QPushButton{border-image: url(:/a/image/1-45x45.png)}");
            ui->PB_B0_2->setStyleSheet("QPushButton{border-image: url(:/a/image/2-45x45.png);}");
            ui->PB_B0_3->setStyleSheet("QPushButton{border-image: url(:/a/image/3눌-45x45.png)}");
            ui->PB_B0_4->setStyleSheet("QPushButton{border-image: url(:/a/image/4-45x45.png)}");
            ui->PB_B0_5->setStyleSheet("QPushButton{border-image: url(:/a/image/5-45x45.png)}");
            ui->PB_B0_6->setStyleSheet("QPushButton{border-image: url(:/a/image/6-45x45.png)}");
            ui->PB_B0_7->setStyleSheet("QPushButton{border-image: url(:/a/image/7-45x45.png)}");
            ui->PB_B0_8->setStyleSheet("QPushButton{border-image: url(:/a/image/8-45x45.png)}");
            ui->PB_B0_9->setStyleSheet("QPushButton{border-image: url(:/a/image/9-45x45.png)}");
            ui->PB_B0_10->setStyleSheet("QPushButton{border-image: url(:/a/image/10-45x45.png)}");
            ui->PB_B0_11->setStyleSheet("QPushButton{border-image: url(:/a/image/11-45x45.png)}");
            break;
        case 3:
            ui->PB_B0_1->setStyleSheet("QPushButton{border-image: url(:/a/image/1-45x45.png)}");
            ui->PB_B0_2->setStyleSheet("QPushButton{border-image: url(:/a/image/2-45x45.png);}");
            ui->PB_B0_3->setStyleSheet("QPushButton{border-image: url(:/a/image/3-45x45.png)}");
            ui->PB_B0_4->setStyleSheet("QPushButton{border-image: url(:/a/image/4눌-45x45.png)}");
            ui->PB_B0_5->setStyleSheet("QPushButton{border-image: url(:/a/image/5-45x45.png)}");
            ui->PB_B0_6->setStyleSheet("QPushButton{border-image: url(:/a/image/6-45x45.png)}");
            ui->PB_B0_7->setStyleSheet("QPushButton{border-image: url(:/a/image/7-45x45.png)}");
            ui->PB_B0_8->setStyleSheet("QPushButton{border-image: url(:/a/image/8-45x45.png)}");
            ui->PB_B0_9->setStyleSheet("QPushButton{border-image: url(:/a/image/9-45x45.png)}");
            ui->PB_B0_10->setStyleSheet("QPushButton{border-image: url(:/a/image/10-45x45.png)}");
            ui->PB_B0_11->setStyleSheet("QPushButton{border-image: url(:/a/image/11-45x45.png)}");
            break;
        case 4:
            ui->PB_B0_1->setStyleSheet("QPushButton{border-image: url(:/a/image/1-45x45.png)}");
            ui->PB_B0_2->setStyleSheet("QPushButton{border-image: url(:/a/image/2-45x45.png);}");
            ui->PB_B0_3->setStyleSheet("QPushButton{border-image: url(:/a/image/3-45x45.png)}");
            ui->PB_B0_4->setStyleSheet("QPushButton{border-image: url(:/a/image/4-45x45.png)}");
            ui->PB_B0_5->setStyleSheet("QPushButton{border-image: url(:/a/image/5눌-45x45.png)}");
            ui->PB_B0_6->setStyleSheet("QPushButton{border-image: url(:/a/image/6-45x45.png)}");
            ui->PB_B0_7->setStyleSheet("QPushButton{border-image: url(:/a/image/7-45x45.png)}");
            ui->PB_B0_8->setStyleSheet("QPushButton{border-image: url(:/a/image/8-45x45.png)}");
            ui->PB_B0_9->setStyleSheet("QPushButton{border-image: url(:/a/image/9-45x45.png)}");
            ui->PB_B0_10->setStyleSheet("QPushButton{border-image: url(:/a/image/10-45x45.png)}");
            ui->PB_B0_11->setStyleSheet("QPushButton{border-image: url(:/a/image/11-45x45.png)}");
            break;
        case 5:
            ui->PB_B0_1->setStyleSheet("QPushButton{border-image: url(:/a/image/1-45x45.png)}");
            ui->PB_B0_2->setStyleSheet("QPushButton{border-image: url(:/a/image/2-45x45.png);}");
            ui->PB_B0_3->setStyleSheet("QPushButton{border-image: url(:/a/image/3-45x45.png)}");
            ui->PB_B0_4->setStyleSheet("QPushButton{border-image: url(:/a/image/4-45x45.png)}");
            ui->PB_B0_5->setStyleSheet("QPushButton{border-image: url(:/a/image/5-45x45.png)}");
            ui->PB_B0_6->setStyleSheet("QPushButton{border-image: url(:/a/image/6눌-45x45.png)}");
            ui->PB_B0_7->setStyleSheet("QPushButton{border-image: url(:/a/image/7-45x45.png)}");
            ui->PB_B0_8->setStyleSheet("QPushButton{border-image: url(:/a/image/8-45x45.png)}");
            ui->PB_B0_9->setStyleSheet("QPushButton{border-image: url(:/a/image/9-45x45.png)}");
            ui->PB_B0_10->setStyleSheet("QPushButton{border-image: url(:/a/image/10-45x45.png)}");
            ui->PB_B0_11->setStyleSheet("QPushButton{border-image: url(:/a/image/11-45x45.png)}");
            break;
        case 6:
            ui->PB_B0_1->setStyleSheet("QPushButton{border-image: url(:/a/image/1-45x45.png)}");
            ui->PB_B0_2->setStyleSheet("QPushButton{border-image: url(:/a/image/2-45x45.png);}");
            ui->PB_B0_3->setStyleSheet("QPushButton{border-image: url(:/a/image/3-45x45.png)}");
            ui->PB_B0_4->setStyleSheet("QPushButton{border-image: url(:/a/image/4-45x45.png)}");
            ui->PB_B0_5->setStyleSheet("QPushButton{border-image: url(:/a/image/5-45x45.png)}");
            ui->PB_B0_6->setStyleSheet("QPushButton{border-image: url(:/a/image/6-45x45.png)}");
            ui->PB_B0_7->setStyleSheet("QPushButton{border-image: url(:/a/image/7눌-45x45.png)}");
            ui->PB_B0_8->setStyleSheet("QPushButton{border-image: url(:/a/image/8-45x45.png)}");
            ui->PB_B0_9->setStyleSheet("QPushButton{border-image: url(:/a/image/9-45x45.png)}");
            ui->PB_B0_10->setStyleSheet("QPushButton{border-image: url(:/a/image/10-45x45.png)}");
            ui->PB_B0_11->setStyleSheet("QPushButton{border-image: url(:/a/image/11-45x45.png)}");
            break;
        case 7:
            ui->PB_B0_1->setStyleSheet("QPushButton{border-image: url(:/a/image/1-45x45.png)}");
            ui->PB_B0_2->setStyleSheet("QPushButton{border-image: url(:/a/image/2-45x45.png);}");
            ui->PB_B0_3->setStyleSheet("QPushButton{border-image: url(:/a/image/3-45x45.png)}");
            ui->PB_B0_4->setStyleSheet("QPushButton{border-image: url(:/a/image/4-45x45.png)}");
            ui->PB_B0_5->setStyleSheet("QPushButton{border-image: url(:/a/image/5-45x45.png)}");
            ui->PB_B0_6->setStyleSheet("QPushButton{border-image: url(:/a/image/6-45x45.png)}");
            ui->PB_B0_7->setStyleSheet("QPushButton{border-image: url(:/a/image/7-45x45.png)}");
            ui->PB_B0_8->setStyleSheet("QPushButton{border-image: url(:/a/image/8눌-45x45.png)}");
            ui->PB_B0_9->setStyleSheet("QPushButton{border-image: url(:/a/image/9-45x45.png)}");
            ui->PB_B0_10->setStyleSheet("QPushButton{border-image: url(:/a/image/10-45x45.png)}");
            ui->PB_B0_11->setStyleSheet("QPushButton{border-image: url(:/a/image/11-45x45.png)}");
            break;
        case 8:
            ui->PB_B0_1->setStyleSheet("QPushButton{border-image: url(:/a/image/1-45x45.png)}");
            ui->PB_B0_2->setStyleSheet("QPushButton{border-image: url(:/a/image/2-45x45.png);}");
            ui->PB_B0_3->setStyleSheet("QPushButton{border-image: url(:/a/image/3-45x45.png)}");
            ui->PB_B0_4->setStyleSheet("QPushButton{border-image: url(:/a/image/4-45x45.png)}");
            ui->PB_B0_5->setStyleSheet("QPushButton{border-image: url(:/a/image/5-45x45.png)}");
            ui->PB_B0_6->setStyleSheet("QPushButton{border-image: url(:/a/image/6-45x45.png)}");
            ui->PB_B0_7->setStyleSheet("QPushButton{border-image: url(:/a/image/7-45x45.png)}");
            ui->PB_B0_8->setStyleSheet("QPushButton{border-image: url(:/a/image/8-45x45.png)}");
            ui->PB_B0_9->setStyleSheet("QPushButton{border-image: url(:/a/image/9눌-45x45.png)}");
            ui->PB_B0_10->setStyleSheet("QPushButton{border-image: url(:/a/image/10-45x45.png)}");
            ui->PB_B0_11->setStyleSheet("QPushButton{border-image: url(:/a/image/11-45x45.png)}");
            break;
        case 9:
            ui->PB_B0_1->setStyleSheet("QPushButton{border-image: url(:/a/image/1-45x45.png)}");
            ui->PB_B0_2->setStyleSheet("QPushButton{border-image: url(:/a/image/2-45x45.png);}");
            ui->PB_B0_3->setStyleSheet("QPushButton{border-image: url(:/a/image/3-45x45.png)}");
            ui->PB_B0_4->setStyleSheet("QPushButton{border-image: url(:/a/image/4-45x45.png)}");
            ui->PB_B0_5->setStyleSheet("QPushButton{border-image: url(:/a/image/5-45x45.png)}");
            ui->PB_B0_6->setStyleSheet("QPushButton{border-image: url(:/a/image/6-45x45.png)}");
            ui->PB_B0_7->setStyleSheet("QPushButton{border-image: url(:/a/image/7-45x45.png)}");
            ui->PB_B0_8->setStyleSheet("QPushButton{border-image: url(:/a/image/8-45x45.png)}");
            ui->PB_B0_9->setStyleSheet("QPushButton{border-image: url(:/a/image/9-45x45.png)}");
            ui->PB_B0_10->setStyleSheet("QPushButton{border-image: url(:/a/image/10눌-45x45.png)}");
            ui->PB_B0_11->setStyleSheet("QPushButton{border-image: url(:/a/image/11-45x45.png)}");
            break;
        case 10:
            ui->PB_B0_1->setStyleSheet("QPushButton{border-image: url(:/a/image/1-45x45.png)}");
            ui->PB_B0_2->setStyleSheet("QPushButton{border-image: url(:/a/image/2-45x45.png);}");
            ui->PB_B0_3->setStyleSheet("QPushButton{border-image: url(:/a/image/3-45x45.png)}");
            ui->PB_B0_4->setStyleSheet("QPushButton{border-image: url(:/a/image/4-45x45.png)}");
            ui->PB_B0_5->setStyleSheet("QPushButton{border-image: url(:/a/image/5-45x45.png)}");
            ui->PB_B0_6->setStyleSheet("QPushButton{border-image: url(:/a/image/6-45x45.png)}");
            ui->PB_B0_7->setStyleSheet("QPushButton{border-image: url(:/a/image/7-45x45.png)}");
            ui->PB_B0_8->setStyleSheet("QPushButton{border-image: url(:/a/image/8-45x45.png)}");
            ui->PB_B0_9->setStyleSheet("QPushButton{border-image: url(:/a/image/9-45x45.png)}");
            ui->PB_B0_10->setStyleSheet("QPushButton{border-image: url(:/a/image/10-45x45.png)}");
            ui->PB_B0_11->setStyleSheet("QPushButton{border-image: url(:/a/image/11눌-45x45.png)}");
            break;
        default:
            break;
        }
        ui->TW_2->setItem(0,0,new QTableWidgetItem(ui->LE_D_0_A1->text()));
        ui->TW_2->item(0,0)->setTextAlignment(Qt::AlignCenter);
        ui->TW_2->setItem(1,0,new QTableWidgetItem(ui->LE_D_0_A2->text()));
        ui->TW_2->item(1,0)->setTextAlignment(Qt::AlignCenter);
        ui->TW_2->setItem(2,0,new QTableWidgetItem(ui->LE_D_0_A3->text()));
        ui->TW_2->item(2,0)->setTextAlignment(Qt::AlignCenter);
        ui->TW_2->setItem(3,0,new QTableWidgetItem(ui->LE_D_0_A4->text()));
        ui->TW_2->item(3,0)->setTextAlignment(Qt::AlignCenter);
        ui->TW_2->setItem(4,0,new QTableWidgetItem(ui->LE_D_0_A5->text()));
        ui->TW_2->item(4,0)->setTextAlignment(Qt::AlignCenter);
        ui->TW_2->setItem(5,0,new QTableWidgetItem(ui->LE_D_0_A6->text()));
        ui->TW_2->item(5,0)->setTextAlignment(Qt::AlignCenter);
        ui->TW_2->setItem(6,0,new QTableWidgetItem(ui->LE_D_0_A7->text()));
        ui->TW_2->item(6,0)->setTextAlignment(Qt::AlignCenter);
        ui->TW_2->setItem(7,0,new QTableWidgetItem(ui->LE_D_0_A8->text()));
        ui->TW_2->item(7,0)->setTextAlignment(Qt::AlignCenter);
        ui->TW_2->setItem(8,0,new QTableWidgetItem(ui->LE_D_0_A9->text()));
        ui->TW_2->item(8,0)->setTextAlignment(Qt::AlignCenter);
        ui->TW_2->setItem(9,0,new QTableWidgetItem(ui->LE_D_0_A10->text()));
        ui->TW_2->item(9,0)->setTextAlignment(Qt::AlignCenter);

        ui->TW_2->setItem(0,1,new QTableWidgetItem(ui->LE_D_0_V1->text()));
        ui->TW_2->item(0,1)->setTextAlignment(Qt::AlignCenter);
        ui->TW_2->setItem(1,1,new QTableWidgetItem(ui->LE_D_0_V2->text()));
        ui->TW_2->item(1,1)->setTextAlignment(Qt::AlignCenter);
        ui->TW_2->setItem(2,1,new QTableWidgetItem(ui->LE_D_0_V3->text()));
        ui->TW_2->item(2,1)->setTextAlignment(Qt::AlignCenter);
        ui->TW_2->setItem(3,1,new QTableWidgetItem(ui->LE_D_0_V4->text()));
        ui->TW_2->item(3,1)->setTextAlignment(Qt::AlignCenter);
        ui->TW_2->setItem(4,1,new QTableWidgetItem(ui->LE_D_0_V5->text()));
        ui->TW_2->item(4,1)->setTextAlignment(Qt::AlignCenter);
        ui->TW_2->setItem(5,1,new QTableWidgetItem(ui->LE_D_0_V6->text()));
        ui->TW_2->item(5,1)->setTextAlignment(Qt::AlignCenter);
        ui->TW_2->setItem(6,1,new QTableWidgetItem(ui->LE_D_0_V7->text()));
        ui->TW_2->item(6,1)->setTextAlignment(Qt::AlignCenter);
        ui->TW_2->setItem(7,1,new QTableWidgetItem(ui->LE_D_0_V8->text()));
        ui->TW_2->item(7,1)->setTextAlignment(Qt::AlignCenter);
        ui->TW_2->setItem(8,1,new QTableWidgetItem(ui->LE_D_0_V9->text()));
        ui->TW_2->item(8,1)->setTextAlignment(Qt::AlignCenter);
        ui->TW_2->setItem(9,1,new QTableWidgetItem(ui->LE_D_0_V10->text()));
        ui->TW_2->item(9,1)->setTextAlignment(Qt::AlignCenter);

        ui->TW_2->setItem(0,2,new QTableWidgetItem(ui->LE_D_0_S1->text()));
        ui->TW_2->item(0,2)->setTextAlignment(Qt::AlignCenter);
        ui->TW_2->setItem(1,2,new QTableWidgetItem(ui->LE_D_0_S2->text()));
        ui->TW_2->item(1,2)->setTextAlignment(Qt::AlignCenter);
        ui->TW_2->setItem(2,2,new QTableWidgetItem(ui->LE_D_0_S3->text()));
        ui->TW_2->item(2,2)->setTextAlignment(Qt::AlignCenter);
        ui->TW_2->setItem(3,2,new QTableWidgetItem(ui->LE_D_0_S4->text()));
        ui->TW_2->item(3,2)->setTextAlignment(Qt::AlignCenter);
        ui->TW_2->setItem(4,2,new QTableWidgetItem(ui->LE_D_0_S5->text()));
        ui->TW_2->item(4,2)->setTextAlignment(Qt::AlignCenter);
        ui->TW_2->setItem(5,2,new QTableWidgetItem(ui->LE_D_0_S6->text()));
        ui->TW_2->item(5,2)->setTextAlignment(Qt::AlignCenter);
        ui->TW_2->setItem(6,2,new QTableWidgetItem(ui->LE_D_0_S7->text()));
        ui->TW_2->item(6,2)->setTextAlignment(Qt::AlignCenter);
        ui->TW_2->setItem(7,2,new QTableWidgetItem(ui->LE_D_0_S8->text()));
        ui->TW_2->item(7,2)->setTextAlignment(Qt::AlignCenter);
        ui->TW_2->setItem(8,2,new QTableWidgetItem(ui->LE_D_0_S9->text()));
        ui->TW_2->item(8,2)->setTextAlignment(Qt::AlignCenter);
        ui->TW_2->setItem(9,2,new QTableWidgetItem(ui->LE_D_0_S10->text()));
        ui->TW_2->item(9,2)->setTextAlignment(Qt::AlignCenter);

        ui->TW_2->setItem(0,3,new QTableWidgetItem(ui->LE_D_0_ONA1->text()));
        ui->TW_2->item(0,3)->setTextAlignment(Qt::AlignCenter);
        ui->TW_2->setItem(1,3,new QTableWidgetItem(ui->LE_D_0_ONA2->text()));
        ui->TW_2->item(1,3)->setTextAlignment(Qt::AlignCenter);
        ui->TW_2->setItem(2,3,new QTableWidgetItem(ui->LE_D_0_ONA3->text()));
        ui->TW_2->item(2,3)->setTextAlignment(Qt::AlignCenter);
        ui->TW_2->setItem(3,3,new QTableWidgetItem(ui->LE_D_0_ONA4->text()));
        ui->TW_2->item(3,3)->setTextAlignment(Qt::AlignCenter);
        ui->TW_2->setItem(4,3,new QTableWidgetItem(ui->LE_D_0_ONA5->text()));
        ui->TW_2->item(4,3)->setTextAlignment(Qt::AlignCenter);
        ui->TW_2->setItem(5,3,new QTableWidgetItem(ui->LE_D_0_ONA6->text()));
        ui->TW_2->item(5,3)->setTextAlignment(Qt::AlignCenter);
        ui->TW_2->setItem(6,3,new QTableWidgetItem(ui->LE_D_0_ONA7->text()));
        ui->TW_2->item(6,3)->setTextAlignment(Qt::AlignCenter);
        ui->TW_2->setItem(7,3,new QTableWidgetItem(ui->LE_D_0_ONA8->text()));
        ui->TW_2->item(7,3)->setTextAlignment(Qt::AlignCenter);
        ui->TW_2->setItem(8,3,new QTableWidgetItem(ui->LE_D_0_ONA9->text()));
        ui->TW_2->item(8,3)->setTextAlignment(Qt::AlignCenter);
        ui->TW_2->setItem(9,3,new QTableWidgetItem(ui->LE_D_0_ONA10->text()));
        ui->TW_2->item(9,3)->setTextAlignment(Qt::AlignCenter);

        ui->TW_2->setItem(0,4,new QTableWidgetItem(ui->LE_D_0_ONV1->text()));
        ui->TW_2->item(0,4)->setTextAlignment(Qt::AlignCenter);
        ui->TW_2->setItem(1,4,new QTableWidgetItem(ui->LE_D_0_ONV2->text()));
        ui->TW_2->item(1,4)->setTextAlignment(Qt::AlignCenter);
        ui->TW_2->setItem(2,4,new QTableWidgetItem(ui->LE_D_0_ONV3->text()));
        ui->TW_2->item(2,4)->setTextAlignment(Qt::AlignCenter);
        ui->TW_2->setItem(3,4,new QTableWidgetItem(ui->LE_D_0_ONV4->text()));
        ui->TW_2->item(3,4)->setTextAlignment(Qt::AlignCenter);
        ui->TW_2->setItem(4,4,new QTableWidgetItem(ui->LE_D_0_ONV5->text()));
        ui->TW_2->item(4,4)->setTextAlignment(Qt::AlignCenter);
        ui->TW_2->setItem(5,4,new QTableWidgetItem(ui->LE_D_0_ONV6->text()));
        ui->TW_2->item(5,4)->setTextAlignment(Qt::AlignCenter);
        ui->TW_2->setItem(6,4,new QTableWidgetItem(ui->LE_D_0_ONV7->text()));
        ui->TW_2->item(6,4)->setTextAlignment(Qt::AlignCenter);
        ui->TW_2->setItem(7,4,new QTableWidgetItem(ui->LE_D_0_ONV8->text()));
        ui->TW_2->item(7,4)->setTextAlignment(Qt::AlignCenter);
        ui->TW_2->setItem(8,4,new QTableWidgetItem(ui->LE_D_0_ONV9->text()));
        ui->TW_2->item(8,4)->setTextAlignment(Qt::AlignCenter);
        ui->TW_2->setItem(9,4,new QTableWidgetItem(ui->LE_D_0_ONV10->text()));
        ui->TW_2->item(9,4)->setTextAlignment(Qt::AlignCenter);

        ui->TW_2->setItem(0,5,new QTableWidgetItem(ui->LE_D_0_ONT1->text()));
        ui->TW_2->item(0,5)->setTextAlignment(Qt::AlignCenter);
        ui->TW_2->setItem(1,5,new QTableWidgetItem(ui->LE_D_0_ONT2->text()));
        ui->TW_2->item(1,5)->setTextAlignment(Qt::AlignCenter);
        ui->TW_2->setItem(2,5,new QTableWidgetItem(ui->LE_D_0_ONT3->text()));
        ui->TW_2->item(2,5)->setTextAlignment(Qt::AlignCenter);
        ui->TW_2->setItem(3,5,new QTableWidgetItem(ui->LE_D_0_ONT4->text()));
        ui->TW_2->item(3,5)->setTextAlignment(Qt::AlignCenter);
        ui->TW_2->setItem(4,5,new QTableWidgetItem(ui->LE_D_0_ONT5->text()));
        ui->TW_2->item(4,5)->setTextAlignment(Qt::AlignCenter);
        ui->TW_2->setItem(5,5,new QTableWidgetItem(ui->LE_D_0_ONT6->text()));
        ui->TW_2->item(5,5)->setTextAlignment(Qt::AlignCenter);
        ui->TW_2->setItem(6,5,new QTableWidgetItem(ui->LE_D_0_ONT7->text()));
        ui->TW_2->item(6,5)->setTextAlignment(Qt::AlignCenter);
        ui->TW_2->setItem(7,5,new QTableWidgetItem(ui->LE_D_0_ONT8->text()));
        ui->TW_2->item(7,5)->setTextAlignment(Qt::AlignCenter);
        ui->TW_2->setItem(8,5,new QTableWidgetItem(ui->LE_D_0_ONT9->text()));
        ui->TW_2->item(8,5)->setTextAlignment(Qt::AlignCenter);
        ui->TW_2->setItem(9,5,new QTableWidgetItem(ui->LE_D_0_ONT10->text()));
        ui->TW_2->item(9,5)->setTextAlignment(Qt::AlignCenter);

        ui->TW_2->setItem(0,6,new QTableWidgetItem(ui->LE_D_0_OFA1->text()));
        ui->TW_2->item(0,6)->setTextAlignment(Qt::AlignCenter);
        ui->TW_2->setItem(1,6,new QTableWidgetItem(ui->LE_D_0_OFA2->text()));
        ui->TW_2->item(1,6)->setTextAlignment(Qt::AlignCenter);
        ui->TW_2->setItem(2,6,new QTableWidgetItem(ui->LE_D_0_OFA3->text()));
        ui->TW_2->item(2,6)->setTextAlignment(Qt::AlignCenter);
        ui->TW_2->setItem(3,6,new QTableWidgetItem(ui->LE_D_0_OFA4->text()));
        ui->TW_2->item(3,6)->setTextAlignment(Qt::AlignCenter);
        ui->TW_2->setItem(4,6,new QTableWidgetItem(ui->LE_D_0_OFA5->text()));
        ui->TW_2->item(4,6)->setTextAlignment(Qt::AlignCenter);
        ui->TW_2->setItem(5,6,new QTableWidgetItem(ui->LE_D_0_OFA6->text()));
        ui->TW_2->item(5,6)->setTextAlignment(Qt::AlignCenter);
        ui->TW_2->setItem(6,6,new QTableWidgetItem(ui->LE_D_0_OFA7->text()));
        ui->TW_2->item(6,6)->setTextAlignment(Qt::AlignCenter);
        ui->TW_2->setItem(7,6,new QTableWidgetItem(ui->LE_D_0_OFA8->text()));
        ui->TW_2->item(7,6)->setTextAlignment(Qt::AlignCenter);
        ui->TW_2->setItem(8,6,new QTableWidgetItem(ui->LE_D_0_OFA9->text()));
        ui->TW_2->item(8,6)->setTextAlignment(Qt::AlignCenter);
        ui->TW_2->setItem(9,6,new QTableWidgetItem(ui->LE_D_0_OFA10->text()));
        ui->TW_2->item(9,6)->setTextAlignment(Qt::AlignCenter);

        ui->TW_2->setItem(0,7,new QTableWidgetItem(ui->LE_D_0_OFV1->text()));
        ui->TW_2->item(0,7)->setTextAlignment(Qt::AlignCenter);
        ui->TW_2->setItem(1,7,new QTableWidgetItem(ui->LE_D_0_OFV2->text()));
        ui->TW_2->item(1,7)->setTextAlignment(Qt::AlignCenter);
        ui->TW_2->setItem(2,7,new QTableWidgetItem(ui->LE_D_0_OFV3->text()));
        ui->TW_2->item(2,7)->setTextAlignment(Qt::AlignCenter);
        ui->TW_2->setItem(3,7,new QTableWidgetItem(ui->LE_D_0_OFV4->text()));
        ui->TW_2->item(3,7)->setTextAlignment(Qt::AlignCenter);
        ui->TW_2->setItem(4,7,new QTableWidgetItem(ui->LE_D_0_OFV5->text()));
        ui->TW_2->item(4,7)->setTextAlignment(Qt::AlignCenter);
        ui->TW_2->setItem(5,7,new QTableWidgetItem(ui->LE_D_0_OFV6->text()));
        ui->TW_2->item(5,7)->setTextAlignment(Qt::AlignCenter);
        ui->TW_2->setItem(6,7,new QTableWidgetItem(ui->LE_D_0_OFV7->text()));
        ui->TW_2->item(6,7)->setTextAlignment(Qt::AlignCenter);
        ui->TW_2->setItem(7,7,new QTableWidgetItem(ui->LE_D_0_OFV8->text()));
        ui->TW_2->item(7,7)->setTextAlignment(Qt::AlignCenter);
        ui->TW_2->setItem(8,7,new QTableWidgetItem(ui->LE_D_0_OFV9->text()));
        ui->TW_2->item(8,7)->setTextAlignment(Qt::AlignCenter);
        ui->TW_2->setItem(9,7,new QTableWidgetItem(ui->LE_D_0_OFV10->text()));
        ui->TW_2->item(9,7)->setTextAlignment(Qt::AlignCenter);

        ui->TW_2->setItem(0,8,new QTableWidgetItem(ui->LE_D_0_OFT1->text()));
        ui->TW_2->item(0,8)->setTextAlignment(Qt::AlignCenter);
        ui->TW_2->setItem(1,8,new QTableWidgetItem(ui->LE_D_0_OFT2->text()));
        ui->TW_2->item(1,8)->setTextAlignment(Qt::AlignCenter);
        ui->TW_2->setItem(2,8,new QTableWidgetItem(ui->LE_D_0_OFT3->text()));
        ui->TW_2->item(2,8)->setTextAlignment(Qt::AlignCenter);
        ui->TW_2->setItem(3,8,new QTableWidgetItem(ui->LE_D_0_OFT4->text()));
        ui->TW_2->item(3,8)->setTextAlignment(Qt::AlignCenter);
        ui->TW_2->setItem(4,8,new QTableWidgetItem(ui->LE_D_0_OFT5->text()));
        ui->TW_2->item(4,8)->setTextAlignment(Qt::AlignCenter);
        ui->TW_2->setItem(5,8,new QTableWidgetItem(ui->LE_D_0_OFT6->text()));
        ui->TW_2->item(5,8)->setTextAlignment(Qt::AlignCenter);
        ui->TW_2->setItem(6,8,new QTableWidgetItem(ui->LE_D_0_OFT7->text()));
        ui->TW_2->item(6,8)->setTextAlignment(Qt::AlignCenter);
        ui->TW_2->setItem(7,8,new QTableWidgetItem(ui->LE_D_0_OFT8->text()));
        ui->TW_2->item(7,8)->setTextAlignment(Qt::AlignCenter);
        ui->TW_2->setItem(8,8,new QTableWidgetItem(ui->LE_D_0_OFT9->text()));
        ui->TW_2->item(8,8)->setTextAlignment(Qt::AlignCenter);
        ui->TW_2->setItem(9,8,new QTableWidgetItem(ui->LE_D_0_OFT10->text()));
        ui->TW_2->item(9,8)->setTextAlignment(Qt::AlignCenter);

    }
    if(ui->SW_A->currentIndex()==2 && ui->SW_B->currentIndex()==1)
    {

            if(tool_btn_memory == 0 && sys_status.sdata.power_state.TOOL_BTN_STAT == 1)
            {
                on_PB_B_1_Set_clicked();
                tool_btn_memory = 1;
            }
            if(tool_btn_memory == 1 && sys_status.sdata.power_state.TOOL_BTN_STAT == 0)
            {
                tool_btn_memory = 0;
            }
            ui->LB_B_1_Axis1->setText(QString().sprintf("%.3f", sys_status.sdata.tcp_ref[0]));
            ui->LB_B_1_Axis2->setText(QString().sprintf("%.3f", sys_status.sdata.tcp_ref[1]));
            ui->LB_B_1_Axis3->setText(QString().sprintf("%.3f", sys_status.sdata.tcp_ref[2]));
            ui->LB_B_1_Axis4->setText(QString().sprintf("%.3f", sys_status.sdata.tcp_ref[3]));
            ui->LB_B_1_Axis5->setText(QString().sprintf("%.3f", sys_status.sdata.tcp_ref[4]));
            ui->LB_B_1_Axis6->setText(QString().sprintf("%.3f", sys_status.sdata.tcp_ref[5]));

            ui->LB_B_1_Axis7->setText(QString().sprintf("%.3f", sys_status.sdata.aa_joint_ref[0]));
            ui->LB_B_1_Axis8->setText(QString().sprintf("%.3f", sys_status.sdata.aa_joint_ref[1]));
            ui->LB_B_1_Axis9->setText(QString().sprintf("%.3f", sys_status.sdata.aa_joint_ref[2]));

            if(data_sound_mode == 0 && teach_mode == 1 && mMediaPlayer->state()== 0)
            {
                if(data_sound == 1)
                {
                    mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "미교시 상태 입니다."+".MP3"));
                    mMediaPlayer->play();
                }
                data_sound_mode = 1;
            }

            if(ui->TW_10->item(ui->TW_10->rowCount()-1, 1)->text() == "설정 완료"){//미교시

                if(data_robotfree == 1)
                {
                    QString text;
                    text.sprintf("freedrive_teach_off()");
                    cmdConfirmFlag = false;
                    sockCmd.write(text.toStdString().c_str(), text.toStdString().length());
                }
                if(sys_status.sdata.digital_in[3] == 0 && sys_status.sdata.is_freedrive_mode == 0){
                    if(data_sound == 1){
                        if(data_foot==1){
                            mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "교시완료되었습니다."+".MP3"));
                        }
                        if(data_foot==0){
                            mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "교시완료되었습니다.발판x."+".MP3"));
                        }
                        mMediaPlayer->play();
                    }
                    Update_TW_10_welding_data();
                    ui->SW_B->setCurrentIndex(2);
                    ui->SW_B_2_C->setCurrentIndex(0);
                    if(data_weld_play==0){
                        ui->SW_B2C0->setCurrentIndex(0);
                        ui->SW_C7C0->setCurrentIndex(0);
                    }
                    if(data_weld_play==1){
                        ui->SW_B2C0->setCurrentIndex(2);
                        ui->SW_C7C0->setCurrentIndex(2);
                    }
                    if(ui->LE_D_0_data_0->text()=="0"){
                        ui->SW_data_B->setCurrentIndex(0);
                    }
                    if(ui->LE_D_0_data_0->text()=="1"){
                        ui->SW_data_B->setCurrentIndex(1);
                    }
                    if(ui->LE_D_0_data_0->text()=="2"){
                        ui->SW_data_B->setCurrentIndex(2);
                    }
                    if(ui->LE_D_0_data_0->text()=="3"){
                        ui->SW_data_B->setCurrentIndex(1);
                    }
                    if(ui->LE_D_0_data_0->text()=="0"){
                        ui->SW_data_B->setCurrentIndex(0);
                    }
                    if(data_next == 1){

                    }

                }
                if(sys_status.sdata.digital_in[3] == 1){
                    ui->LB_B_1->setText("로봇프리 기능을 꺼주세요.");
                    if(data_sound == 1 && ment == 0)
                    {
                        mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "로봇프리기능을꺼주세요."+".MP3"));
                        mMediaPlayer->play();
                        ment =1;
                    }
                }
            }
            if(ui->SW_B_1_R->currentIndex() ==0){
                if(data_jog_mode ==0)
                {
                    ui->PB_B1R0_Smooth->setStyleSheet("QPushButton{border-image: url(:/a/image/smooth-100x50눌.png);}");
                    ui->PB_B1R0_Tick->setStyleSheet("QPushButton{border-image: url(:/a/image/tick-100x50.png);}");
                }
                if(data_jog_mode ==1)
                {
                    ui->PB_B1R0_Smooth->setStyleSheet("QPushButton{border-image: url(:/a/image/smooth-100x50.png);}");
                    ui->PB_B1R0_Tick->setStyleSheet("QPushButton{border-image: url(:/a/image/tick-100x50눌.png);}");
                }
                if(data_jog_type ==0)
                {
                    ui->PB_B1R0_Joint->setStyleSheet("QPushButton{border-image: url(:/a/image/조인트-100X50눌.png);}");
                    ui->PB_B1R0_Global->setStyleSheet("QPushButton{border-image: url(:/a/image/직교-100X50.png);}");
                    ui->PB_B1R0_User->setStyleSheet("QPushButton{border-image: url(:/a/image/유저-100X50.png);}");
                }
                if(data_jog_type ==1)
                {
                    ui->PB_B1R0_Joint->setStyleSheet("QPushButton{border-image: url(:/a/image/조인트-100X50.png);}");
                    ui->PB_B1R0_Global->setStyleSheet("QPushButton{border-image: url(:/a/image/직교-100X50눌.png);}");
                    ui->PB_B1R0_User->setStyleSheet("QPushButton{border-image: url(:/a/image/유저-100X50.png);}");
                }
                if(data_jog_type ==2)
                {
                    ui->PB_B1R0_Joint->setStyleSheet("QPushButton{border-image: url(:/a/image/조인트-100X50.png);}");
                    ui->PB_B1R0_Global->setStyleSheet("QPushButton{border-image: url(:/a/image/직교-100X50.png);}");
                    ui->PB_B1R0_User->setStyleSheet("QPushButton{border-image: url(:/a/image/유저-100X50눌.png);}");
                }

            }
    }
    if(ui->SW_A->currentIndex()==2 && ui->SW_B->currentIndex()==2)
    {
        //240104
        float arc_voltage = ((float)((int)((sys_status.sdata.information_chunk_2 >> 2) & 0xFFFF))) * 0.01;
        float arc_current = ((float)((int)((sys_status.sdata.information_chunk_4 >> 15) & 0x1FFF))) * 0.1;
        ui->LE_arc_set_V->setText(QString::number(arc_voltage,'f',1));
        ui->LE_arc_set_A->setText(QString::number(arc_current,'f',1));

        ui->LE_icv_sec->setText(QString::number(icv_sec,'f',1));
        ui->LE_icv_x->setText(QString::number(icv_x,'f',1));
        ui->LE_icv_y->setText(QString::number(icv_y,'f',1));
        ui->LE_icv_z->setText(QString::number(icv_z,'f',1));

        if(sys_status.sdata.digital_in[8] == 1){

            //i->LCD_arc_state->setStyleSheet("background-color:green;");
            //ui->LCD_arc_state_2->setStyleSheet("background-color:green;");


        }
        if(sys_status.sdata.digital_in[8] == 0){

            //ui->LCD_arc_state->setStyleSheet("background-color:red;");
            //ui->LCD_arc_state_2->setStyleSheet("background-color:red;");
        }

        if(mode_type == 0 || mode_type == 3){
            ui->BTN_mode_LH->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 12pt 휴먼모음T;}");
            ui->BTN_mode_RH->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 12pt 휴먼모음T;}");
            ui->BTN_mode_JIG_1->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 12pt 휴먼모음T;}");
            ui->BTN_mode_JIG_2->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 12pt 휴먼모음T;}");
            ui->BTN_mode_JIG_3->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 12pt 휴먼모음T;}");

        }
        if(mode_type == 1){
            ui->BTN_mode_LH->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            ui->BTN_mode_RH->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 12pt 휴먼모음T;}");
            ui->BTN_mode_JIG_1->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 12pt 휴먼모음T;}");
            ui->BTN_mode_JIG_2->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 12pt 휴먼모음T;}");
            ui->BTN_mode_JIG_3->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 12pt 휴먼모음T;}");
        }
        if(mode_type == 2){
            ui->BTN_mode_LH->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 12pt 휴먼모음T;}");
            ui->BTN_mode_RH->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            ui->BTN_mode_JIG_1->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 12pt 휴먼모음T;}");
            ui->BTN_mode_JIG_2->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 12pt 휴먼모음T;}");
            ui->BTN_mode_JIG_3->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 12pt 휴먼모음T;}");
        }
        if(mode_type == 11){
            ui->BTN_mode_LH->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 12pt 휴먼모음T;}");
            ui->BTN_mode_RH->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 12pt 휴먼모음T;}");
            ui->BTN_mode_JIG_1->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            ui->BTN_mode_JIG_2->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 12pt 휴먼모음T;}");
            ui->BTN_mode_JIG_3->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 12pt 휴먼모음T;}");
        }
        if(mode_type == 12){
            ui->BTN_mode_LH->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 12pt 휴먼모음T;}");
            ui->BTN_mode_RH->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 12pt 휴먼모음T;}");
            ui->BTN_mode_JIG_1->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 12pt 휴먼모음T;}");
            ui->BTN_mode_JIG_2->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            ui->BTN_mode_JIG_3->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 12pt 휴먼모음T;}");
        }
        if(mode_type == 13){
            ui->BTN_mode_LH->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 12pt 휴먼모음T;}");
            ui->BTN_mode_RH->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 12pt 휴먼모음T;}");
            ui->BTN_mode_JIG_1->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 12pt 휴먼모음T;}");
            ui->BTN_mode_JIG_2->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 12pt 휴먼모음T;}");
            ui->BTN_mode_JIG_3->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
        }

        if(sys_status.sdata.task_state==3){
        ui->PB_B_2_Play->setStyleSheet("QPushButton{border-image: url(:/a/image/실행눌-274x287.png)}");
        ui->PB_B_2_Pause->setStyleSheet("QPushButton{border-image: url(:/a/image/일시정지-200x211.png)}");
        }
        if(sys_status.sdata.task_state!=3){
        ui->PB_B_2_Play->setStyleSheet("QPushButton{border-image: url(:/a/image/실행-274x287.png)}");
        }
        if(sys_status.sdata.task_state==2){
        ui->PB_B_2_Pause->setStyleSheet("QPushButton{border-image: url(:/a/image/일시정지눌-200x211.png)}");
        }
        if(run_alarm == 0 && data_start == 1 && sys_status.sdata.task_state == 2)
        {
            run_alarm = 1;
        }
        switch (TLR_step) {
                case 1:
                    ui->LCD_STEP_B_1->setStyleSheet("background-color:green;");
                    ui->LCD_STEP_B_2->setStyleSheet("background-color:red;");
                    ui->LCD_STEP_B_3->setStyleSheet("background-color:red;");
                    ui->LCD_STEP_B_4->setStyleSheet("background-color:red;");
                    ui->LCD_STEP_B_5->setStyleSheet("background-color:red;");
                break;
                case 2:
                    ui->LCD_STEP_B_1->setStyleSheet("background-color:green;");
                    ui->LCD_STEP_B_2->setStyleSheet("background-color:green;");
                    ui->LCD_STEP_B_3->setStyleSheet("background-color:red;");
                    ui->LCD_STEP_B_4->setStyleSheet("background-color:red;");
                    ui->LCD_STEP_B_5->setStyleSheet("background-color:red;");
                break;
                case 3:
                    ui->LCD_STEP_B_1->setStyleSheet("background-color:green;");
                    ui->LCD_STEP_B_2->setStyleSheet("background-color:green;");
                    ui->LCD_STEP_B_3->setStyleSheet("background-color:green;");
                    ui->LCD_STEP_B_4->setStyleSheet("background-color:red;");
                    ui->LCD_STEP_B_5->setStyleSheet("background-color:red;");
                break;
                case 4:
                    ui->LCD_STEP_B_1->setStyleSheet("background-color:green;");
                    ui->LCD_STEP_B_2->setStyleSheet("background-color:green;");
                    ui->LCD_STEP_B_3->setStyleSheet("background-color:green;");
                    ui->LCD_STEP_B_4->setStyleSheet("background-color:green;");
                    ui->LCD_STEP_B_5->setStyleSheet("background-color:red;");
                break;
                case 5:
                    ui->LCD_STEP_B_1->setStyleSheet("background-color:green;");
                    ui->LCD_STEP_B_2->setStyleSheet("background-color:green;");
                    ui->LCD_STEP_B_3->setStyleSheet("background-color:green;");
                    ui->LCD_STEP_B_4->setStyleSheet("background-color:green;");
                    ui->LCD_STEP_B_5->setStyleSheet("background-color:green;");
                break;
                case 6:
                    ui->LCD_STEP_B_1->setStyleSheet("background-color:green;");
                    ui->LCD_STEP_B_2->setStyleSheet("background-color:green;");
                    ui->LCD_STEP_B_3->setStyleSheet("background-color:green;");
                    ui->LCD_STEP_B_4->setStyleSheet("background-color:green;");
                    ui->LCD_STEP_B_5->setStyleSheet("background-color:green;");
                break;
                default:
                    ui->LCD_STEP_B_1->setStyleSheet("background-color:red;");
                    ui->LCD_STEP_B_2->setStyleSheet("background-color:red;");
                    ui->LCD_STEP_B_3->setStyleSheet("background-color:red;");
                    ui->LCD_STEP_B_4->setStyleSheet("background-color:red;");
                    ui->LCD_STEP_B_5->setStyleSheet("background-color:red;");
                break;
                }
    }
    if(ui->SW_A->currentIndex()==3 && ui->SW_C->currentIndex()==3)
    {
        if(sys_status.sdata.task_state==3){
        ui->PB_C_3_Play->setStyleSheet("QPushButton{border-image: url(:/a/image/실행눌-274x287.png)}");
        ui->PB_C_3_Pause->setStyleSheet("QPushButton{border-image: url(:/a/image/일시정지-200x211.png)}");
        }
        if(sys_status.sdata.task_state!=3){
        ui->PB_C_3_Play->setStyleSheet("QPushButton{border-image: url(:/a/image/실행-274x287.png)}");
        }
        if(sys_status.sdata.task_state==2){
        ui->PB_C_3_Pause->setStyleSheet("QPushButton{border-image: url(:/a/image/일시정지눌-200x211.png)}");
        }
        if(run_alarm == 0 && data_start == 1 && sys_status.sdata.task_state == 2)
        {
            run_alarm = 1;
        }
        switch (TLR_step) {
                case 1:
                    ui->LCD_STEP_C_1->setStyleSheet("background-color:green;");
                    ui->LCD_STEP_C_2->setStyleSheet("background-color:red;");
                    ui->LCD_STEP_C_3->setStyleSheet("background-color:red;");
                    ui->LCD_STEP_C_4->setStyleSheet("background-color:red;");
                    ui->LCD_STEP_C_5->setStyleSheet("background-color:red;");
                break;
                case 2:
                    ui->LCD_STEP_C_1->setStyleSheet("background-color:green;");
                    ui->LCD_STEP_C_2->setStyleSheet("background-color:green;");
                    ui->LCD_STEP_C_3->setStyleSheet("background-color:red;");
                    ui->LCD_STEP_C_4->setStyleSheet("background-color:red;");
                    ui->LCD_STEP_C_5->setStyleSheet("background-color:red;");
                break;
                case 3:
                    ui->LCD_STEP_C_1->setStyleSheet("background-color:green;");
                    ui->LCD_STEP_C_2->setStyleSheet("background-color:green;");
                    ui->LCD_STEP_C_3->setStyleSheet("background-color:green;");
                    ui->LCD_STEP_C_4->setStyleSheet("background-color:red;");
                    ui->LCD_STEP_C_5->setStyleSheet("background-color:red;");
                break;
                case 4:
                    ui->LCD_STEP_C_1->setStyleSheet("background-color:green;");
                    ui->LCD_STEP_C_2->setStyleSheet("background-color:green;");
                    ui->LCD_STEP_C_3->setStyleSheet("background-color:green;");
                    ui->LCD_STEP_C_4->setStyleSheet("background-color:green;");
                    ui->LCD_STEP_C_5->setStyleSheet("background-color:red;");
                break;
                case 5:
                    ui->LCD_STEP_C_1->setStyleSheet("background-color:green;");
                    ui->LCD_STEP_C_2->setStyleSheet("background-color:green;");
                    ui->LCD_STEP_C_3->setStyleSheet("background-color:green;");
                    ui->LCD_STEP_C_4->setStyleSheet("background-color:green;");
                    ui->LCD_STEP_C_5->setStyleSheet("background-color:green;");
                break;
                case 6:
                    ui->LCD_STEP_C_1->setStyleSheet("background-color:green;");
                    ui->LCD_STEP_C_2->setStyleSheet("background-color:green;");
                    ui->LCD_STEP_C_3->setStyleSheet("background-color:green;");
                    ui->LCD_STEP_C_4->setStyleSheet("background-color:green;");
                    ui->LCD_STEP_C_5->setStyleSheet("background-color:green;");
                break;
                default:
                    ui->LCD_STEP_C_1->setStyleSheet("background-color:red;");
                    ui->LCD_STEP_C_2->setStyleSheet("background-color:red;");
                    ui->LCD_STEP_C_3->setStyleSheet("background-color:red;");
                    ui->LCD_STEP_C_4->setStyleSheet("background-color:red;");
                    ui->LCD_STEP_C_5->setStyleSheet("background-color:red;");
                break;
                }
    }
    if(ui->SW_A->currentIndex()==2 && ui->SW_B->currentIndex()==4)
    {
            ui->LB_B_4_Axis1->setText(QString().sprintf("%.3f", sys_status.sdata.tcp_ref[0]));
            ui->LB_B_4_Axis2->setText(QString().sprintf("%.3f", sys_status.sdata.tcp_ref[1]));
            ui->LB_B_4_Axis3->setText(QString().sprintf("%.3f", sys_status.sdata.tcp_ref[2]));
            ui->LB_B_4_Axis4->setText(QString().sprintf("%.3f", sys_status.sdata.tcp_ref[3]));
            ui->LB_B_4_Axis5->setText(QString().sprintf("%.3f", sys_status.sdata.tcp_ref[4]));
            ui->LB_B_4_Axis6->setText(QString().sprintf("%.3f", sys_status.sdata.tcp_ref[5]));

            ui->LB_B_4_Axis7->setText(QString().sprintf("%.3f", sys_status.sdata.aa_joint_ref[0]));
            ui->LB_B_4_Axis8->setText(QString().sprintf("%.3f", sys_status.sdata.aa_joint_ref[1]));
            ui->LB_B_4_Axis9->setText(QString().sprintf("%.3f", sys_status.sdata.aa_joint_ref[2]));

            if(ui->TW_Home->item(0, 1)->text() == "교시중"){
                for(int j=0; j<12; j++){
                    ui->TW_Home->item(0, j)->setBackground(Qt::yellow);
                }
            }else if(ui->TW_Home->item(0, 1)->text() == "설정 완료"){
                for(int j=0; j<12; j++){
                    ui->TW_Home->item(0, j)->setBackground(Qt::darkGreen);
                }
            }
    }
    if(ui->SW_A->currentIndex()==3 && ui->SW_C->currentIndex()==5)
    {
        if(sys_status.sdata.task_state==3){
        ui->PB_C_5_Play->setStyleSheet("QPushButton{border-image: url(:/a/image/실행눌-274x287.png)}");
        ui->PB_C_5_Pause->setStyleSheet("QPushButton{border-image: url(:/a/image/일시정지-200x211.png)}");
        }
        if(sys_status.sdata.task_state!=3){
        ui->PB_C_5_Play->setStyleSheet("QPushButton{border-image: url(:/a/image/실행-274x287.png)}");
        }
        if(sys_status.sdata.task_state==2){
        ui->PB_C_5_Pause->setStyleSheet("QPushButton{border-image: url(:/a/image/일시정지눌-200x211.png)}");
        }
        if(run_alarm == 0 && data_start == 1 && sys_status.sdata.task_state == 2)
        {
            run_alarm = 1;
        }
        switch (TLR_step) {
                case 1:
                    ui->LCD_STEP_C5_1->setStyleSheet("background-color:green;");
                    ui->LCD_STEP_C5_2->setStyleSheet("background-color:red;");
                    ui->LCD_STEP_C5_3->setStyleSheet("background-color:red;");
                    ui->LCD_STEP_C5_4->setStyleSheet("background-color:red;");
                    ui->LCD_STEP_C5_5->setStyleSheet("background-color:red;");
                break;
                case 2:
                    ui->LCD_STEP_C5_1->setStyleSheet("background-color:green;");
                    ui->LCD_STEP_C5_2->setStyleSheet("background-color:green;");
                    ui->LCD_STEP_C5_3->setStyleSheet("background-color:red;");
                    ui->LCD_STEP_C5_4->setStyleSheet("background-color:red;");
                    ui->LCD_STEP_C5_5->setStyleSheet("background-color:red;");
                break;
                case 3:
                    ui->LCD_STEP_C5_1->setStyleSheet("background-color:green;");
                    ui->LCD_STEP_C5_2->setStyleSheet("background-color:green;");
                    ui->LCD_STEP_C5_3->setStyleSheet("background-color:green;");
                    ui->LCD_STEP_C5_4->setStyleSheet("background-color:red;");
                    ui->LCD_STEP_C5_5->setStyleSheet("background-color:red;");
                break;
                case 4:
                    ui->LCD_STEP_C5_1->setStyleSheet("background-color:green;");
                    ui->LCD_STEP_C5_2->setStyleSheet("background-color:green;");
                    ui->LCD_STEP_C5_3->setStyleSheet("background-color:green;");
                    ui->LCD_STEP_C5_4->setStyleSheet("background-color:green;");
                    ui->LCD_STEP_C5_5->setStyleSheet("background-color:red;");
                break;
                case 5:
                    ui->LCD_STEP_C5_1->setStyleSheet("background-color:green;");
                    ui->LCD_STEP_C5_2->setStyleSheet("background-color:green;");
                    ui->LCD_STEP_C5_3->setStyleSheet("background-color:green;");
                    ui->LCD_STEP_C5_4->setStyleSheet("background-color:green;");
                    ui->LCD_STEP_C5_5->setStyleSheet("background-color:green;");
                break;
                case 6:
                    ui->LCD_STEP_C5_1->setStyleSheet("background-color:green;");
                    ui->LCD_STEP_C5_2->setStyleSheet("background-color:green;");
                    ui->LCD_STEP_C5_3->setStyleSheet("background-color:green;");
                    ui->LCD_STEP_C5_4->setStyleSheet("background-color:green;");
                    ui->LCD_STEP_C5_5->setStyleSheet("background-color:green;");
                break;
                default:
                    ui->LCD_STEP_C5_1->setStyleSheet("background-color:red;");
                    ui->LCD_STEP_C5_2->setStyleSheet("background-color:red;");
                    ui->LCD_STEP_C5_3->setStyleSheet("background-color:red;");
                    ui->LCD_STEP_C5_4->setStyleSheet("background-color:red;");
                    ui->LCD_STEP_C5_5->setStyleSheet("background-color:red;");
                break;
                }
    }
    if(ui->SW_A->currentIndex()==3 && ui->SW_C->currentIndex()==7)
    {
        //240105
        float arc_voltage = ((float)((int)((sys_status.sdata.information_chunk_2 >> 2) & 0xFFFF))) * 0.01;
        float arc_current = ((float)((int)((sys_status.sdata.information_chunk_4 >> 15) & 0x1FFF))) * 0.1;
        ui->LE_arc_set_V_3->setText(QString::number(arc_voltage,'f',1));
        ui->LE_arc_set_A_3->setText(QString::number(arc_current,'f',1));

        ui->LE_icv_sec_2->setText(QString::number(icv_sec,'f',1));
        ui->LE_icv_x_2->setText(QString::number(icv_x,'f',1));
        ui->LE_icv_y_2->setText(QString::number(icv_y,'f',1));
        ui->LE_icv_z_2->setText(QString::number(icv_z,'f',1));
        if(sys_status.sdata.digital_in[8] == 1)
        {
            //ui->LCD_arc_state_3->setStyleSheet("background-color:green;");
           // ui->LCD_arc_state_4->setStyleSheet("background-color:green;");
        }
        if(sys_status.sdata.digital_in[8] == 0)
        {
            //ui->LCD_arc_state_3->setStyleSheet("background-color:red;");
            //ui->LCD_arc_state_4->setStyleSheet("background-color:red;");
        }
        if(sys_status.sdata.task_state==3){
        ui->PB_C_7_Play->setStyleSheet("QPushButton{border-image: url(:/a/image/실행눌-274x287.png)}");
        ui->PB_C_7_Pause->setStyleSheet("QPushButton{border-image: url(:/a/image/일시정지-200x211.png)}");
        }
        if(sys_status.sdata.task_state!=3){
        ui->PB_C_7_Play->setStyleSheet("QPushButton{border-image: url(:/a/image/실행-274x287.png)}");
        }
        if(sys_status.sdata.task_state==2){
        ui->PB_C_7_Pause->setStyleSheet("QPushButton{border-image: url(:/a/image/일시정지눌-200x211.png)}");
        }
        if(run_alarm == 0 && data_start == 1 && sys_status.sdata.task_state == 2)
        {
            run_alarm = 1;
        }
        switch (TLR_step) {
                case 1:
                    ui->LCD_STEP_C7_1->setStyleSheet("background-color:green;");
                    ui->LCD_STEP_C7_2->setStyleSheet("background-color:red;");
                    ui->LCD_STEP_C7_3->setStyleSheet("background-color:red;");
                    ui->LCD_STEP_C7_4->setStyleSheet("background-color:red;");
                    ui->LCD_STEP_C7_5->setStyleSheet("background-color:red;");
                break;
                case 2:
                    ui->LCD_STEP_C7_1->setStyleSheet("background-color:green;");
                    ui->LCD_STEP_C7_2->setStyleSheet("background-color:green;");
                    ui->LCD_STEP_C7_3->setStyleSheet("background-color:red;");
                    ui->LCD_STEP_C7_4->setStyleSheet("background-color:red;");
                    ui->LCD_STEP_C7_5->setStyleSheet("background-color:red;");
                break;
                case 3:
                    ui->LCD_STEP_C7_1->setStyleSheet("background-color:green;");
                    ui->LCD_STEP_C7_2->setStyleSheet("background-color:green;");
                    ui->LCD_STEP_C7_3->setStyleSheet("background-color:green;");
                    ui->LCD_STEP_C7_4->setStyleSheet("background-color:red;");
                    ui->LCD_STEP_C7_5->setStyleSheet("background-color:red;");
                break;
                case 4:
                    ui->LCD_STEP_C7_1->setStyleSheet("background-color:green;");
                    ui->LCD_STEP_C7_2->setStyleSheet("background-color:green;");
                    ui->LCD_STEP_C7_3->setStyleSheet("background-color:green;");
                    ui->LCD_STEP_C7_4->setStyleSheet("background-color:green;");
                    ui->LCD_STEP_C7_5->setStyleSheet("background-color:red;");
                break;
                case 5:
                    ui->LCD_STEP_C7_1->setStyleSheet("background-color:green;");
                    ui->LCD_STEP_C7_2->setStyleSheet("background-color:green;");
                    ui->LCD_STEP_C7_3->setStyleSheet("background-color:green;");
                    ui->LCD_STEP_C7_4->setStyleSheet("background-color:green;");
                    ui->LCD_STEP_C7_5->setStyleSheet("background-color:green;");
                break;
                case 6:
                    ui->LCD_STEP_C7_1->setStyleSheet("background-color:green;");
                    ui->LCD_STEP_C7_2->setStyleSheet("background-color:green;");
                    ui->LCD_STEP_C7_3->setStyleSheet("background-color:green;");
                    ui->LCD_STEP_C7_4->setStyleSheet("background-color:green;");
                    ui->LCD_STEP_C7_5->setStyleSheet("background-color:green;");
                break;
                default:
                    ui->LCD_STEP_C7_1->setStyleSheet("background-color:red;");
                    ui->LCD_STEP_C7_2->setStyleSheet("background-color:red;");
                    ui->LCD_STEP_C7_3->setStyleSheet("background-color:red;");
                    ui->LCD_STEP_C7_4->setStyleSheet("background-color:red;");
                    ui->LCD_STEP_C7_5->setStyleSheet("background-color:red;");
                break;
                }
    }
    if(data_start == 1 && sys_status.sdata.task_state == 1)
    {
        data_start = 0;
    }
    if(ui->SW_A->currentIndex()==1)
    {
       play_type = 0;
    }
    if(ui->SW_B->currentIndex()==2 && ui->SW_B_2_C->currentIndex()==2)
    {
        if(save_file_no==1){
            ui->PB_B2C2_1->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
        }else{
            ui->PB_B2C2_1->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 12pt 휴먼모음T;}");
        }
        if(save_file_no==2){
            ui->PB_B2C2_2->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
        }else{
            ui->PB_B2C2_2->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 12pt 휴먼모음T;}");
        }
        if(save_file_no==3){
            ui->PB_B2C2_3->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
        }else{
            ui->PB_B2C2_3->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 12pt 휴먼모음T;}");
        }
        if(save_file_no==4){
            ui->PB_B2C2_4->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
        }else{
            ui->PB_B2C2_4->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 12pt 휴먼모음T;}");
        }
        if(save_file_no==5){
            ui->PB_B2C2_5->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
        }else{
            ui->PB_B2C2_5->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 12pt 휴먼모음T;}");
        }
        if(save_file_no==6){
            ui->PB_B2C2_6->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
        }else{
            ui->PB_B2C2_6->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 12pt 휴먼모음T;}");
        }
        if(save_file_no==7){
            ui->PB_B2C2_7->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
        }else{
            ui->PB_B2C2_7->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 12pt 휴먼모음T;}");
        }
        if(save_file_no==8){
            ui->PB_B2C2_8->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
        }else{
            ui->PB_B2C2_8->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 12pt 휴먼모음T;}");
        }
        if(save_file_no==9){
            ui->PB_B2C2_9->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
        }else{
            ui->PB_B2C2_9->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 12pt 휴먼모음T;}");
        }
        if(save_file_no==10){
            ui->PB_B2C2_10->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
        }else{
            ui->PB_B2C2_10->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 12pt 휴먼모음T;}");
        }
        if(save_file_no==11){
            ui->PB_B2C2_11->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
        }else{
            ui->PB_B2C2_11->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 12pt 휴먼모음T;}");
        }
        if(save_file_no==12){
            ui->PB_B2C2_12->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
        }else{
            ui->PB_B2C2_12->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 12pt 휴먼모음T;}");
        }
        if(save_file_no==13){
            ui->PB_B2C2_13->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
        }else{
            ui->PB_B2C2_13->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 12pt 휴먼모음T;}");
        }
        if(save_file_no==14){
            ui->PB_B2C2_14->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
        }else{
            ui->PB_B2C2_14->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 12pt 휴먼모음T;}");
        }
        if(save_file_no==15){
            ui->PB_B2C2_15->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
        }else{
            ui->PB_B2C2_15->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 12pt 휴먼모음T;}");
        }
        if(save_file_no==16){
            ui->PB_B2C2_16->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
        }else{
            ui->PB_B2C2_16->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 12pt 휴먼모음T;}");
        }
        if(save_file_no==17){
            ui->PB_B2C2_17->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
        }else{
            ui->PB_B2C2_17->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 12pt 휴먼모음T;}");
        }
        if(save_file_no==18){
            ui->PB_B2C2_18->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
        }else{
            ui->PB_B2C2_18->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 12pt 휴먼모음T;}");
        }
        if(save_file_no==19){
            ui->PB_B2C2_19->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
        }else{
            ui->PB_B2C2_19->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 12pt 휴먼모음T;}");
        }
        if(save_file_no==20){
            ui->PB_B2C2_20->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
        }else{
            ui->PB_B2C2_20->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 12pt 휴먼모음T;}");
        }
        if(save_file_no==21){
            ui->PB_B2C2_21->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
        }else{
            ui->PB_B2C2_21->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 12pt 휴먼모음T;}");
        }
        if(save_file_no==22){
            ui->PB_B2C2_22->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
        }else{
            ui->PB_B2C2_22->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 12pt 휴먼모음T;}");
        }
        if(save_file_no==23){
            ui->PB_B2C2_23->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
        }else{
            ui->PB_B2C2_23->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 12pt 휴먼모음T;}");
        }
        if(save_file_no==24){
            ui->PB_B2C2_24->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
        }else{
            ui->PB_B2C2_24->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 12pt 휴먼모음T;}");
        }
        if(save_file_no==25){
            ui->PB_B2C2_25->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
        }else{
            ui->PB_B2C2_25->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 12pt 휴먼모음T;}");
        }
        if(save_file_no==26){
            ui->PB_B2C2_26->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
        }else{
            ui->PB_B2C2_26->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 12pt 휴먼모음T;}");
        }
        if(save_file_no==27){
            ui->PB_B2C2_27->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
        }else{
            ui->PB_B2C2_27->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 12pt 휴먼모음T;}");
        }
        if(save_file_no==28){
            ui->PB_B2C2_28->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
        }else{
            ui->PB_B2C2_28->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 12pt 휴먼모음T;}");
        }
        if(save_file_no==29){
            ui->PB_B2C2_29->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
        }else{
            ui->PB_B2C2_29->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 12pt 휴먼모음T;}");
        }
        if(save_file_no==30){
            ui->PB_B2C2_30->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
        }else{
            ui->PB_B2C2_30->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 12pt 휴먼모음T;}");
        }
        if(save_file_no==31){
            ui->PB_B2C2_31->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
        }else{
            ui->PB_B2C2_31->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 12pt 휴먼모음T;}");
        }
        if(save_file_no==32){
            ui->PB_B2C2_32->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
        }else{
            ui->PB_B2C2_32->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 12pt 휴먼모음T;}");
        }
        if(save_file_no==33){
            ui->PB_B2C2_33->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
        }else{
            ui->PB_B2C2_33->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 12pt 휴먼모음T;}");
        }
        if(save_file_no==34){
            ui->PB_B2C2_34->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
        }else{
            ui->PB_B2C2_34->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 12pt 휴먼모음T;}");
        }
        if(save_file_no==35){
            ui->PB_B2C2_35->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
        }else{
            ui->PB_B2C2_35->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 12pt 휴먼모음T;}");
        }
        if(save_file_no==36){
            ui->PB_B2C2_36->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
        }else{
            ui->PB_B2C2_36->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 12pt 휴먼모음T;}");
        }
        if(save_file_no==37){
            ui->PB_B2C2_37->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
        }else{
            ui->PB_B2C2_37->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 12pt 휴먼모음T;}");
        }
        if(save_file_no==38){
            ui->PB_B2C2_38->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
        }else{
            ui->PB_B2C2_38->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 12pt 휴먼모음T;}");
        }
        if(save_file_no==39){
            ui->PB_B2C2_39->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
        }else{
            ui->PB_B2C2_39->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 12pt 휴먼모음T;}");
        }
        if(save_file_no==40){
            ui->PB_B2C2_40->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
        }else{
            ui->PB_B2C2_40->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 12pt 휴먼모음T;}");
        }
        if(save_file_no==41){
            ui->PB_B2C2_41->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
        }else{
            ui->PB_B2C2_41->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 12pt 휴먼모음T;}");
        }
        if(save_file_no==42){
            ui->PB_B2C2_42->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
        }else{
            ui->PB_B2C2_42->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 12pt 휴먼모음T;}");
        }
        if(save_file_no==43){
            ui->PB_B2C2_43->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
        }else{
            ui->PB_B2C2_43->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 12pt 휴먼모음T;}");
        }
        if(save_file_no==44){
            ui->PB_B2C2_44->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
        }else{
            ui->PB_B2C2_44->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 12pt 휴먼모음T;}");
        }
        if(save_file_no==45){
            ui->PB_B2C2_45->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
        }else{
            ui->PB_B2C2_45->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 12pt 휴먼모음T;}");
        }
        if(save_file_no==46){
            ui->PB_B2C2_46->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
        }else{
            ui->PB_B2C2_46->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 12pt 휴먼모음T;}");
        }
        if(save_file_no==47){
            ui->PB_B2C2_47->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
        }else{
            ui->PB_B2C2_47->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 12pt 휴먼모음T;}");
        }
        if(save_file_no==48){
            ui->PB_B2C2_48->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
        }else{
            ui->PB_B2C2_48->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 12pt 휴먼모음T;}");
        }
        if(save_file_no==49){
            ui->PB_B2C2_49->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
        }else{
            ui->PB_B2C2_49->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 12pt 휴먼모음T;}");
        }
        if(save_file_no==50){
            ui->PB_B2C2_50->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
        }else{
            ui->PB_B2C2_50->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 12pt 휴먼모음T;}");
        }

    }
    if(ui->SW_B->currentIndex()==2 && ui->SW_B_2_C->currentIndex()==3)
    {
        if(save_file_no==1){
            ui->BTN_Save_Tag_LH_1->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_Tag_LH_1->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==2){
            ui->BTN_Save_Main_LH_1->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_Main_LH_1->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==3){
            ui->BTN_Save_Tag_LH_2->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_Tag_LH_2->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==4){
            ui->BTN_Save_Main_LH_2->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_Main_LH_2->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==5){
            ui->BTN_Save_Tag_LH_3->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_Tag_LH_3->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==6){
            ui->BTN_Save_Main_LH_3->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_Main_LH_3->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==7){
            ui->BTN_Save_Tag_LH_4->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_Tag_LH_4->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==8){
            ui->BTN_Save_Main_LH_4->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_Main_LH_4->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==9){
            ui->BTN_Save_Tag_LH_5->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_Tag_LH_5->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==10){
            ui->BTN_Save_Main_LH_5->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_Main_LH_5->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==11){
            ui->BTN_Save_Tag_LH_6->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_Tag_LH_6->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==12){
            ui->BTN_Save_Main_LH_6->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_Main_LH_6->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==13){
            ui->BTN_Save_Tag_LH_7->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_Tag_LH_7->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==14){
            ui->BTN_Save_Main_LH_7->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_Main_LH_7->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==15){
            ui->BTN_Save_Tag_LH_8->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_Tag_LH_8->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==16){
            ui->BTN_Save_Main_LH_8->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_Main_LH_8->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==17){
            ui->BTN_Save_Tag_LH_9->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_Tag_LH_9->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==18){
            ui->BTN_Save_Main_LH_9->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_Main_LH_9->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==19){
            ui->BTN_Save_Tag_LH_10->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_Tag_LH_10->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==20){
            ui->BTN_Save_Main_LH_10->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_Main_LH_10->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==21){
            ui->BTN_Save_Tag_LH_11->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_Tag_LH_11->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==22){
            ui->BTN_Save_Main_LH_11->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_Main_LH_11->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==23){
            ui->BTN_Save_Tag_LH_12->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_Tag_LH_12->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==24){
            ui->BTN_Save_Main_LH_12->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_Main_LH_12->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==25){
            ui->BTN_Save_Tag_LH_13->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_Tag_LH_13->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==26){
            ui->BTN_Save_Main_LH_13->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_Main_LH_13->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==27){
            ui->BTN_Save_Tag_LH_14->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_Tag_LH_14->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==28){
            ui->BTN_Save_Main_LH_14->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_Main_LH_14->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==29){
            ui->BTN_Save_Tag_LH_15->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_Tag_LH_15->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==30){
            ui->BTN_Save_Main_LH_15->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_Main_LH_15->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==31){
            ui->BTN_Save_Tag_LH_16->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_Tag_LH_16->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==32){
            ui->BTN_Save_Main_LH_16->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_Main_LH_16->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==33){
            ui->BTN_Save_Tag_LH_17->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_Tag_LH_17->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==34){
            ui->BTN_Save_Main_LH_17->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_Main_LH_17->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==35){
            ui->BTN_Save_Tag_LH_18->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_Tag_LH_18->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==36){
            ui->BTN_Save_Main_LH_18->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_Main_LH_18->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==37){
            ui->BTN_Save_Tag_LH_19->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_Tag_LH_19->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==38){
            ui->BTN_Save_Main_LH_19->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_Main_LH_19->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==39){
            ui->BTN_Save_Tag_LH_20->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_Tag_LH_20->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==40){
            ui->BTN_Save_Main_LH_20->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_Main_LH_20->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==41){
            ui->BTN_Save_Tag_RH_1->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_Tag_RH_1->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==42){
            ui->BTN_Save_Main_RH_1->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_Main_RH_1->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==43){
            ui->BTN_Save_Tag_RH_2->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_Tag_RH_2->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==44){
            ui->BTN_Save_Main_RH_2->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_Main_RH_2->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==45){
            ui->BTN_Save_Tag_RH_3->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_Tag_RH_3->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==46){
            ui->BTN_Save_Main_RH_3->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_Main_RH_3->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==47){
            ui->BTN_Save_Tag_RH_4->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_Tag_RH_4->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==48){
            ui->BTN_Save_Main_RH_4->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_Main_RH_4->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==49){
            ui->BTN_Save_Tag_RH_5->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_Tag_RH_5->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==50){
            ui->BTN_Save_Main_RH_5->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_Main_RH_5->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==51){
            ui->BTN_Save_Tag_RH_6->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_Tag_RH_6->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==52){
            ui->BTN_Save_Main_RH_6->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_Main_RH_6->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==53){
            ui->BTN_Save_Tag_RH_7->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_Tag_RH_7->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==54){
            ui->BTN_Save_Main_RH_7->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_Main_RH_7->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==55){
            ui->BTN_Save_Tag_RH_8->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_Tag_RH_8->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==56){
            ui->BTN_Save_Main_RH_8->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_Main_RH_8->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==57){
            ui->BTN_Save_Tag_RH_9->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_Tag_RH_9->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==58){
            ui->BTN_Save_Main_RH_9->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_Main_RH_9->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==59){
            ui->BTN_Save_Tag_RH_10->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_Tag_RH_10->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==60){
            ui->BTN_Save_Main_RH_10->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_Main_RH_10->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==61){
            ui->BTN_Save_Tag_RH_11->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_Tag_RH_11->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==62){
            ui->BTN_Save_Main_RH_11->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_Main_RH_11->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==63){
            ui->BTN_Save_Tag_RH_12->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_Tag_RH_12->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==64){
            ui->BTN_Save_Main_RH_12->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_Main_RH_12->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==65){
            ui->BTN_Save_Tag_RH_13->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_Tag_RH_13->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==66){
            ui->BTN_Save_Main_RH_13->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_Main_RH_13->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==67){
            ui->BTN_Save_Tag_RH_14->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_Tag_RH_14->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==68){
            ui->BTN_Save_Main_RH_14->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_Main_RH_14->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==69){
            ui->BTN_Save_Tag_RH_15->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_Tag_RH_15->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==70){
            ui->BTN_Save_Main_RH_15->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_Main_RH_15->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==71){
            ui->BTN_Save_Tag_RH_16->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_Tag_RH_16->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==72){
            ui->BTN_Save_Main_RH_16->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_Main_RH_16->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==73){
            ui->BTN_Save_Tag_RH_17->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_Tag_RH_17->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==74){
            ui->BTN_Save_Main_RH_17->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_Main_RH_17->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==75){
            ui->BTN_Save_Tag_RH_18->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_Tag_RH_18->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==76){
            ui->BTN_Save_Main_RH_18->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_Main_RH_18->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==77){
            ui->BTN_Save_Tag_RH_19->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_Tag_RH_19->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==78){
            ui->BTN_Save_Main_RH_19->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_Main_RH_19->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==79){
            ui->BTN_Save_Tag_RH_20->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_Tag_RH_20->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==80){
            ui->BTN_Save_Main_RH_20->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_Main_RH_20->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }

    }
    if(ui->SW_B->currentIndex()==2 && ui->SW_B_2_C->currentIndex()==4)
    {
        if(save_file_no==1){
            ui->BTN_Save_JIG_1_No_1->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_JIG_1_No_1->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==2){
            ui->BTN_Save_JIG_1_No_2->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_JIG_1_No_2->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==3){
            ui->BTN_Save_JIG_1_No_3->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_JIG_1_No_3->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==4){
            ui->BTN_Save_JIG_1_No_4->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_JIG_1_No_4->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==5){
            ui->BTN_Save_JIG_1_No_5->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_JIG_1_No_5->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==6){
            ui->BTN_Save_JIG_1_No_6->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_JIG_1_No_6->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==7){
            ui->BTN_Save_JIG_1_No_7->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_JIG_1_No_7->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==8){
            ui->BTN_Save_JIG_1_No_8->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_JIG_1_No_8->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==9){
            ui->BTN_Save_JIG_1_No_9->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_JIG_1_No_9->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==10){
            ui->BTN_Save_JIG_1_No_10->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_JIG_1_No_10->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==11){
            ui->BTN_Save_JIG_1_No_11->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_JIG_1_No_11->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==12){
            ui->BTN_Save_JIG_1_No_12->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_JIG_1_No_12->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==13){
            ui->BTN_Save_JIG_1_No_13->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_JIG_1_No_13->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==14){
            ui->BTN_Save_JIG_1_No_14->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_JIG_1_No_14->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==15){
            ui->BTN_Save_JIG_1_No_15->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_JIG_1_No_15->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==16){
            ui->BTN_Save_JIG_1_No_16->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_JIG_1_No_16->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==17){
            ui->BTN_Save_JIG_1_No_17->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_JIG_1_No_17->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==18){
            ui->BTN_Save_JIG_1_No_18->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_JIG_1_No_18->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==19){
            ui->BTN_Save_JIG_1_No_19->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_JIG_1_No_19->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==20){
            ui->BTN_Save_JIG_1_No_20->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_JIG_1_No_20->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==21){
            ui->BTN_Save_JIG_1_No_21->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_JIG_1_No_21->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==22){
            ui->BTN_Save_JIG_1_No_22->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_JIG_1_No_22->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==23){
            ui->BTN_Save_JIG_1_No_23->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_JIG_1_No_23->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==24){
            ui->BTN_Save_JIG_1_No_24->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_JIG_1_No_24->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==25){
            ui->BTN_Save_JIG_1_No_25->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_JIG_1_No_25->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==26){
            ui->BTN_Save_JIG_1_No_26->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_JIG_1_No_26->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==27){
            ui->BTN_Save_JIG_1_No_27->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_JIG_1_No_27->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==28){
            ui->BTN_Save_JIG_1_No_28->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_JIG_1_No_28->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==29){
            ui->BTN_Save_JIG_1_No_29->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_JIG_1_No_29->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==30){
            ui->BTN_Save_JIG_1_No_30->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_JIG_1_No_30->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==31){
            ui->BTN_Save_JIG_1_No_31->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_JIG_1_No_31->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==32){
            ui->BTN_Save_JIG_1_No_32->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_JIG_1_No_32->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==33){
            ui->BTN_Save_JIG_1_No_33->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_JIG_1_No_33->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==34){
            ui->BTN_Save_JIG_1_No_34->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_JIG_1_No_34->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==35){
            ui->BTN_Save_JIG_1_No_35->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_JIG_1_No_35->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==36){
            ui->BTN_Save_JIG_1_No_36->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_JIG_1_No_36->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==37){
            ui->BTN_Save_JIG_1_No_37->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_JIG_1_No_37->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==38){
            ui->BTN_Save_JIG_1_No_38->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_JIG_1_No_38->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==39){
            ui->BTN_Save_JIG_1_No_39->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_JIG_1_No_39->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==40){
            ui->BTN_Save_JIG_1_No_40->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_JIG_1_No_40->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==101){
            ui->BTN_Save_JIG_2_No_1->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_JIG_2_No_1->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==102){
            ui->BTN_Save_JIG_2_No_2->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_JIG_2_No_2->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==103){
            ui->BTN_Save_JIG_2_No_3->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_JIG_2_No_3->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==104){
            ui->BTN_Save_JIG_2_No_4->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_JIG_2_No_4->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==105){
            ui->BTN_Save_JIG_2_No_5->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_JIG_2_No_5->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==106){
            ui->BTN_Save_JIG_2_No_6->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_JIG_2_No_6->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==107){
            ui->BTN_Save_JIG_2_No_7->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_JIG_2_No_7->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==108){
            ui->BTN_Save_JIG_2_No_8->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_JIG_2_No_8->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==109){
            ui->BTN_Save_JIG_2_No_9->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_JIG_2_No_9->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==110){
            ui->BTN_Save_JIG_2_No_10->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_JIG_2_No_10->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==111){
            ui->BTN_Save_JIG_2_No_11->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_JIG_2_No_11->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==112){
            ui->BTN_Save_JIG_2_No_12->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_JIG_2_No_12->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==113){
            ui->BTN_Save_JIG_2_No_13->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_JIG_2_No_13->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==114){
            ui->BTN_Save_JIG_2_No_14->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_JIG_2_No_14->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==115){
            ui->BTN_Save_JIG_2_No_15->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_JIG_2_No_15->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==116){
            ui->BTN_Save_JIG_2_No_16->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_JIG_2_No_16->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==117){
            ui->BTN_Save_JIG_2_No_17->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_JIG_2_No_17->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==118){
            ui->BTN_Save_JIG_2_No_18->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_JIG_2_No_18->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==119){
            ui->BTN_Save_JIG_2_No_19->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_JIG_2_No_19->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==120){
            ui->BTN_Save_JIG_2_No_20->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_JIG_2_No_20->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==121){
            ui->BTN_Save_JIG_2_No_21->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_JIG_2_No_21->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==122){
            ui->BTN_Save_JIG_2_No_22->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_JIG_2_No_22->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==123){
            ui->BTN_Save_JIG_2_No_23->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_JIG_2_No_23->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==124){
            ui->BTN_Save_JIG_2_No_24->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_JIG_2_No_24->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==125){
            ui->BTN_Save_JIG_2_No_25->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_JIG_2_No_25->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==126){
            ui->BTN_Save_JIG_2_No_26->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_JIG_2_No_26->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==127){
            ui->BTN_Save_JIG_2_No_27->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_JIG_2_No_27->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==128){
            ui->BTN_Save_JIG_2_No_28->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_JIG_2_No_28->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==129){
            ui->BTN_Save_JIG_2_No_29->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_JIG_2_No_29->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==130){
            ui->BTN_Save_JIG_2_No_30->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_JIG_2_No_30->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==131){
            ui->BTN_Save_JIG_2_No_31->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_JIG_2_No_31->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==132){
            ui->BTN_Save_JIG_2_No_32->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_JIG_2_No_32->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==133){
            ui->BTN_Save_JIG_2_No_33->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_JIG_2_No_33->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==134){
            ui->BTN_Save_JIG_2_No_34->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_JIG_2_No_34->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==135){
            ui->BTN_Save_JIG_2_No_35->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_JIG_2_No_35->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==136){
            ui->BTN_Save_JIG_2_No_36->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_JIG_2_No_36->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==137){
            ui->BTN_Save_JIG_2_No_37->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_JIG_2_No_37->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==138){
            ui->BTN_Save_JIG_2_No_38->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_JIG_2_No_38->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==139){
            ui->BTN_Save_JIG_2_No_39->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_JIG_2_No_39->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==140){
            ui->BTN_Save_JIG_2_No_40->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_JIG_2_No_40->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
    }

    if(ui->SW_B->currentIndex()==2 && ui->SW_B_2_C->currentIndex()==5)
    {
        if(save_file_no==201){
            ui->BTN_Save_JIG_3_No_1->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_JIG_3_No_1->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==202){
            ui->BTN_Save_JIG_3_No_2->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_JIG_3_No_2->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==203){
            ui->BTN_Save_JIG_3_No_3->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_JIG_3_No_3->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==204){
            ui->BTN_Save_JIG_3_No_4->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_JIG_3_No_4->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==205){
            ui->BTN_Save_JIG_3_No_5->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_JIG_3_No_5->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==206){
            ui->BTN_Save_JIG_3_No_6->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_JIG_3_No_6->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==207){
            ui->BTN_Save_JIG_3_No_7->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_JIG_3_No_7->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==208){
            ui->BTN_Save_JIG_3_No_8->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_JIG_3_No_8->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==209){
            ui->BTN_Save_JIG_3_No_9->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_JIG_3_No_9->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==210){
            ui->BTN_Save_JIG_3_No_10->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_JIG_3_No_10->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==211){
            ui->BTN_Save_JIG_3_No_11->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_JIG_3_No_11->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==212){
            ui->BTN_Save_JIG_3_No_12->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_JIG_3_No_12->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==213){
            ui->BTN_Save_JIG_3_No_13->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_JIG_3_No_13->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==214){
            ui->BTN_Save_JIG_3_No_14->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_JIG_3_No_14->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==215){
            ui->BTN_Save_JIG_3_No_15->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_JIG_3_No_15->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==216){
            ui->BTN_Save_JIG_3_No_16->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_JIG_3_No_16->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==217){
            ui->BTN_Save_JIG_3_No_17->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_JIG_3_No_17->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==218){
            ui->BTN_Save_JIG_3_No_18->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_JIG_3_No_18->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==219){
            ui->BTN_Save_JIG_3_No_19->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_JIG_3_No_19->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==220){
            ui->BTN_Save_JIG_3_No_20->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_JIG_3_No_20->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==221){
            ui->BTN_Save_JIG_3_No_21->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_JIG_3_No_21->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==222){
            ui->BTN_Save_JIG_3_No_22->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_JIG_3_No_22->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==223){
            ui->BTN_Save_JIG_3_No_23->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_JIG_3_No_23->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==224){
            ui->BTN_Save_JIG_3_No_24->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_JIG_3_No_24->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==225){
            ui->BTN_Save_JIG_3_No_25->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_JIG_3_No_25->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==226){
            ui->BTN_Save_JIG_3_No_26->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_JIG_3_No_26->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==227){
            ui->BTN_Save_JIG_3_No_27->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_JIG_3_No_27->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==228){
            ui->BTN_Save_JIG_3_No_28->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_JIG_3_No_28->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==229){
            ui->BTN_Save_JIG_3_No_29->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_JIG_3_No_29->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==230){
            ui->BTN_Save_JIG_3_No_30->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_JIG_3_No_30->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==231){
            ui->BTN_Save_JIG_3_No_31->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_JIG_3_No_31->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==232){
            ui->BTN_Save_JIG_3_No_32->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_JIG_3_No_32->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==233){
            ui->BTN_Save_JIG_3_No_33->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_JIG_3_No_33->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==234){
            ui->BTN_Save_JIG_3_No_34->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_JIG_3_No_34->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==235){
            ui->BTN_Save_JIG_3_No_35->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_JIG_3_No_35->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==236){
            ui->BTN_Save_JIG_3_No_36->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_JIG_3_No_36->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==237){
            ui->BTN_Save_JIG_3_No_37->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_JIG_3_No_37->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==238){
            ui->BTN_Save_JIG_3_No_38->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_JIG_3_No_38->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==239){
            ui->BTN_Save_JIG_3_No_39->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_JIG_3_No_39->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(save_file_no==240){
            ui->BTN_Save_JIG_3_No_40->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Save_JIG_3_No_40->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
    }
    if(ui->SW_C->currentIndex()==0 && ui->SW_C_0_C->currentIndex()==1)
    {
        if(load_file_no==1){
            ui->PB_C0C1_1->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
        }else{
            ui->PB_C0C1_1->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 12pt 휴먼모음T;}");
        }
        if(load_file_no==2){
            ui->PB_C0C1_2->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
        }else{
            ui->PB_C0C1_2->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 12pt 휴먼모음T;}");
        }
        if(load_file_no==3){
            ui->PB_C0C1_3->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
        }else{
            ui->PB_C0C1_3->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 12pt 휴먼모음T;}");
        }
        if(load_file_no==4){
            ui->PB_C0C1_4->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
        }else{
            ui->PB_C0C1_4->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 12pt 휴먼모음T;}");
        }
        if(load_file_no==5){
            ui->PB_C0C1_5->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
        }else{
            ui->PB_C0C1_5->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 12pt 휴먼모음T;}");
        }
        if(load_file_no==6){
            ui->PB_C0C1_6->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
        }else{
            ui->PB_C0C1_6->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 12pt 휴먼모음T;}");
        }
        if(load_file_no==7){
            ui->PB_C0C1_7->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
        }else{
            ui->PB_C0C1_7->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 12pt 휴먼모음T;}");
        }
        if(load_file_no==8){
            ui->PB_C0C1_8->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
        }else{
            ui->PB_C0C1_8->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 12pt 휴먼모음T;}");
        }
        if(load_file_no==9){
            ui->PB_C0C1_9->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
        }else{
            ui->PB_C0C1_9->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 12pt 휴먼모음T;}");
        }
        if(load_file_no==10){
            ui->PB_C0C1_10->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
        }else{
            ui->PB_C0C1_10->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 12pt 휴먼모음T;}");
        }
        if(load_file_no==11){
            ui->PB_C0C1_11->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
        }else{
            ui->PB_C0C1_11->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 12pt 휴먼모음T;}");
        }
        if(load_file_no==12){
            ui->PB_C0C1_12->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
        }else{
            ui->PB_C0C1_12->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 12pt 휴먼모음T;}");
        }
        if(load_file_no==13){
            ui->PB_C0C1_13->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
        }else{
            ui->PB_C0C1_13->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 12pt 휴먼모음T;}");
        }
        if(load_file_no==14){
            ui->PB_C0C1_14->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
        }else{
            ui->PB_C0C1_14->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 12pt 휴먼모음T;}");
        }
        if(load_file_no==15){
            ui->PB_C0C1_15->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
        }else{
            ui->PB_C0C1_15->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 12pt 휴먼모음T;}");
        }
        if(load_file_no==16){
            ui->PB_C0C1_16->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
        }else{
            ui->PB_C0C1_16->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 12pt 휴먼모음T;}");
        }
        if(load_file_no==17){
            ui->PB_C0C1_17->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
        }else{
            ui->PB_C0C1_17->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 12pt 휴먼모음T;}");
        }
        if(load_file_no==18){
            ui->PB_C0C1_18->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
        }else{
            ui->PB_C0C1_18->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 12pt 휴먼모음T;}");
        }
        if(load_file_no==19){
            ui->PB_C0C1_19->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
        }else{
            ui->PB_C0C1_19->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 12pt 휴먼모음T;}");
        }
        if(load_file_no==20){
            ui->PB_C0C1_20->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
        }else{
            ui->PB_C0C1_20->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 12pt 휴먼모음T;}");
        }
        if(load_file_no==21){
            ui->PB_C0C1_21->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
        }else{
            ui->PB_C0C1_21->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 12pt 휴먼모음T;}");
        }
        if(load_file_no==22){
            ui->PB_C0C1_22->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
        }else{
            ui->PB_C0C1_22->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 12pt 휴먼모음T;}");
        }
        if(load_file_no==23){
            ui->PB_C0C1_23->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
        }else{
            ui->PB_C0C1_23->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 12pt 휴먼모음T;}");
        }
        if(load_file_no==24){
            ui->PB_C0C1_24->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
        }else{
            ui->PB_C0C1_24->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 12pt 휴먼모음T;}");
        }
        if(load_file_no==25){
            ui->PB_C0C1_25->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
        }else{
            ui->PB_C0C1_25->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 12pt 휴먼모음T;}");
        }
        if(load_file_no==26){
            ui->PB_C0C1_26->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
        }else{
            ui->PB_C0C1_26->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 12pt 휴먼모음T;}");
        }
        if(load_file_no==27){
            ui->PB_C0C1_27->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
        }else{
            ui->PB_C0C1_27->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 12pt 휴먼모음T;}");
        }
        if(load_file_no==28){
            ui->PB_C0C1_28->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
        }else{
            ui->PB_C0C1_28->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 12pt 휴먼모음T;}");
        }
        if(load_file_no==29){
            ui->PB_C0C1_29->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
        }else{
            ui->PB_C0C1_29->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 12pt 휴먼모음T;}");
        }
        if(load_file_no==30){
            ui->PB_C0C1_30->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
        }else{
            ui->PB_C0C1_30->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 12pt 휴먼모음T;}");
        }
        if(load_file_no==31){
            ui->PB_C0C1_31->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
        }else{
            ui->PB_C0C1_31->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 12pt 휴먼모음T;}");
        }
        if(load_file_no==32){
            ui->PB_C0C1_32->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
        }else{
            ui->PB_C0C1_32->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 12pt 휴먼모음T;}");
        }
        if(load_file_no==33){
            ui->PB_C0C1_33->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
        }else{
            ui->PB_C0C1_33->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 12pt 휴먼모음T;}");
        }
        if(load_file_no==34){
            ui->PB_C0C1_34->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
        }else{
            ui->PB_C0C1_34->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 12pt 휴먼모음T;}");
        }
        if(load_file_no==35){
            ui->PB_C0C1_35->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
        }else{
            ui->PB_C0C1_35->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 12pt 휴먼모음T;}");
        }
        if(load_file_no==36){
            ui->PB_C0C1_36->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
        }else{
            ui->PB_C0C1_36->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 12pt 휴먼모음T;}");
        }
        if(load_file_no==37){
            ui->PB_C0C1_37->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
        }else{
            ui->PB_C0C1_37->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 12pt 휴먼모음T;}");
        }
        if(load_file_no==38){
            ui->PB_C0C1_38->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
        }else{
            ui->PB_C0C1_38->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 12pt 휴먼모음T;}");
        }
        if(load_file_no==39){
            ui->PB_C0C1_39->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
        }else{
            ui->PB_C0C1_39->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 12pt 휴먼모음T;}");
        }
        if(load_file_no==40){
            ui->PB_C0C1_40->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
        }else{
            ui->PB_C0C1_40->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 12pt 휴먼모음T;}");
        }
        if(load_file_no==41){
            ui->PB_C0C1_41->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
        }else{
            ui->PB_C0C1_41->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 12pt 휴먼모음T;}");
        }
        if(load_file_no==42){
            ui->PB_C0C1_42->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
        }else{
            ui->PB_C0C1_42->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 12pt 휴먼모음T;}");
        }
        if(load_file_no==43){
            ui->PB_C0C1_43->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
        }else{
            ui->PB_C0C1_43->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 12pt 휴먼모음T;}");
        }
        if(load_file_no==44){
            ui->PB_C0C1_44->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
        }else{
            ui->PB_C0C1_44->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 12pt 휴먼모음T;}");
        }
        if(load_file_no==45){
            ui->PB_C0C1_45->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
        }else{
            ui->PB_C0C1_45->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 12pt 휴먼모음T;}");
        }
        if(load_file_no==46){
            ui->PB_C0C1_46->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
        }else{
            ui->PB_C0C1_46->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 12pt 휴먼모음T;}");
        }
        if(load_file_no==47){
            ui->PB_C0C1_47->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
        }else{
            ui->PB_C0C1_47->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 12pt 휴먼모음T;}");
        }
        if(load_file_no==48){
            ui->PB_C0C1_48->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
        }else{
            ui->PB_C0C1_48->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 12pt 휴먼모음T;}");
        }
        if(load_file_no==49){
            ui->PB_C0C1_49->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
        }else{
            ui->PB_C0C1_49->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 12pt 휴먼모음T;}");
        }
        if(load_file_no==50){
            ui->PB_C0C1_50->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
        }else{
            ui->PB_C0C1_50->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 12pt 휴먼모음T;}");
        }
    }
    if(ui->SW_A->currentIndex()==3 && ui->SW_C->currentIndex()==2)
    {
        if(line_lh_load_no==1){
            ui->BTN_Load_Tag_LH_1->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_Tag_LH_1->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_lh_load_no==2){
            ui->BTN_Load_Main_LH_1->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_Main_LH_1->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_lh_load_no==3){
            ui->BTN_Load_Tag_LH_2->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_Tag_LH_2->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_lh_load_no==4){
            ui->BTN_Load_Main_LH_2->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_Main_LH_2->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_lh_load_no==5){
            ui->BTN_Load_Tag_LH_3->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_Tag_LH_3->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_lh_load_no==6){
            ui->BTN_Load_Main_LH_3->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_Main_LH_3->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_lh_load_no==7){
            ui->BTN_Load_Tag_LH_4->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_Tag_LH_4->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_lh_load_no==8){
            ui->BTN_Load_Main_LH_4->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_Main_LH_4->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_lh_load_no==9){
            ui->BTN_Load_Tag_LH_5->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_Tag_LH_5->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_lh_load_no==10){
            ui->BTN_Load_Main_LH_5->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_Main_LH_5->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_lh_load_no==11){
            ui->BTN_Load_Tag_LH_6->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_Tag_LH_6->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_lh_load_no==12){
            ui->BTN_Load_Main_LH_6->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_Main_LH_6->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_lh_load_no==13){
            ui->BTN_Load_Tag_LH_7->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_Tag_LH_7->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_lh_load_no==14){
            ui->BTN_Load_Main_LH_7->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_Main_LH_7->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_lh_load_no==15){
            ui->BTN_Load_Tag_LH_8->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_Tag_LH_8->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_lh_load_no==16){
            ui->BTN_Load_Main_LH_8->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_Main_LH_8->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_lh_load_no==17){
            ui->BTN_Load_Tag_LH_9->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_Tag_LH_9->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_lh_load_no==18){
            ui->BTN_Load_Main_LH_9->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_Main_LH_9->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_lh_load_no==19){
            ui->BTN_Load_Tag_LH_10->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_Tag_LH_10->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_lh_load_no==20){
            ui->BTN_Load_Main_LH_10->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_Main_LH_10->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_lh_load_no==21){
            ui->BTN_Load_Tag_LH_11->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_Tag_LH_11->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_lh_load_no==22){
            ui->BTN_Load_Main_LH_11->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_Main_LH_11->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_lh_load_no==23){
            ui->BTN_Load_Tag_LH_12->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_Tag_LH_12->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_lh_load_no==24){
            ui->BTN_Load_Main_LH_12->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_Main_LH_12->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_lh_load_no==25){
            ui->BTN_Load_Tag_LH_13->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_Tag_LH_13->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_lh_load_no==26){
            ui->BTN_Load_Main_LH_13->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_Main_LH_13->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_lh_load_no==27){
            ui->BTN_Load_Tag_LH_14->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_Tag_LH_14->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_lh_load_no==28){
            ui->BTN_Load_Main_LH_14->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_Main_LH_14->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_lh_load_no==29){
            ui->BTN_Load_Tag_LH_15->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_Tag_LH_15->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_lh_load_no==30){
            ui->BTN_Load_Main_LH_15->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_Main_LH_15->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_lh_load_no==31){
            ui->BTN_Load_Tag_LH_16->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_Tag_LH_16->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_lh_load_no==32){
            ui->BTN_Load_Main_LH_16->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_Main_LH_16->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_lh_load_no==33){
            ui->BTN_Load_Tag_LH_17->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_Tag_LH_17->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_lh_load_no==34){
            ui->BTN_Load_Main_LH_17->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_Main_LH_17->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_lh_load_no==35){
            ui->BTN_Load_Tag_LH_18->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_Tag_LH_18->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_lh_load_no==36){
            ui->BTN_Load_Main_LH_18->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_Main_LH_18->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_lh_load_no==37){
            ui->BTN_Load_Tag_LH_19->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_Tag_LH_19->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_lh_load_no==38){
            ui->BTN_Load_Main_LH_19->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_Main_LH_19->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_lh_load_no==39){
            ui->BTN_Load_Tag_LH_20->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_Tag_LH_20->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_lh_load_no==40){
            ui->BTN_Load_Main_LH_20->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_Main_LH_20->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_rh_load_no==1){
            ui->BTN_Load_Tag_RH_1->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_Tag_RH_1->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_rh_load_no==2){
            ui->BTN_Load_Main_RH_1->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_Main_RH_1->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_rh_load_no==3){
            ui->BTN_Load_Tag_RH_2->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_Tag_RH_2->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_rh_load_no==4){
            ui->BTN_Load_Main_RH_2->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_Main_RH_2->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_rh_load_no==5){
            ui->BTN_Load_Tag_RH_3->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_Tag_RH_3->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_rh_load_no==6){
            ui->BTN_Load_Main_RH_3->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_Main_RH_3->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_rh_load_no==7){
            ui->BTN_Load_Tag_RH_4->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_Tag_RH_4->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_rh_load_no==8){
            ui->BTN_Load_Main_RH_4->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_Main_RH_4->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_rh_load_no==9){
            ui->BTN_Load_Tag_RH_5->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_Tag_RH_5->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_rh_load_no==10){
            ui->BTN_Load_Main_RH_5->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_Main_RH_5->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_rh_load_no==11){
            ui->BTN_Load_Tag_RH_6->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_Tag_RH_6->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_rh_load_no==12){
            ui->BTN_Load_Main_RH_6->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_Main_RH_6->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_rh_load_no==13){
            ui->BTN_Load_Tag_RH_7->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_Tag_RH_7->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_rh_load_no==14){
            ui->BTN_Load_Main_RH_7->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_Main_RH_7->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_rh_load_no==15){
            ui->BTN_Load_Tag_RH_8->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_Tag_RH_8->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_rh_load_no==16){
            ui->BTN_Load_Main_RH_8->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_Main_RH_8->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_rh_load_no==17){
            ui->BTN_Load_Tag_RH_9->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_Tag_RH_9->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_rh_load_no==18){
            ui->BTN_Load_Main_RH_9->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_Main_RH_9->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_rh_load_no==19){
            ui->BTN_Load_Tag_RH_10->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_Tag_RH_10->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_rh_load_no==20){
            ui->BTN_Load_Main_RH_10->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_Main_RH_10->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_rh_load_no==21){
            ui->BTN_Load_Tag_RH_11->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_Tag_RH_11->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_rh_load_no==22){
            ui->BTN_Load_Main_RH_11->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_Main_RH_11->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_rh_load_no==23){
            ui->BTN_Load_Tag_RH_12->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_Tag_RH_12->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_rh_load_no==24){
            ui->BTN_Load_Main_RH_12->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_Main_RH_12->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_rh_load_no==25){
            ui->BTN_Load_Tag_RH_13->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_Tag_RH_13->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_rh_load_no==26){
            ui->BTN_Load_Main_RH_13->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_Main_RH_13->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_rh_load_no==27){
            ui->BTN_Load_Tag_RH_14->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_Tag_RH_14->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_rh_load_no==28){
            ui->BTN_Load_Main_RH_14->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_Main_RH_14->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_rh_load_no==29){
            ui->BTN_Load_Tag_RH_15->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_Tag_RH_15->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_rh_load_no==30){
            ui->BTN_Load_Main_RH_15->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_Main_RH_15->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_rh_load_no==31){
            ui->BTN_Load_Tag_RH_16->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_Tag_RH_16->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_rh_load_no==32){
            ui->BTN_Load_Main_RH_16->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_Main_RH_16->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_rh_load_no==33){
            ui->BTN_Load_Tag_RH_17->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_Tag_RH_17->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_rh_load_no==34){
            ui->BTN_Load_Main_RH_17->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_Main_RH_17->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_rh_load_no==35){
            ui->BTN_Load_Tag_RH_18->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_Tag_RH_18->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_rh_load_no==36){
            ui->BTN_Load_Main_RH_18->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_Main_RH_18->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_rh_load_no==37){
            ui->BTN_Load_Tag_RH_19->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_Tag_RH_19->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_rh_load_no==38){
            ui->BTN_Load_Main_RH_19->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_Main_RH_19->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_rh_load_no==39){
            ui->BTN_Load_Tag_RH_20->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_Tag_RH_20->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_rh_load_no==40){
            ui->BTN_Load_Main_RH_20->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_Main_RH_20->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }

    }
    if(ui->SW_A->currentIndex()==3 && ui->SW_C->currentIndex()==4)
    {
        if(line_JIG1_load_no==1){
            ui->BTN_Load_JIG_1_No_1->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_JIG_1_No_1->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_JIG1_load_no==2){
            ui->BTN_Load_JIG_1_No_2->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_JIG_1_No_2->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_JIG1_load_no==3){
            ui->BTN_Load_JIG_1_No_3->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_JIG_1_No_3->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_JIG1_load_no==4){
            ui->BTN_Load_JIG_1_No_4->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_JIG_1_No_4->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_JIG1_load_no==5){
            ui->BTN_Load_JIG_1_No_5->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_JIG_1_No_5->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_JIG1_load_no==6){
            ui->BTN_Load_JIG_1_No_6->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_JIG_1_No_6->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_JIG1_load_no==7){
            ui->BTN_Load_JIG_1_No_7->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_JIG_1_No_7->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_JIG1_load_no==8){
            ui->BTN_Load_JIG_1_No_8->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_JIG_1_No_8->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_JIG1_load_no==9){
            ui->BTN_Load_JIG_1_No_9->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_JIG_1_No_9->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_JIG1_load_no==10){
            ui->BTN_Load_JIG_1_No_10->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_JIG_1_No_10->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_JIG1_load_no==11){
            ui->BTN_Load_JIG_1_No_11->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_JIG_1_No_11->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_JIG1_load_no==12){
            ui->BTN_Load_JIG_1_No_12->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_JIG_1_No_12->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_JIG1_load_no==13){
            ui->BTN_Load_JIG_1_No_13->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_JIG_1_No_13->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_JIG1_load_no==14){
            ui->BTN_Load_JIG_1_No_14->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_JIG_1_No_14->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_JIG1_load_no==15){
            ui->BTN_Load_JIG_1_No_15->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_JIG_1_No_15->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_JIG1_load_no==16){
            ui->BTN_Load_JIG_1_No_16->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_JIG_1_No_16->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_JIG1_load_no==17){
            ui->BTN_Load_JIG_1_No_17->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_JIG_1_No_17->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_JIG1_load_no==18){
            ui->BTN_Load_JIG_1_No_18->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_JIG_1_No_18->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_JIG1_load_no==19){
            ui->BTN_Load_JIG_1_No_19->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_JIG_1_No_19->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_JIG1_load_no==20){
            ui->BTN_Load_JIG_1_No_20->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_JIG_1_No_20->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_JIG1_load_no==21){
            ui->BTN_Load_JIG_1_No_21->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_JIG_1_No_21->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_JIG1_load_no==22){
            ui->BTN_Load_JIG_1_No_22->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_JIG_1_No_22->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_JIG1_load_no==23){
            ui->BTN_Load_JIG_1_No_23->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_JIG_1_No_23->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_JIG1_load_no==24){
            ui->BTN_Load_JIG_1_No_24->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_JIG_1_No_24->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_JIG1_load_no==25){
            ui->BTN_Load_JIG_1_No_25->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_JIG_1_No_25->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_JIG1_load_no==26){
            ui->BTN_Load_JIG_1_No_26->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_JIG_1_No_26->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_JIG1_load_no==27){
            ui->BTN_Load_JIG_1_No_27->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_JIG_1_No_27->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_JIG1_load_no==28){
            ui->BTN_Load_JIG_1_No_28->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_JIG_1_No_28->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_JIG1_load_no==29){
            ui->BTN_Load_JIG_1_No_29->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_JIG_1_No_29->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_JIG1_load_no==30){
            ui->BTN_Load_JIG_1_No_30->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_JIG_1_No_30->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_JIG1_load_no==31){
            ui->BTN_Load_JIG_1_No_31->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_JIG_1_No_31->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_JIG1_load_no==32){
            ui->BTN_Load_JIG_1_No_32->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_JIG_1_No_32->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_JIG1_load_no==33){
            ui->BTN_Load_JIG_1_No_33->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_JIG_1_No_33->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_JIG1_load_no==34){
            ui->BTN_Load_JIG_1_No_34->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_JIG_1_No_34->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_JIG1_load_no==35){
            ui->BTN_Load_JIG_1_No_35->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_JIG_1_No_35->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_JIG1_load_no==36){
            ui->BTN_Load_JIG_1_No_36->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_JIG_1_No_36->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_JIG1_load_no==37){
            ui->BTN_Load_JIG_1_No_37->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_JIG_1_No_37->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_JIG1_load_no==38){
            ui->BTN_Load_JIG_1_No_38->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_JIG_1_No_38->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_JIG1_load_no==39){
            ui->BTN_Load_JIG_1_No_39->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_JIG_1_No_39->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_JIG1_load_no==40){
            ui->BTN_Load_JIG_1_No_40->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_JIG_1_No_40->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        //
        if(line_JIG2_load_no==1){
            ui->BTN_Load_JIG_2_No_1->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_JIG_2_No_1->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_JIG2_load_no==2){
            ui->BTN_Load_JIG_2_No_2->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_JIG_2_No_2->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_JIG2_load_no==3){
            ui->BTN_Load_JIG_2_No_3->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_JIG_2_No_3->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_JIG2_load_no==4){
            ui->BTN_Load_JIG_2_No_4->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_JIG_2_No_4->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_JIG2_load_no==5){
            ui->BTN_Load_JIG_2_No_5->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_JIG_2_No_5->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_JIG2_load_no==6){
            ui->BTN_Load_JIG_2_No_6->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_JIG_2_No_6->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_JIG2_load_no==7){
            ui->BTN_Load_JIG_2_No_7->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_JIG_2_No_7->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_JIG2_load_no==8){
            ui->BTN_Load_JIG_2_No_8->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_JIG_2_No_8->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_JIG2_load_no==9){
            ui->BTN_Load_JIG_2_No_9->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_JIG_2_No_9->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_JIG2_load_no==10){
            ui->BTN_Load_JIG_2_No_10->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_JIG_2_No_10->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_JIG2_load_no==11){
            ui->BTN_Load_JIG_2_No_11->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_JIG_2_No_11->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_JIG2_load_no==12){
            ui->BTN_Load_JIG_2_No_12->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_JIG_2_No_12->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_JIG2_load_no==13){
            ui->BTN_Load_JIG_2_No_13->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_JIG_2_No_13->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_JIG2_load_no==14){
            ui->BTN_Load_JIG_2_No_14->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_JIG_2_No_14->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_JIG2_load_no==15){
            ui->BTN_Load_JIG_2_No_15->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_JIG_2_No_15->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_JIG2_load_no==16){
            ui->BTN_Load_JIG_2_No_16->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_JIG_2_No_16->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_JIG2_load_no==17){
            ui->BTN_Load_JIG_2_No_17->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_JIG_2_No_17->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_JIG2_load_no==18){
            ui->BTN_Load_JIG_2_No_18->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_JIG_2_No_18->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_JIG2_load_no==19){
            ui->BTN_Load_JIG_2_No_19->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_JIG_2_No_19->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_JIG2_load_no==20){
            ui->BTN_Load_JIG_2_No_20->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_JIG_2_No_20->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_JIG2_load_no==21){
            ui->BTN_Load_JIG_2_No_21->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_JIG_2_No_21->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_JIG2_load_no==22){
            ui->BTN_Load_JIG_2_No_22->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_JIG_2_No_22->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_JIG2_load_no==23){
            ui->BTN_Load_JIG_2_No_23->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_JIG_2_No_23->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_JIG2_load_no==24){
            ui->BTN_Load_JIG_2_No_24->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_JIG_2_No_24->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_JIG2_load_no==25){
            ui->BTN_Load_JIG_2_No_25->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_JIG_2_No_25->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_JIG2_load_no==26){
            ui->BTN_Load_JIG_2_No_26->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_JIG_2_No_26->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_JIG2_load_no==27){
            ui->BTN_Load_JIG_2_No_27->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_JIG_2_No_27->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_JIG2_load_no==28){
            ui->BTN_Load_JIG_2_No_28->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_JIG_2_No_28->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_JIG2_load_no==29){
            ui->BTN_Load_JIG_2_No_29->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_JIG_2_No_29->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_JIG2_load_no==30){
            ui->BTN_Load_JIG_2_No_30->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_JIG_2_No_30->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_JIG2_load_no==31){
            ui->BTN_Load_JIG_2_No_31->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_JIG_2_No_31->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_JIG2_load_no==32){
            ui->BTN_Load_JIG_2_No_32->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_JIG_2_No_32->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_JIG2_load_no==33){
            ui->BTN_Load_JIG_2_No_33->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_JIG_2_No_33->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_JIG2_load_no==34){
            ui->BTN_Load_JIG_2_No_34->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_JIG_2_No_34->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_JIG2_load_no==35){
            ui->BTN_Load_JIG_2_No_35->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_JIG_2_No_35->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_JIG2_load_no==36){
            ui->BTN_Load_JIG_2_No_36->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_JIG_2_No_36->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_JIG2_load_no==37){
            ui->BTN_Load_JIG_2_No_37->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_JIG_2_No_37->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_JIG2_load_no==38){
            ui->BTN_Load_JIG_2_No_38->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_JIG_2_No_38->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_JIG2_load_no==39){
            ui->BTN_Load_JIG_2_No_39->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_JIG_2_No_39->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_JIG2_load_no==40){
            ui->BTN_Load_JIG_2_No_40->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_JIG_2_No_40->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        //
        if(line_JIG3_load_no==1){
            ui->BTN_Load_JIG_3_No_1->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_JIG_3_No_1->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_JIG3_load_no==2){
            ui->BTN_Load_JIG_3_No_2->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_JIG_3_No_2->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_JIG3_load_no==3){
            ui->BTN_Load_JIG_3_No_3->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_JIG_3_No_3->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_JIG3_load_no==4){
            ui->BTN_Load_JIG_3_No_4->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_JIG_3_No_4->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_JIG3_load_no==5){
            ui->BTN_Load_JIG_3_No_5->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_JIG_3_No_5->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_JIG3_load_no==6){
            ui->BTN_Load_JIG_3_No_6->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_JIG_3_No_6->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_JIG3_load_no==7){
            ui->BTN_Load_JIG_3_No_7->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_JIG_3_No_7->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_JIG3_load_no==8){
            ui->BTN_Load_JIG_3_No_8->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_JIG_3_No_8->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_JIG3_load_no==9){
            ui->BTN_Load_JIG_3_No_9->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_JIG_3_No_9->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_JIG3_load_no==10){
            ui->BTN_Load_JIG_3_No_10->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_JIG_3_No_10->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_JIG3_load_no==11){
            ui->BTN_Load_JIG_3_No_11->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_JIG_3_No_11->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_JIG3_load_no==12){
            ui->BTN_Load_JIG_3_No_12->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_JIG_3_No_12->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_JIG3_load_no==13){
            ui->BTN_Load_JIG_3_No_13->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_JIG_3_No_13->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_JIG3_load_no==14){
            ui->BTN_Load_JIG_3_No_14->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_JIG_3_No_14->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_JIG3_load_no==15){
            ui->BTN_Load_JIG_3_No_15->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_JIG_3_No_15->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_JIG3_load_no==16){
            ui->BTN_Load_JIG_3_No_16->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_JIG_3_No_16->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_JIG3_load_no==17){
            ui->BTN_Load_JIG_3_No_17->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_JIG_3_No_17->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_JIG3_load_no==18){
            ui->BTN_Load_JIG_3_No_18->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_JIG_3_No_18->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_JIG3_load_no==19){
            ui->BTN_Load_JIG_3_No_19->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_JIG_3_No_19->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_JIG3_load_no==20){
            ui->BTN_Load_JIG_3_No_20->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_JIG_3_No_20->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_JIG3_load_no==21){
            ui->BTN_Load_JIG_3_No_21->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_JIG_3_No_21->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_JIG3_load_no==22){
            ui->BTN_Load_JIG_3_No_22->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_JIG_3_No_22->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_JIG3_load_no==23){
            ui->BTN_Load_JIG_3_No_23->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_JIG_3_No_23->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_JIG3_load_no==24){
            ui->BTN_Load_JIG_3_No_24->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_JIG_3_No_24->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_JIG3_load_no==25){
            ui->BTN_Load_JIG_3_No_25->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_JIG_3_No_25->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_JIG3_load_no==26){
            ui->BTN_Load_JIG_3_No_26->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_JIG_3_No_26->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_JIG3_load_no==27){
            ui->BTN_Load_JIG_3_No_27->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_JIG_3_No_27->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_JIG3_load_no==28){
            ui->BTN_Load_JIG_3_No_28->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_JIG_3_No_28->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_JIG3_load_no==29){
            ui->BTN_Load_JIG_3_No_29->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_JIG_3_No_29->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_JIG3_load_no==30){
            ui->BTN_Load_JIG_3_No_30->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_JIG_3_No_30->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_JIG3_load_no==31){
            ui->BTN_Load_JIG_3_No_31->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_JIG_3_No_31->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_JIG3_load_no==32){
            ui->BTN_Load_JIG_3_No_32->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_JIG_3_No_32->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_JIG3_load_no==33){
            ui->BTN_Load_JIG_3_No_33->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_JIG_3_No_33->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_JIG3_load_no==34){
            ui->BTN_Load_JIG_3_No_34->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_JIG_3_No_34->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_JIG3_load_no==35){
            ui->BTN_Load_JIG_3_No_35->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_JIG_3_No_35->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_JIG3_load_no==36){
            ui->BTN_Load_JIG_3_No_36->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_JIG_3_No_36->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_JIG3_load_no==37){
            ui->BTN_Load_JIG_3_No_37->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_JIG_3_No_37->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_JIG3_load_no==38){
            ui->BTN_Load_JIG_3_No_38->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_JIG_3_No_38->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_JIG3_load_no==39){
            ui->BTN_Load_JIG_3_No_39->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_JIG_3_No_39->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }
        if(line_JIG3_load_no==40){
            ui->BTN_Load_JIG_3_No_40->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));color: rgb(255, 255, 255);font: 8pt 휴먼모음T;}");
        }else{
            ui->BTN_Load_JIG_3_No_40->setStyleSheet("QPushButton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 255, 255, 255));font: 8pt 휴먼모음T;}");
        }

    }
    if(ui->SW_A->currentIndex()==5 && ui->SW_E->currentIndex()==0)
    {
        switch (manual_M_PB) {
        case 0:
            ui->PB_E_1->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 0, 0);font: 12pt 휴먼모음T;}");
            ui->PB_E_2->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            ui->PB_E_3->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            ui->PB_E_4->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            ui->PB_E_5->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            ui->PB_E_6->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            ui->PB_E_7->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            ui->PB_E_8->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            ui->PB_E_9->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            ui->PB_E_10->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            break;
        case 1:
            ui->PB_E_1->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            ui->PB_E_2->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 0, 0);font: 12pt 휴먼모음T;}");
            ui->PB_E_3->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            ui->PB_E_4->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            ui->PB_E_5->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            ui->PB_E_6->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            ui->PB_E_7->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            ui->PB_E_8->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            ui->PB_E_9->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            ui->PB_E_10->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            break;
        case 2:
            ui->PB_E_1->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            ui->PB_E_2->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            ui->PB_E_3->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 0, 0);font: 12pt 휴먼모음T;}");
            ui->PB_E_4->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            ui->PB_E_5->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            ui->PB_E_6->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            ui->PB_E_7->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            ui->PB_E_8->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            ui->PB_E_9->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            ui->PB_E_10->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            break;
        case 3:
            ui->PB_E_1->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            ui->PB_E_2->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            ui->PB_E_3->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            ui->PB_E_4->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 0, 0);font: 12pt 휴먼모음T;}");
            ui->PB_E_5->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            ui->PB_E_6->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            ui->PB_E_7->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            ui->PB_E_8->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            ui->PB_E_9->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            ui->PB_E_10->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            break;
        case 4:
            ui->PB_E_1->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            ui->PB_E_2->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            ui->PB_E_3->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            ui->PB_E_4->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            ui->PB_E_5->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 0, 0);font: 12pt 휴먼모음T;}");
            ui->PB_E_6->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            ui->PB_E_7->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            ui->PB_E_8->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            ui->PB_E_9->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            ui->PB_E_10->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            break;
        case 5:
            ui->PB_E_1->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            ui->PB_E_2->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            ui->PB_E_3->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            ui->PB_E_4->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            ui->PB_E_5->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            ui->PB_E_6->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 0, 0);font: 12pt 휴먼모음T;}");
            ui->PB_E_7->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            ui->PB_E_8->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            ui->PB_E_9->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            ui->PB_E_10->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            break;
        case 6:
            ui->PB_E_1->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            ui->PB_E_2->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            ui->PB_E_3->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            ui->PB_E_4->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            ui->PB_E_5->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            ui->PB_E_6->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            ui->PB_E_7->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 0, 0);font: 12pt 휴먼모음T;}");
            ui->PB_E_8->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            ui->PB_E_9->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            ui->PB_E_10->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            break;
        case 7:
            ui->PB_E_1->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            ui->PB_E_2->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            ui->PB_E_3->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            ui->PB_E_4->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            ui->PB_E_5->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            ui->PB_E_6->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            ui->PB_E_7->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            ui->PB_E_8->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 0, 0);font: 12pt 휴먼모음T;}");
            ui->PB_E_9->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            ui->PB_E_10->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            break;
        case 8:
            ui->PB_E_1->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            ui->PB_E_2->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            ui->PB_E_3->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            ui->PB_E_4->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            ui->PB_E_5->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            ui->PB_E_6->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            ui->PB_E_7->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            ui->PB_E_8->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            ui->PB_E_9->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 0, 0);font: 12pt 휴먼모음T;}");
            ui->PB_E_10->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            break;
        case 9:
            ui->PB_E_1->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            ui->PB_E_2->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            ui->PB_E_3->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            ui->PB_E_4->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            ui->PB_E_5->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            ui->PB_E_6->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            ui->PB_E_7->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            ui->PB_E_8->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            ui->PB_E_9->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            ui->PB_E_10->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 0, 0);font: 12pt 휴먼모음T;}");
            break;
        default:
            break;
        }
        switch (manual_T5_PB) {
        case 0:
            ui->PB_T5_0->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 0, 0);font: 12pt 휴먼모음T;}");
            ui->PB_T5_1->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            ui->PB_T5_2->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            ui->PB_T5_3->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            ui->PB_T5_4->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            ui->PB_T5_5->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            ui->PB_T5_6->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            break;
        case 1:
            ui->PB_T5_0->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            ui->PB_T5_1->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 0, 0);font: 12pt 휴먼모음T;}");
            ui->PB_T5_2->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            ui->PB_T5_3->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            ui->PB_T5_4->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            ui->PB_T5_5->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            ui->PB_T5_6->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            break;
        case 2:
            ui->PB_T5_0->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            ui->PB_T5_1->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            ui->PB_T5_2->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 0, 0);font: 12pt 휴먼모음T;}");
            ui->PB_T5_3->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            ui->PB_T5_4->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            ui->PB_T5_5->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            ui->PB_T5_6->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            break;
        case 3:
            ui->PB_T5_0->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            ui->PB_T5_1->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            ui->PB_T5_2->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            ui->PB_T5_3->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 0, 0);font: 12pt 휴먼모음T;}");
            ui->PB_T5_4->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            ui->PB_T5_5->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            ui->PB_T5_6->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            break;
        case 4:
            ui->PB_T5_0->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            ui->PB_T5_1->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            ui->PB_T5_2->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            ui->PB_T5_3->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            ui->PB_T5_4->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 0, 0);font: 12pt 휴먼모음T;}");
            ui->PB_T5_5->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            ui->PB_T5_6->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            break;
        case 5:
            ui->PB_T5_0->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            ui->PB_T5_1->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            ui->PB_T5_2->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            ui->PB_T5_3->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            ui->PB_T5_4->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            ui->PB_T5_5->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 0, 0);font: 12pt 휴먼모음T;}");
            ui->PB_T5_6->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            break;
        case 6:
            ui->PB_T5_0->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            ui->PB_T5_1->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            ui->PB_T5_2->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            ui->PB_T5_3->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            ui->PB_T5_4->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            ui->PB_T5_5->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 255, 255);font: 12pt 휴먼모음T;}");
            ui->PB_T5_6->setStyleSheet("QPushButton{background-color: rgba(255, 255, 255, 0); color: rgb(255, 0, 0);font: 12pt 휴먼모음T;}");
        default:
            break;
        }

    }
    if(ui->SW_A->currentIndex()==5)
    {
        // 동영상
        if(manual_state == 0)
        {
            switch (ui->SW_E0_R->currentIndex()) {
            case 0:
                mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "manual/" + "1. 제품구성 OK"+".MP4"));
                mVideo = new QVideoWidget(ui->GV_E0R0);
                mMediaPlayer->setVideoOutput(mVideo);
                mVideo->setFixedSize(ui->GV_E0R0->width(),ui->GV_E0R0->height());
                mVideo->show();
                mMediaPlayer->play();
                break;
            case 1:
                mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "manual/" + "2. 설치방법 OK"+".MP4"));
                mVideo = new QVideoWidget(ui->GV_E0R1);
                mMediaPlayer->setVideoOutput(mVideo);
                mVideo->setFixedSize(ui->GV_E0R1->width(),ui->GV_E0R1->height());
                mVideo->show();
                mMediaPlayer->play();
                break;
            case 2:
                mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "manual/" + "3. 부팅 및 종료 OK"+".MP4"));
                mVideo = new QVideoWidget(ui->GV_E0R2);
                mMediaPlayer->setVideoOutput(mVideo);
                mVideo->setFixedSize(ui->GV_E0R2->width(),ui->GV_E0R2->height());
                mVideo->show();
                mMediaPlayer->play();
                break;
            case 3:
                mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "manual/" + "4. 프로그램 실행 OK"+".MP4"));
                mVideo = new QVideoWidget(ui->GV_E0R3);
                mMediaPlayer->setVideoOutput(mVideo);
                mVideo->setFixedSize(ui->GV_E0R3->width(),ui->GV_E0R3->height());
                mVideo->show();
                mMediaPlayer->play();
                break;
            case 4:
                mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "manual/" + "5. 교시방법 OK"+".MP4"));
                mVideo = new QVideoWidget(ui->GV_E0R4);
                mMediaPlayer->setVideoOutput(mVideo);
                mVideo->setFixedSize(ui->GV_E0R4->width(),ui->GV_E0R4->height());
                mVideo->show();
                mMediaPlayer->play();
                break;
            case 5:
                mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "manual/" + "6-1 가접용접 OK"+".MP4"));
                mVideo = new QVideoWidget(ui->GV_E0R5);
                mMediaPlayer->setVideoOutput(mVideo);
                mVideo->setFixedSize(ui->GV_E0R5->width(),ui->GV_E0R5->height());
                mVideo->show();
                mMediaPlayer->play();
                break;
            case 6:
                mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "manual/" + "6-2 직선용접 OK"+".MP4"));
                mVideo = new QVideoWidget(ui->GV_E0R6);
                mMediaPlayer->setVideoOutput(mVideo);
                mVideo->setFixedSize(ui->GV_E0R6->width(),ui->GV_E0R6->height());
                mVideo->show();
                mMediaPlayer->play();
                break;
            case 7:
                mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "manual/" + "6-3 곡선용접 OK"+".MP4"));
                mVideo = new QVideoWidget(ui->GV_E0R7);
                mMediaPlayer->setVideoOutput(mVideo);
                mVideo->setFixedSize(ui->GV_E0R7->width(),ui->GV_E0R7->height());
                mVideo->show();
                mMediaPlayer->play();
                break;
            case 8:
                mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "manual/" + "6-4 전환곡선용접 OK"+".MP4"));
                mVideo = new QVideoWidget(ui->GV_E0R8);
                mMediaPlayer->setVideoOutput(mVideo);
                mVideo->setFixedSize(ui->GV_E0R8->width(),ui->GV_E0R8->height());
                mVideo->show();
                mMediaPlayer->play();
                break;
            case 9:
                mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "manual/" + "6-5 위빙용접 OK"+".MP4"));
                mVideo = new QVideoWidget(ui->GV_E0R9);
                mMediaPlayer->setVideoOutput(mVideo);
                mVideo->setFixedSize(ui->GV_E0R9->width(),ui->GV_E0R9->height());
                mVideo->show();
                mMediaPlayer->play();
                break;
            case 10:
                mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "manual/" + "6-6 대기,자유이동,직선이동 OK"+".MP4"));
                mVideo = new QVideoWidget(ui->GV_E0R10);
                mMediaPlayer->setVideoOutput(mVideo);
                mVideo->setFixedSize(ui->GV_E0R10->width(),ui->GV_E0R10->height());
                mVideo->show();
                mMediaPlayer->play();
                break;
            case 11:
                mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "manual/" + "6-7 응용용접 OK"+".MP4"));
                mVideo = new QVideoWidget(ui->GV_E0R11);
                mMediaPlayer->setVideoOutput(mVideo);
                mVideo->setFixedSize(ui->GV_E0R11->width(),ui->GV_E0R11->height());
                mVideo->show();
                mMediaPlayer->play();
                break;
            case 12:
                mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "manual/" + "7. 프로그램 저장 OK"+".MP4"));
                mVideo = new QVideoWidget(ui->GV_E0R12);
                mMediaPlayer->setVideoOutput(mVideo);
                mVideo->setFixedSize(ui->GV_E0R12->width(),ui->GV_E0R12->height());
                mVideo->show();
                mMediaPlayer->play();
                break;
            case 13:
                mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "manual/" + "8. 프로그램 읽기 OK"+".MP4"));
                mVideo = new QVideoWidget(ui->GV_E0R13);
                mMediaPlayer->setVideoOutput(mVideo);
                mVideo->setFixedSize(ui->GV_E0R13->width(),ui->GV_E0R13->height());
                mVideo->show();
                mMediaPlayer->play();
                break;
            case 14:
                mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "manual/" + "9. 프로그램 수정  OK"+".MP4"));
                mVideo = new QVideoWidget(ui->GV_E0R14);
                mMediaPlayer->setVideoOutput(mVideo);
                mVideo->setFixedSize(ui->GV_E0R14->width(),ui->GV_E0R14->height());
                mVideo->show();
                mMediaPlayer->play();
                break;
            case 15:
                mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "manual/" + "10. TCP 설정 OK"+".MP4"));
                mVideo = new QVideoWidget(ui->GV_E0R15);
                mMediaPlayer->setVideoOutput(mVideo);
                mVideo->setFixedSize(ui->GV_E0R15->width(),ui->GV_E0R15->height());
                mVideo->show();
                mMediaPlayer->play();
                break;
            default:
                break;
            }
            manual_state = 1;
        }
    }

}
void MainWindow::on_HS_BASE_SPEED_valueChanged(int value){
    float spd = (float)value/100.0;
    ui->LB_BASE_SPEED->setText(QString().sprintf("%.1f%%", spd*100.0));
    speed_changed = true;
}

// 세팅 파일 관리 ===========================================================================
#define FOLD_START___SETTING_PART   {
void MainWindow::Setting_Speed_And_IP_Load(void){

    FILE *fp_set = fopen(".\\jct_settings\\speed_and_ip.txt", "r");
    if(fp_set == NULL){
        // NO file ... lets re-make file
        qDebug()<<"No Seting file";
        Setting_Speed_And_IP_Save();
    }else{
        while(true){
            int ret = fscanf(fp_set, "%f %f %f %f %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %f %f %f %f %f %f %f %d %d %d %d %d %d %d %d %d %d"
                             , &setting_air_move_J_vel, &setting_air_move_J_acc, &setting_air_move_L_vel, &setting_air_move_L_acc
                             , &setting_pc_ip_address[0], &setting_pc_ip_address[1], &setting_pc_ip_address[2], &setting_pc_ip_address[3]
                             , &setting_rb_ip_address[0], &setting_rb_ip_address[1], &setting_rb_ip_address[2], &setting_rb_ip_address[3]
                             , &setting_is_axis7,&setting_is_axis8,&setting_is_axis9,&setting_is_sound,&setting_is_tig_welder,&setting_is_wire
                             , &setting_arc_retry_vel,&setting_arc_retry_time,&setting_air_Axis_0_vel
                             , &setting_air_Axis_0_acc,&setting_air_Axis_1_vel,&setting_air_Axis_1_acc,&setting_air_Axis_2_vel,&setting_air_Axis_2_acc
                             , &setting_memory_data[0],&setting_memory_data[1],&setting_memory_data[2],&setting_memory_data[3],&setting_memory_data[4],&setting_memory_data[5],&setting_is_foot,&setting_is_robotfree,&setting_is_weld_type,&setting_is_weld_play);
            if(ret == EOF){
                break;
            }
        }
        fclose(fp_set);
    }
    ui->LE_D_0_Movj_Vel->setText(QString::number(setting_air_move_J_vel,'f',1));
    ui->LE_D_0_Movj_Acc->setText(QString::number(setting_air_move_J_acc,'f',1));
    ui->LE_D_0_Movl_Vel->setText(QString::number(setting_air_move_L_vel,'f',1));
    ui->LE_D_0_Movl_Acc->setText(QString::number(setting_air_move_L_acc,'f',1));
    ui->LE_D_0_Arc_retry_vel->setText(QString::number(setting_arc_retry_vel));
    ui->LE_D_0_Arc_retry_time->setText(QString::number(setting_arc_retry_time,'f',1));
    ui->LE_D_0_Axis_0_Vel->setText(QString::number(setting_air_Axis_0_vel,'f',1));
    ui->LE_D_0_Axis_0_Acc->setText(QString::number(setting_air_Axis_0_acc,'f',1));
    ui->LE_D_0_Axis_1_Vel->setText(QString::number(setting_air_Axis_1_vel,'f',1));
    ui->LE_D_0_Axis_1_Acc->setText(QString::number(setting_air_Axis_1_acc,'f',1));
    ui->LE_D_0_Axis_2_Vel->setText(QString::number(setting_air_Axis_2_vel,'f',1));
    ui->LE_D_0_Axis_2_Acc->setText(QString::number(setting_air_Axis_2_acc,'f',1));

    ui->LE_D_0_data_0->setText(QString::number(setting_memory_data[0]));
    ui->LE_D_0_data_1->setText(QString::number(setting_memory_data[1]));
    ui->LE_D_0_data_2->setText(QString::number(setting_memory_data[2]));
    ui->LE_D_0_data_3->setText(QString::number(setting_memory_data[3]));
    ui->LE_D_0_data_4->setText(QString::number(setting_memory_data[4]));
    ui->LE_D_0_data_5->setText(QString::number(setting_memory_data[5]));

    data_axis7 = setting_is_axis7; // 0 : 미사용 , 1 : 사용
    data_axis8 = setting_is_axis8; // 0 : 미사용 , 1 : 사용
    data_axis9 = setting_is_axis9; // 0 : 미사용 , 1 : 사용
    data_sound = setting_is_sound; // 0 : 미사용 , 1 : 사용
    data_tig = setting_is_tig_welder;
    data_wire = setting_is_wire; // 0 : 미사용 , 1 : 사용
    data_foot = setting_is_foot; // 0 : 미사용 , 1 : 사용
    data_robotfree = setting_is_robotfree; // 0 : 미사용 , 1 : 사용
    data_weld_play = setting_is_weld_play;
    data_weld_type = setting_is_weld_type; // 0 : 미사용, 1 : 아날로그용접기, 2 : 디지털용접기, 3 : 프로니우스용접기, 4 : ESAB용접기,

    qDebug()<<"-----------------------";
    qDebug()<<"일반 설정 정보";
    qDebug()<<"-----------------------";
    qDebug()<<"J 속도/가속도: "<<setting_air_move_J_vel<<" deg/s "<<setting_air_move_J_acc<<" deg/ss";
    qDebug()<<"L 속도/가속도: "<<setting_air_move_L_vel<<" deg/s "<<setting_air_move_L_acc<<" deg/ss";
    qDebug()<<"PC Ip: "<<setting_pc_ip_address[0]<<"."<<setting_pc_ip_address[1]<<"."<<setting_pc_ip_address[2]<<"."<<setting_pc_ip_address[3];
    qDebug()<<"RB Ip: "<<setting_rb_ip_address[0]<<"."<<setting_rb_ip_address[1]<<"."<<setting_rb_ip_address[2]<<"."<<setting_rb_ip_address[3];
    qDebug()<<"Axis7 여부: "<<setting_is_axis7<<endl;
    qDebug()<<"Axis8 여부: "<<setting_is_axis8<<endl;
    qDebug()<<"Axis9 여부: "<<setting_is_axis9<<endl;
    qDebug()<<"SOUND 여부: "<<setting_is_sound<<endl;
    qDebug()<<"티그 여부: "<<setting_is_tig_welder<<endl;
    qDebug()<<"WIRE 여부: "<<setting_is_wire<<endl;
    qDebug()<<"FOOT 여부: "<<setting_is_foot<<endl;
    qDebug()<<"Weld Type: "<<setting_is_weld_type<<endl;
    qDebug()<<"Arc Retry 횟수: "<<setting_arc_retry_vel<<endl;
    qDebug()<<"Arc Retry 재시도 시간: "<<setting_arc_retry_time<<endl;
    qDebug()<<"Axis 7 속도/가속도: "<<setting_air_Axis_0_vel<<" mm/s "<<setting_air_Axis_0_acc<<" mm/ss";
    qDebug()<<"Axis 8 속도/가속도: "<<setting_air_Axis_1_vel<<" deg/s "<<setting_air_Axis_1_acc<<" deg/ss";
    qDebug()<<"Axis 9 속도/가속도: "<<setting_air_Axis_2_vel<<" deg/s "<<setting_air_Axis_2_acc<<" deg/ss";
    qDebug()<<"기능 0 : "<<setting_memory_data[0]<<""<<"기능 1 : "<<setting_memory_data[1]<<""<<"기능 2 : "<<setting_memory_data[2]<<""<<"기능 3 : "<<setting_memory_data[3]<<""<<"기능 4 : "<<setting_memory_data[4]<<""<<"기능 5 : "<<setting_memory_data[5];
    qDebug()<<"-----------------------";
}

void MainWindow::Setting_Speed_And_IP_Save(void){
    setting_air_move_J_vel = ui->LE_D_0_Movj_Vel->text().toFloat();
    setting_air_move_J_acc = ui->LE_D_0_Movj_Acc->text().toFloat();
    setting_air_move_L_vel = ui->LE_D_0_Movl_Vel->text().toFloat();
    setting_air_move_L_acc = ui->LE_D_0_Movl_Acc->text().toFloat();
    setting_is_axis7 = data_axis7; // 0:미사용, 1:사용
    setting_is_axis8 = data_axis8; // 0:미사용, 1:사용
    setting_is_axis9 = data_axis9; // 0:미사용, 1:사용
    setting_is_sound = data_sound; // 0:미사용, 1:사용
    setting_is_tig_welder = data_tig;
    setting_is_wire = data_wire; // 0:미사용, 1:사용
    setting_is_foot = data_foot; // 0:미사용, 1:사용
    setting_is_robotfree = data_robotfree; // 0:미사용, 1:사용
    setting_is_weld_play = data_weld_play;
    setting_is_weld_type = data_weld_type; // 0:미사용, 1:아날로그용접기, 2:디지털용접기, 3:프로니우스용접기, 4:ESAB용접기,
    setting_arc_retry_vel = ui->LE_D_0_Arc_retry_vel->text().toInt();
    setting_arc_retry_time = ui->LE_D_0_Arc_retry_time->text().toFloat();

    setting_air_Axis_0_vel = ui->LE_D_0_Axis_0_Vel->text().toFloat();
    setting_air_Axis_0_acc = ui->LE_D_0_Axis_0_Acc->text().toFloat();
    setting_air_Axis_1_vel = ui->LE_D_0_Axis_1_Vel->text().toFloat();
    setting_air_Axis_1_acc = ui->LE_D_0_Axis_1_Acc->text().toFloat();
    setting_air_Axis_2_vel = ui->LE_D_0_Axis_2_Vel->text().toFloat();
    setting_air_Axis_2_acc = ui->LE_D_0_Axis_2_Acc->text().toFloat();

    setting_memory_data[0] = ui->LE_D_0_data_0->text().toInt();
    setting_memory_data[1] = ui->LE_D_0_data_1->text().toInt();
    setting_memory_data[2] = ui->LE_D_0_data_2->text().toInt();
    setting_memory_data[3] = ui->LE_D_0_data_3->text().toInt();
    setting_memory_data[4] = ui->LE_D_0_data_4->text().toInt();
    setting_memory_data[5] = ui->LE_D_0_data_5->text().toInt();

    FILE* fp_set;
    fp_set = fopen(".\\jct_settings\\speed_and_ip.txt", "w");
    fprintf(fp_set, "%.2f\t%.2f\t%.2f\t%.2f\t%d\t%d\t%d\t%d\t%d\t%d\t%d\t%d\t%d\t%d\t%d\t%d\t%d\t%d\t%d\t%.2f\t%.2f\t%.2f\t%.2f\t%.2f\t%.2f\t%.2f\t%d\t%d\t%d\t%d\t%d\t%d\t%d\t%d\t%d\t%d"
            , setting_air_move_J_vel, setting_air_move_J_acc, setting_air_move_L_vel, setting_air_move_L_acc
            , setting_pc_ip_address[0], setting_pc_ip_address[1], setting_pc_ip_address[2], setting_pc_ip_address[3]
            , setting_rb_ip_address[0], setting_rb_ip_address[1], setting_rb_ip_address[2], setting_rb_ip_address[3]
            , setting_is_axis7,setting_is_axis8,setting_is_axis9,setting_is_sound,setting_is_tig_welder,setting_is_wire
            , setting_arc_retry_vel,setting_arc_retry_time,setting_air_Axis_0_vel
            , setting_air_Axis_0_acc,setting_air_Axis_1_vel,setting_air_Axis_1_acc,setting_air_Axis_2_vel,setting_air_Axis_2_acc
            , setting_memory_data[0],setting_memory_data[1],setting_memory_data[2],setting_memory_data[3],setting_memory_data[4],setting_memory_data[5],setting_is_foot,setting_is_robotfree,setting_is_weld_type,setting_is_weld_play);
    fclose(fp_set);
    fflush(fp_set);
}

void MainWindow::Setting_Memory_Load(void){
    FILE *fp_set = fopen(".\\jct_settings\\memory.txt", "r");
    if(fp_set == NULL){
        // NO file ... lets re-make file
        qDebug()<<"No Seting file";
        Setting_Memory_Save();
    }else{
        int index = 0;
        while(true){
            //qDebug()<<"i am reading...!!!";
            int ret = fscanf(fp_set, "%f %f %f %f %d %f %f %f %f %f %f %f %f %d %f"
                             , &MEMORY[index].current, &MEMORY[index].voltage, &MEMORY[index].speed, &MEMORY[index].time
                             , &MEMORY[index].weaving_number, &MEMORY[index].weaving_time, &MEMORY[index].weaving_amp
                             , &MEMORY[index].on_current, &MEMORY[index].on_voltage, &MEMORY[index].on_time
                             , &MEMORY[index].off_current, &MEMORY[index].off_voltage, &MEMORY[index].off_time
                             , &MEMORY[index].wire, &MEMORY[index].w_persent);
            index++;
            if(ret == EOF){
                break;
            }
        }
        fclose(fp_set);
    }

    qDebug()<<"-----------------------";
    qDebug()<<"용접 설정 정보";
    qDebug()<<"-----------------------";

        ui->LE_D_0_A1->setText(QString::number(MEMORY[0].current,'f',1)); // 전류
        ui->LE_D_0_A2->setText(QString::number(MEMORY[1].current,'f',1));
        ui->LE_D_0_A3->setText(QString::number(MEMORY[2].current,'f',1));
        ui->LE_D_0_A4->setText(QString::number(MEMORY[3].current,'f',1));
        ui->LE_D_0_A5->setText(QString::number(MEMORY[4].current,'f',1));
        ui->LE_D_0_A6->setText(QString::number(MEMORY[5].current,'f',1));
        ui->LE_D_0_A7->setText(QString::number(MEMORY[6].current,'f',1));
        ui->LE_D_0_A8->setText(QString::number(MEMORY[7].current,'f',1));
        ui->LE_D_0_A9->setText(QString::number(MEMORY[8].current,'f',1));
        ui->LE_D_0_A10->setText(QString::number(MEMORY[9].current,'f',1));

        ui->LE_D_0_V1->setText(QString::number(MEMORY[0].voltage,'f',1));
        ui->LE_D_0_V2->setText(QString::number(MEMORY[1].voltage,'f',1));
        ui->LE_D_0_V3->setText(QString::number(MEMORY[2].voltage,'f',1));
        ui->LE_D_0_V4->setText(QString::number(MEMORY[3].voltage,'f',1));
        ui->LE_D_0_V5->setText(QString::number(MEMORY[4].voltage,'f',1));
        ui->LE_D_0_V6->setText(QString::number(MEMORY[5].voltage,'f',1));
        ui->LE_D_0_V7->setText(QString::number(MEMORY[6].voltage,'f',1));
        ui->LE_D_0_V8->setText(QString::number(MEMORY[7].voltage,'f',1));
        ui->LE_D_0_V9->setText(QString::number(MEMORY[8].voltage,'f',1));
        ui->LE_D_0_V10->setText(QString::number(MEMORY[9].voltage,'f',1));

        ui->LE_D_0_S1->setText(QString::number(MEMORY[0].speed,'f',1));
        ui->LE_D_0_S2->setText(QString::number(MEMORY[1].speed,'f',1));
        ui->LE_D_0_S3->setText(QString::number(MEMORY[2].speed,'f',1));
        ui->LE_D_0_S4->setText(QString::number(MEMORY[3].speed,'f',1));
        ui->LE_D_0_S5->setText(QString::number(MEMORY[4].speed,'f',1));
        ui->LE_D_0_S6->setText(QString::number(MEMORY[5].speed,'f',1));
        ui->LE_D_0_S7->setText(QString::number(MEMORY[6].speed,'f',1));
        ui->LE_D_0_S8->setText(QString::number(MEMORY[7].speed,'f',1));
        ui->LE_D_0_S9->setText(QString::number(MEMORY[8].speed,'f',1));
        ui->LE_D_0_S10->setText(QString::number(MEMORY[9].speed,'f',1));

        ui->LE_D_0_ONA1->setText(QString::number(MEMORY[0].on_current,'f',1)); // ON시 전류
        ui->LE_D_0_ONA2->setText(QString::number(MEMORY[1].on_current,'f',1));
        ui->LE_D_0_ONA3->setText(QString::number(MEMORY[2].on_current,'f',1));
        ui->LE_D_0_ONA4->setText(QString::number(MEMORY[3].on_current,'f',1));
        ui->LE_D_0_ONA5->setText(QString::number(MEMORY[4].on_current,'f',1));
        ui->LE_D_0_ONA6->setText(QString::number(MEMORY[5].on_current,'f',1));
        ui->LE_D_0_ONA7->setText(QString::number(MEMORY[6].on_current,'f',1));
        ui->LE_D_0_ONA8->setText(QString::number(MEMORY[7].on_current,'f',1));
        ui->LE_D_0_ONA9->setText(QString::number(MEMORY[8].on_current,'f',1));
        ui->LE_D_0_ONA10->setText(QString::number(MEMORY[9].on_current,'f',1));

        ui->LE_D_0_ONV1->setText(QString::number(MEMORY[0].on_voltage,'f',1)); // ON시 전압
        ui->LE_D_0_ONV2->setText(QString::number(MEMORY[1].on_voltage,'f',1));
        ui->LE_D_0_ONV3->setText(QString::number(MEMORY[2].on_voltage,'f',1));
        ui->LE_D_0_ONV4->setText(QString::number(MEMORY[3].on_voltage,'f',1));
        ui->LE_D_0_ONV5->setText(QString::number(MEMORY[4].on_voltage,'f',1));
        ui->LE_D_0_ONV6->setText(QString::number(MEMORY[5].on_voltage,'f',1));
        ui->LE_D_0_ONV7->setText(QString::number(MEMORY[6].on_voltage,'f',1));
        ui->LE_D_0_ONV8->setText(QString::number(MEMORY[7].on_voltage,'f',1));
        ui->LE_D_0_ONV9->setText(QString::number(MEMORY[8].on_voltage,'f',1));
        ui->LE_D_0_ONV10->setText(QString::number(MEMORY[9].on_voltage,'f',1));

        ui->LE_D_0_ONT1->setText(QString::number(MEMORY[0].on_time,'f',1)); // ARC ON 시간
        ui->LE_D_0_ONT2->setText(QString::number(MEMORY[1].on_time,'f',1));
        ui->LE_D_0_ONT3->setText(QString::number(MEMORY[2].on_time,'f',1));
        ui->LE_D_0_ONT4->setText(QString::number(MEMORY[3].on_time,'f',1));
        ui->LE_D_0_ONT5->setText(QString::number(MEMORY[4].on_time,'f',1));
        ui->LE_D_0_ONT6->setText(QString::number(MEMORY[5].on_time,'f',1));
        ui->LE_D_0_ONT7->setText(QString::number(MEMORY[6].on_time,'f',1));
        ui->LE_D_0_ONT8->setText(QString::number(MEMORY[7].on_time,'f',1));
        ui->LE_D_0_ONT9->setText(QString::number(MEMORY[8].on_time,'f',1));
        ui->LE_D_0_ONT10->setText(QString::number(MEMORY[9].on_time,'f',1));

        ui->LE_D_0_OFA1->setText(QString::number(MEMORY[0].off_current,'f',1)); // OFF시 전류
        ui->LE_D_0_OFA2->setText(QString::number(MEMORY[1].off_current,'f',1));
        ui->LE_D_0_OFA3->setText(QString::number(MEMORY[2].off_current,'f',1));
        ui->LE_D_0_OFA4->setText(QString::number(MEMORY[3].off_current,'f',1));
        ui->LE_D_0_OFA5->setText(QString::number(MEMORY[4].off_current,'f',1));
        ui->LE_D_0_OFA6->setText(QString::number(MEMORY[5].off_current,'f',1));
        ui->LE_D_0_OFA7->setText(QString::number(MEMORY[6].off_current,'f',1));
        ui->LE_D_0_OFA8->setText(QString::number(MEMORY[7].off_current,'f',1));
        ui->LE_D_0_OFA9->setText(QString::number(MEMORY[8].off_current,'f',1));
        ui->LE_D_0_OFA10->setText(QString::number(MEMORY[9].off_current,'f',1));


        ui->LE_D_0_OFV1->setText(QString::number(MEMORY[0].off_voltage,'f',1)); // OFF시 전압
        ui->LE_D_0_OFV2->setText(QString::number(MEMORY[1].off_voltage,'f',1));
        ui->LE_D_0_OFV3->setText(QString::number(MEMORY[2].off_voltage,'f',1));
        ui->LE_D_0_OFV4->setText(QString::number(MEMORY[3].off_voltage,'f',1));
        ui->LE_D_0_OFV5->setText(QString::number(MEMORY[4].off_voltage,'f',1));
        ui->LE_D_0_OFV6->setText(QString::number(MEMORY[5].off_voltage,'f',1));
        ui->LE_D_0_OFV7->setText(QString::number(MEMORY[6].off_voltage,'f',1));
        ui->LE_D_0_OFV8->setText(QString::number(MEMORY[7].off_voltage,'f',1));
        ui->LE_D_0_OFV9->setText(QString::number(MEMORY[8].off_voltage,'f',1));
        ui->LE_D_0_OFV10->setText(QString::number(MEMORY[9].off_voltage,'f',1));

        ui->LE_D_0_OFT1->setText(QString::number(MEMORY[0].off_time,'f',1)); // ARC OFF 시간
        ui->LE_D_0_OFT2->setText(QString::number(MEMORY[1].off_time,'f',1));
        ui->LE_D_0_OFT3->setText(QString::number(MEMORY[2].off_time,'f',1));
        ui->LE_D_0_OFT4->setText(QString::number(MEMORY[3].off_time,'f',1));
        ui->LE_D_0_OFT5->setText(QString::number(MEMORY[4].off_time,'f',1));
        ui->LE_D_0_OFT6->setText(QString::number(MEMORY[5].off_time,'f',1));
        ui->LE_D_0_OFT7->setText(QString::number(MEMORY[6].off_time,'f',1));
        ui->LE_D_0_OFT8->setText(QString::number(MEMORY[7].off_time,'f',1));
        ui->LE_D_0_OFT9->setText(QString::number(MEMORY[8].off_time,'f',1));
        ui->LE_D_0_OFT10->setText(QString::number(MEMORY[9].off_time,'f',1));
        if(data_weld_type==3){
            ui->LE_B0_A_11->setText(QString::number(MEMORY[10].current));
        }
        if(data_weld_type!=3){
            ui->LE_B0_A_11->setText(QString::number(MEMORY[10].current,'f',1));
        }
        //ESAB
        if(data_weld_type == 4 && MEMORY[10].voltage <= 50)
        {
            MEMORY[10].voltage = 50;
        }
        if(data_weld_type == 4 && MEMORY[10].voltage >= 150)
        {
            MEMORY[10].voltage = 150;
        }
        if(data_weld_type == 4 && MEMORY[10].on_voltage <= 50)
        {
            MEMORY[10].on_voltage = 50;
        }
        if(data_weld_type == 4 && MEMORY[10].on_voltage >= 150)
        {
            MEMORY[10].on_voltage = 150;
        }
        if(data_weld_type == 4 && MEMORY[10].off_voltage <= 50)
        {
            MEMORY[10].off_voltage = 50;
        }
        if(data_weld_type == 4 && MEMORY[10].off_voltage >= 150)
        {
            MEMORY[10].off_voltage = 150;
        }
        //
        ui->LE_B0_V_11->setText(QString::number(MEMORY[10].voltage,'f',1));
        ui->LE_B0_S_11->setText(QString::number(MEMORY[10].speed,'f',1));
        ui->LE_B0_T_11->setText(QString::number(MEMORY[10].time,'f',1));
        ui->LE_B0_W_11->setText(QString::number(MEMORY[10].weaving_number));
        ui->LE_B0_WT_11->setText(QString::number(MEMORY[10].weaving_time,'f',1));
        ui->LE_B0_L_11->setText(QString::number(MEMORY[10].weaving_amp,'f',1));
        ui->LE_B0_ONA_11->setText(QString::number(MEMORY[10].on_current,'f',1));
        ui->LE_B0_ONV_11->setText(QString::number(MEMORY[10].on_voltage,'f',1));
        ui->LE_B0_ONT_11->setText(QString::number(MEMORY[10].on_time,'f',1));
        ui->LE_B0_OFA_11->setText(QString::number(MEMORY[10].off_current,'f',1));
        ui->LE_B0_OFV_11->setText(QString::number(MEMORY[10].off_voltage,'f',1));
        ui->LE_B0_OFT_11->setText(QString::number(MEMORY[10].off_time,'f',1));
        ui->LE_B0_WU_11->setText(QString::number(MEMORY[10].wire));
        ui->LE_B0_Per_11->setText(QString::number(MEMORY[10].w_persent,'f',1));

    for(int i=0; i<11; i++){
        qDebug()<<"Memory "<<i<<" : "<<MEMORY[i].current<<" / "<<MEMORY[i].voltage<<" / "<<MEMORY[i].speed<<" / "<<MEMORY[i].time<<" / "<<MEMORY[i].weaving_amp<<" / "<<MEMORY[i].weaving_number<<" / "<<MEMORY[i].weaving_time<<" / "<<MEMORY[i].on_current<<" / "<<MEMORY[i].on_voltage<<" / "<<MEMORY[i].on_time<<" / "<<MEMORY[i].off_current<<" / "<<MEMORY[i].off_voltage<<" / "<<MEMORY[i].off_time<<" / "<<MEMORY[i].wire<<" / "<<MEMORY[i].w_persent;
    }
    qDebug()<<"-----------------------";

}

void MainWindow::Setting_Memory_Save(void){
    FILE* fp_set;
    fp_set = fopen(".\\jct_settings\\memory.txt", "w");
    for(int i=0; i<11; i++){
        fprintf(fp_set, "%.2f\t%.2f\t%.2f\t%.2f\t%d\t%.2f\t%.2f\t%.2f\t%.2f\t%.2f\t%.2f\t%.2f\t%.2f\t%d\t%.2f\n"
                , MEMORY[i].current, MEMORY[i].voltage, MEMORY[i].speed, MEMORY[i].time, MEMORY[i].weaving_number, MEMORY[i].weaving_time, MEMORY[i].weaving_amp, MEMORY[i].on_current, MEMORY[i].on_voltage, MEMORY[i].on_time, MEMORY[i].off_current, MEMORY[i].off_voltage, MEMORY[i].off_time, MEMORY[i].wire, MEMORY[i].w_persent);
    }
    fclose(fp_set);
    fflush(fp_set);
}

#define FOLD_END___SETTING_PART   }
// ========================================================================================

void MainWindow::setting_Memory_Save_after()
{
    MEMORY[0].current = ui->LE_D_0_A1->text().toFloat();
    MEMORY[0].voltage = ui->LE_D_0_V1->text().toFloat();
    MEMORY[0].speed = ui->LE_D_0_S1->text().toFloat();
    MEMORY[0].time = ui->MEM_VALUE_3->text().toFloat();
    MEMORY[0].weaving_number = ui->MEM_VALUE_4->text().toInt();
    MEMORY[0].weaving_time = ui->MEM_VALUE_5->text().toFloat();
    MEMORY[0].weaving_amp = ui->MEM_VALUE_6->text().toFloat();
    MEMORY[0].on_current = ui->LE_D_0_ONA1->text().toFloat();
    MEMORY[0].on_voltage = ui->LE_D_0_ONV1->text().toFloat();
    MEMORY[0].on_time = ui->LE_D_0_ONT1->text().toFloat();
    MEMORY[0].off_current = ui->LE_D_0_OFA1->text().toFloat();
    MEMORY[0].off_voltage = ui->LE_D_0_OFV1->text().toFloat();
    MEMORY[0].off_time = ui->LE_D_0_OFT1->text().toFloat();
    MEMORY[0].wire = ui->MEM_VALUE_13->text().toInt();
    MEMORY[0].w_persent = ui->MEM_VALUE_14->text().toFloat();
    //
    //
    MEMORY[1].current = ui->LE_D_0_A2->text().toFloat();
    MEMORY[1].voltage = ui->LE_D_0_V2->text().toFloat();
    MEMORY[1].speed = ui->LE_D_0_S2->text().toFloat();
    MEMORY[1].time = ui->MEM_VALUE_3->text().toFloat();
    MEMORY[1].weaving_number = ui->MEM_VALUE_4->text().toInt();
    MEMORY[1].weaving_time = ui->MEM_VALUE_5->text().toFloat();
    MEMORY[1].weaving_amp = ui->MEM_VALUE_6->text().toFloat();
    MEMORY[1].on_current = ui->LE_D_0_ONA2->text().toFloat();
    MEMORY[1].on_voltage = ui->LE_D_0_ONV2->text().toFloat();
    MEMORY[1].on_time = ui->LE_D_0_ONT2->text().toFloat();
    MEMORY[1].off_current = ui->LE_D_0_OFA2->text().toFloat();
    MEMORY[1].off_voltage = ui->LE_D_0_OFV2->text().toFloat();
    MEMORY[1].off_time = ui->LE_D_0_OFT2->text().toFloat();
    MEMORY[1].wire = ui->MEM_VALUE_13->text().toInt();
    MEMORY[1].w_persent = ui->MEM_VALUE_14->text().toFloat();
    //
    //
    MEMORY[2].current = ui->LE_D_0_A3->text().toFloat();
    MEMORY[2].voltage = ui->LE_D_0_V3->text().toFloat();
    MEMORY[2].speed = ui->LE_D_0_S3->text().toFloat();
    MEMORY[2].time = ui->MEM_VALUE_3->text().toFloat();
    MEMORY[2].weaving_number = ui->MEM_VALUE_4->text().toInt();
    MEMORY[2].weaving_time = ui->MEM_VALUE_5->text().toFloat();
    MEMORY[2].weaving_amp = ui->MEM_VALUE_6->text().toFloat();
    MEMORY[2].on_current = ui->LE_D_0_ONA3->text().toFloat();
    MEMORY[2].on_voltage = ui->LE_D_0_ONV3->text().toFloat();
    MEMORY[2].on_time = ui->LE_D_0_ONT3->text().toFloat();
    MEMORY[2].off_current = ui->LE_D_0_OFA3->text().toFloat();
    MEMORY[2].off_voltage = ui->LE_D_0_OFV3->text().toFloat();
    MEMORY[2].off_time = ui->LE_D_0_OFT3->text().toFloat();
    MEMORY[2].wire = ui->MEM_VALUE_13->text().toInt();
    MEMORY[2].w_persent = ui->MEM_VALUE_14->text().toFloat();
    //
    //
    MEMORY[3].current = ui->LE_D_0_A4->text().toFloat();
    MEMORY[3].voltage = ui->LE_D_0_V4->text().toFloat();
    MEMORY[3].speed = ui->LE_D_0_S4->text().toFloat();
    MEMORY[3].time = ui->MEM_VALUE_3->text().toFloat();
    MEMORY[3].weaving_number = ui->MEM_VALUE_4->text().toInt();
    MEMORY[3].weaving_time = ui->MEM_VALUE_5->text().toFloat();
    MEMORY[3].weaving_amp = ui->MEM_VALUE_6->text().toFloat();
    MEMORY[3].on_current = ui->LE_D_0_ONA4->text().toFloat();
    MEMORY[3].on_voltage = ui->LE_D_0_ONV4->text().toFloat();
    MEMORY[3].on_time = ui->LE_D_0_ONT4->text().toFloat();
    MEMORY[3].off_current = ui->LE_D_0_OFA4->text().toFloat();
    MEMORY[3].off_voltage = ui->LE_D_0_OFV4->text().toFloat();
    MEMORY[3].off_time = ui->LE_D_0_OFT4->text().toFloat();
    MEMORY[3].wire = ui->MEM_VALUE_13->text().toInt();
    MEMORY[3].w_persent = ui->MEM_VALUE_14->text().toFloat();
    //
    //
    MEMORY[4].current = ui->LE_D_0_A5->text().toFloat();
    MEMORY[4].voltage = ui->LE_D_0_V5->text().toFloat();
    MEMORY[4].speed = ui->LE_D_0_S5->text().toFloat();
    MEMORY[4].time = ui->MEM_VALUE_3->text().toFloat();
    MEMORY[4].weaving_number = ui->MEM_VALUE_4->text().toInt();
    MEMORY[4].weaving_time = ui->MEM_VALUE_5->text().toFloat();
    MEMORY[4].weaving_amp = ui->MEM_VALUE_6->text().toFloat();
    MEMORY[4].on_current = ui->LE_D_0_ONA5->text().toFloat();
    MEMORY[4].on_voltage = ui->LE_D_0_ONV5->text().toFloat();
    MEMORY[4].on_time = ui->LE_D_0_ONT5->text().toFloat();
    MEMORY[4].off_current = ui->LE_D_0_OFA5->text().toFloat();
    MEMORY[4].off_voltage = ui->LE_D_0_OFV5->text().toFloat();
    MEMORY[4].off_time = ui->LE_D_0_OFT5->text().toFloat();
    MEMORY[4].wire = ui->MEM_VALUE_13->text().toInt();
    MEMORY[4].w_persent = ui->MEM_VALUE_14->text().toFloat();
    //
    //
    MEMORY[5].current = ui->LE_D_0_A6->text().toFloat();
    MEMORY[5].voltage = ui->LE_D_0_V6->text().toFloat();
    MEMORY[5].speed = ui->LE_D_0_S6->text().toFloat();
    MEMORY[5].time = ui->MEM_VALUE_3->text().toFloat();
    MEMORY[5].weaving_number = ui->MEM_VALUE_4->text().toInt();
    MEMORY[5].weaving_time = ui->MEM_VALUE_5->text().toFloat();
    MEMORY[5].weaving_amp = ui->MEM_VALUE_6->text().toFloat();
    MEMORY[5].on_current = ui->LE_D_0_ONA6->text().toFloat();
    MEMORY[5].on_voltage = ui->LE_D_0_ONV6->text().toFloat();
    MEMORY[5].on_time = ui->LE_D_0_ONT6->text().toFloat();
    MEMORY[5].off_current = ui->LE_D_0_OFA6->text().toFloat();
    MEMORY[5].off_voltage = ui->LE_D_0_OFV6->text().toFloat();
    MEMORY[5].off_time = ui->LE_D_0_OFT6->text().toFloat();
    MEMORY[5].wire = ui->MEM_VALUE_13->text().toInt();
    MEMORY[5].w_persent = ui->MEM_VALUE_14->text().toFloat();
    //
    //
    MEMORY[6].current = ui->LE_D_0_A7->text().toFloat();
    MEMORY[6].voltage = ui->LE_D_0_V7->text().toFloat();
    MEMORY[6].speed = ui->LE_D_0_S7->text().toFloat();
    MEMORY[6].time = ui->MEM_VALUE_3->text().toFloat();
    MEMORY[6].weaving_number = ui->MEM_VALUE_4->text().toInt();
    MEMORY[6].weaving_time = ui->MEM_VALUE_5->text().toFloat();
    MEMORY[6].weaving_amp = ui->MEM_VALUE_6->text().toFloat();
    MEMORY[6].on_current = ui->LE_D_0_ONA7->text().toFloat();
    MEMORY[6].on_voltage = ui->LE_D_0_ONV7->text().toFloat();
    MEMORY[6].on_time = ui->LE_D_0_ONT7->text().toFloat();
    MEMORY[6].off_current = ui->LE_D_0_OFA7->text().toFloat();
    MEMORY[6].off_voltage = ui->LE_D_0_OFV7->text().toFloat();
    MEMORY[6].off_time = ui->LE_D_0_OFT7->text().toFloat();
    MEMORY[6].wire = ui->MEM_VALUE_13->text().toInt();
    MEMORY[6].w_persent = ui->MEM_VALUE_14->text().toFloat();
    //
    //
    MEMORY[7].current = ui->LE_D_0_A8->text().toFloat();
    MEMORY[7].voltage = ui->LE_D_0_V8->text().toFloat();
    MEMORY[7].speed = ui->LE_D_0_S8->text().toFloat();
    MEMORY[7].time = ui->MEM_VALUE_3->text().toFloat();
    MEMORY[7].weaving_number = ui->MEM_VALUE_4->text().toInt();
    MEMORY[7].weaving_time = ui->MEM_VALUE_5->text().toFloat();
    MEMORY[7].weaving_amp = ui->MEM_VALUE_6->text().toFloat();
    MEMORY[7].on_current = ui->LE_D_0_ONA8->text().toFloat();
    MEMORY[7].on_voltage = ui->LE_D_0_ONV8->text().toFloat();
    MEMORY[7].on_time = ui->LE_D_0_ONT8->text().toFloat();
    MEMORY[7].off_current = ui->LE_D_0_OFA8->text().toFloat();
    MEMORY[7].off_voltage = ui->LE_D_0_OFV8->text().toFloat();
    MEMORY[7].off_time = ui->LE_D_0_OFT8->text().toFloat();
    MEMORY[7].wire = ui->MEM_VALUE_13->text().toInt();
    MEMORY[7].w_persent = ui->MEM_VALUE_14->text().toFloat();
    //
    //
    MEMORY[8].current = ui->LE_D_0_A9->text().toFloat();
    MEMORY[8].voltage = ui->LE_D_0_V9->text().toFloat();
    MEMORY[8].speed = ui->LE_D_0_S9->text().toFloat();
    MEMORY[8].time = ui->MEM_VALUE_3->text().toFloat();
    MEMORY[8].weaving_number = ui->MEM_VALUE_4->text().toInt();
    MEMORY[8].weaving_time = ui->MEM_VALUE_5->text().toFloat();
    MEMORY[8].weaving_amp = ui->MEM_VALUE_6->text().toFloat();
    MEMORY[8].on_current = ui->LE_D_0_ONA9->text().toFloat();
    MEMORY[8].on_voltage = ui->LE_D_0_ONV9->text().toFloat();
    MEMORY[8].on_time = ui->LE_D_0_ONT9->text().toFloat();
    MEMORY[8].off_current = ui->LE_D_0_OFA9->text().toFloat();
    MEMORY[8].off_voltage = ui->LE_D_0_OFV9->text().toFloat();
    MEMORY[8].off_time = ui->LE_D_0_OFT9->text().toFloat();
    MEMORY[8].wire = ui->MEM_VALUE_13->text().toInt();
    MEMORY[8].w_persent = ui->MEM_VALUE_14->text().toFloat();
    //
    //
    MEMORY[9].current = ui->LE_D_0_A10->text().toFloat();
    MEMORY[9].voltage = ui->LE_D_0_V10->text().toFloat();
    MEMORY[9].speed = ui->LE_D_0_S10->text().toFloat();
    MEMORY[9].time = ui->MEM_VALUE_3->text().toFloat();
    MEMORY[9].weaving_number = ui->MEM_VALUE_4->text().toInt();
    MEMORY[9].weaving_time = ui->MEM_VALUE_5->text().toFloat();
    MEMORY[9].weaving_amp = ui->MEM_VALUE_6->text().toFloat();
    MEMORY[9].on_current = ui->LE_D_0_ONA10->text().toFloat();
    MEMORY[9].on_voltage = ui->LE_D_0_ONV10->text().toFloat();
    MEMORY[9].on_time = ui->LE_D_0_ONT10->text().toFloat();
    MEMORY[9].off_current = ui->LE_D_0_OFA10->text().toFloat();
    MEMORY[9].off_voltage = ui->LE_D_0_OFV10->text().toFloat();
    MEMORY[9].off_time = ui->LE_D_0_OFT10->text().toFloat();
    MEMORY[9].wire = ui->MEM_VALUE_13->text().toInt();
    MEMORY[9].w_persent = ui->MEM_VALUE_14->text().toFloat();
    //
    MEMORY[10].current = ui->LE_B0_A_11->text().toFloat();
    MEMORY[10].voltage = ui->LE_B0_V_11->text().toFloat();
    MEMORY[10].speed = ui->LE_B0_S_11->text().toFloat();
    MEMORY[10].time = ui->LE_B0_T_11->text().toFloat();
    MEMORY[10].weaving_number = ui->LE_B0_W_11->text().toInt();
    MEMORY[10].weaving_time = ui->LE_B0_WT_11->text().toFloat();
    MEMORY[10].weaving_amp = ui->LE_B0_L_11->text().toFloat();
    MEMORY[10].on_current = ui->LE_B0_ONA_11->text().toFloat();
    MEMORY[10].on_voltage = ui->LE_B0_ONV_11->text().toFloat();
    MEMORY[10].on_time = ui->LE_B0_ONT_11->text().toFloat();
    MEMORY[10].off_current = ui->LE_B0_OFA_11->text().toFloat();
    MEMORY[10].off_voltage = ui->LE_B0_OFV_11->text().toFloat();
    MEMORY[10].off_time = ui->LE_B0_OFT_11->text().toFloat();
    MEMORY[10].wire = ui->LE_B0_WU_11->text().toInt();
    MEMORY[10].w_persent = ui->LE_B0_Per_11->text().toFloat();
    //

    Setting_Memory_Save();
    Setting_Speed_And_IP_Save();
}

void MainWindow::setting_data_condition()   //
{
    if(data_condition>=0 && data_condition<=9)
    {
        ui->MEM_VALUE_0->setText(QString::number(MEMORY[data_condition].current));
        ui->MEM_VALUE_1->setText(QString::number(MEMORY[data_condition].voltage));
        ui->MEM_VALUE_2->setText(QString::number(MEMORY[data_condition].speed));
        ui->MEM_VALUE_7->setText(QString::number(MEMORY[data_condition].on_current));
        ui->MEM_VALUE_8->setText(QString::number(MEMORY[data_condition].on_voltage));
        ui->MEM_VALUE_9->setText(QString::number(MEMORY[data_condition].on_time));
        ui->MEM_VALUE_10->setText(QString::number(MEMORY[data_condition].off_current));
        ui->MEM_VALUE_11->setText(QString::number(MEMORY[data_condition].off_voltage));
        ui->MEM_VALUE_12->setText(QString::number(MEMORY[data_condition].off_time));
    }
      if(data_condition==10)
      {
          ui->MEM_VALUE_0->setText(ui->LE_B0_A_11->text());
          ui->MEM_VALUE_1->setText(ui->LE_B0_V_11->text());
          ui->MEM_VALUE_2->setText(ui->LE_B0_S_11->text());
          ui->MEM_VALUE_7->setText(ui->LE_B0_ONA_11->text());
          ui->MEM_VALUE_8->setText(ui->LE_B0_ONV_11->text());
          ui->MEM_VALUE_9->setText(ui->LE_B0_ONT_11->text());
          ui->MEM_VALUE_10->setText(ui->LE_B0_OFA_11->text());
          ui->MEM_VALUE_11->setText(ui->LE_B0_OFV_11->text());
          ui->MEM_VALUE_12->setText(ui->LE_B0_OFT_11->text());


          MEMORY[10].current = ui->MEM_VALUE_0->text().toFloat();
          MEMORY[10].voltage = ui->MEM_VALUE_1->text().toFloat();
          MEMORY[10].speed = ui->MEM_VALUE_2->text().toFloat();
          MEMORY[10].on_current = ui->MEM_VALUE_7->text().toFloat();
          MEMORY[10].on_voltage = ui->MEM_VALUE_8->text().toFloat();
          MEMORY[10].on_time = ui->MEM_VALUE_9->text().toFloat();
          MEMORY[10].off_current = ui->MEM_VALUE_10->text().toFloat();
          MEMORY[10].off_voltage = ui->MEM_VALUE_11->text().toFloat();
          MEMORY[10].off_time = ui->MEM_VALUE_12->text().toFloat();

      }
      ui->MEM_VALUE_3->setText(ui->LE_B0_T_11->text());
      ui->MEM_VALUE_4->setText(ui->LE_B0_W_11->text());
      ui->MEM_VALUE_5->setText(ui->LE_B0_WT_11->text());
      ui->MEM_VALUE_6->setText(ui->LE_B0_L_11->text());
      ui->MEM_VALUE_13->setText(ui->LE_B0_WU_11->text());
      ui->MEM_VALUE_14->setText(ui->LE_B0_Per_11->text());

      MEMORY[data_condition].time = ui->MEM_VALUE_3->text().toFloat();
      MEMORY[data_condition].weaving_number = ui->MEM_VALUE_4->text().toInt();
      MEMORY[data_condition].weaving_time = ui->MEM_VALUE_5->text().toFloat();
      MEMORY[data_condition].weaving_amp = ui->MEM_VALUE_6->text().toFloat();
      MEMORY[data_condition].wire = ui->MEM_VALUE_13->text().toInt();
      MEMORY[data_condition].w_persent = ui->MEM_VALUE_14->text().toFloat();
}

void MainWindow::resume_Collision(void){
    if(sockConnectionStatusCmd && sockConnectionStatusData){
        sockCmd.write("task resume_b ");
    }else{
        qDebug()<<"resume_Collision"<<endl;
        QMessageBox::warning(this, MSG_JCT_TITLE, MSG_NO_CONNECTION);
    }
}

void MainWindow::REFRESH_clicked()
{
    command_data.clear();
    Update_TW_1();
}
// Trans/Load/Run =========================================================================
void MainWindow::Handler_Trans_Load_Run(void){
    if(TLR_step == 1){
        // 파일 전송 시작
        old_TRANSMIT_FLAG = 0;
        TLR_time_out_count = 0;

        RBFTP_Transfer();

        qDebug()<<"[TLR] step 2"<<endl;
        TLR_step = 2;
    }else if(TLR_step == 2){
        if(old_TRANSMIT_FLAG == 1234){
            qDebug()<<"[TLR] step 3"<<endl;
            if(play_type ==0){
                TLR_step = 3;
            }
            if(play_type ==1){
                if(mode_type ==1){
                TLR_step = 11;
                }
                if(mode_type ==2){
                TLR_step = 12;
                }
                if(mode_type ==3){
                TLR_step = 3;
                }
            }
            if(play_type ==2){
                if(mode_type ==11){
                TLR_step = 21;
                }
                if(mode_type ==12){
                TLR_step = 22;
                }
                if(mode_type ==13){
                TLR_step = 23;
                }
                if(mode_type ==3){
                TLR_step = 3;
                }
            }
            if(play_type ==3){
                if(mode_type ==101){
                    if(file_load_no_2 == 1){
                       TLR_step = 101;
                    }
                    if(file_load_no_2 == 0){
                       TLR_step = 110;
                    }
                }
                if(mode_type ==102){
                    if(file_load_no_3 == 1){
                       TLR_step = 102;
                    }
                    if(file_load_no_3 == 0){
                       TLR_step = 110;
                    }
                }
                if(mode_type ==103){
                    if(file_load_no_4 == 1){
                       TLR_step = 103;
                    }
                    if(file_load_no_4 == 0){
                       TLR_step = 110;
                    }
                }
                if(mode_type ==104){
                    if(file_load_no_5 == 1){
                       TLR_step = 104;
                    }
                    if(file_load_no_5 == 0){
                       TLR_step = 110;
                    }
                }
                if(mode_type ==105){
                    if(file_load_no_6 == 1){
                       TLR_step = 105;
                    }
                    if(file_load_no_6 == 0){
                       TLR_step = 110;
                    }
                }
                if(mode_type ==106){
                    if(file_load_no_7 == 1){
                       TLR_step = 106;
                    }
                    if(file_load_no_7 == 0){
                       TLR_step = 110;
                    }
                }
                if(mode_type ==107){
                    if(file_load_no_8 == 1){
                       TLR_step = 107;
                    }
                    if(file_load_no_8 == 0){
                       TLR_step = 110;
                    }
                }
                if(mode_type ==108){
                    if(file_load_no_9 == 1){
                       TLR_step = 108;
                    }
                    if(file_load_no_9 == 0){
                       TLR_step = 110;
                    }
                }
                if(mode_type ==109){
                    if(file_load_no_10 == 1){
                       TLR_step = 109;
                    }
                    if(file_load_no_10 == 0){
                       TLR_step = 110;
                    }
                }
                if(mode_type ==110){
                    TLR_step = 110;
                }
                if(mode_type ==100){
                    TLR_step = 3;
                }
            }
        }else{
            if(TLR_time_out_count > 25){
                qDebug()<<"[TLR] step 2 Time out ... !!!"<<endl;
                QMessageBox::warning(this, MSG_JCT_TITLE, MSG_TIMEOUT_FILE_TRANSFER);
                TLR_time_out_count = 0;
                TLR_step = 0;
            }
        }
    }else if(TLR_step == 11){
        Load_RH_make();
    }else if(TLR_step == 12){
        Load_Home_make();
    }else if(TLR_step == 21){
        Load_JIG2_make();
    }else if(TLR_step == 22){
        Load_JIG3_make();
    }else if(TLR_step == 23){
        Load_Home_make();
    }else if(TLR_step == 101){
        Load_File_2_make();
    }else if(TLR_step == 102){
        Load_File_3_make();
    }else if(TLR_step == 103){
        Load_File_4_make();
    }else if(TLR_step == 104){
        Load_File_5_make();
    }else if(TLR_step == 105){
        Load_File_6_make();
    }else if(TLR_step == 106){
        Load_File_7_make();
    }else if(TLR_step == 107){
        Load_File_8_make();
    }else if(TLR_step == 108){
        Load_File_9_make();
    }else if(TLR_step == 109){
        Load_File_10_make();
    }else if(TLR_step == 110){
        Load_File_All_make();
    }else if(TLR_step == 3){
        // 작업파일 불러오기 실행
        old_LOAD_FLAG = sys_status.sdata.power_state.FLAG_LOAD;
        TLR_time_out_count = 0;
        if(play_type ==0){
        sockCmd.write("task load my_jct_program");
        qDebug()<<"[TLR] step 4"<<endl;

        TLR_step = 4;
        }
        if(play_type ==1){
        sockCmd.write("task load my_jct_program_HOME");
        qDebug()<<"[TLR] step 4"<<endl;

        TLR_step = 4;
        }
        if(play_type ==2){
        sockCmd.write("task load my_jct_program_HOME");
        qDebug()<<"[TLR] step 4"<<endl;

        TLR_step = 4;
        }
        if(play_type ==3){
        sockCmd.write("task load jct_master");

        qDebug()<<"[TLR] step 4"<<endl;

        TLR_step = 4;
        }
    }else if(TLR_step == 4){

        // 작업파일이 정상적으로 불러왔는지 검사
        int now_load_flag = sys_status.sdata.power_state.FLAG_LOAD;
        if(now_load_flag != old_LOAD_FLAG){
            if(play_type ==0){
                qDebug()<<"[TLR] step 5_Base"<<endl;
                TLR_step = 5;
            }
            if(play_type ==1){
                qDebug()<<"[TLR] step 5_HOME"<<endl;
                TLR_step = 5;
            }
            if(play_type ==2){
                qDebug()<<"[TLR] step 5_HOME"<<endl;
                TLR_step = 5;
            }
            if(play_type ==3){
                qDebug()<<"[TLR] step 5_HOME"<<endl;
                TLR_step = 5;
            }
        }else{
            if(TLR_time_out_count > 25){
                qDebug()<<"[TLR] step 4 Time out ... !!!"<<endl;
                QMessageBox::warning(this, MSG_JCT_TITLE, MSG_TIMEOUT_LOAD);
                TLR_time_out_count = 0;
                TLR_step = 0;
            }
        }
    }else if(TLR_step == 5){
        // 프로그램 재생 실행
        TLR_time_out_count = 0;

        sockCmd.write("task play once ");
        qDebug()<<"[TLR] step 6"<<endl;
        TLR_step = 6;
    }else if(TLR_step == 6){
        // 프로그램이 정상적으로 재생되었는지 검사
        if(sys_status.sdata.task_state != 1){
            qDebug()<<"[TLR] step done ~~ !"<<endl;
            data_start = 1;
            TLR_step = 0;
        }else{
            if(TLR_time_out_count > 25){
                qDebug()<<"[TLR] step 6 Time out ... !!!"<<endl;
                QMessageBox::warning(this, MSG_JCT_TITLE, MSG_TIMEOUT_CHECK_RUN);
                TLR_time_out_count = 0;
                TLR_step = 0;
            }
        }
    }

    TLR_time_out_count++;
}
// ===========================================================
// I/O 신호처리 ===============================================
void MainWindow::Handler_IO(void){
    static int old_digital_in[16] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
    for(int i = 0; i < 16; i++){
        int old_value = old_digital_in[i];
        int now_value = sys_status.sdata.digital_in[i];
        if(setting_is_foot == 1){
            if(i == DIN_PORT_TEACHING_DONE){
                if(old_value == 1 && now_value == 0){
                    if(ui->SW_A->currentIndex() == 2 && ui->SW_B->currentIndex() == 1){
                    on_PB_B_1_Set_clicked();
                    }
                    if(play_type== 0 && ui->SW_A->currentIndex() == 2 && ui->SW_B->currentIndex() == 2){
                    on_PB_B_2_Play_clicked();
                    }
                    if(play_type== 1 && ui->SW_A->currentIndex() == 3 && ui->SW_C->currentIndex() == 3){
                    on_PB_C_3_Play_clicked();
                    }
                    if(play_type== 1 && ui->SW_A->currentIndex() == 3 && ui->SW_C->currentIndex() == 5){
                    on_PB_C_5_Play_clicked();
                    }
                    if(play_type== 1 && ui->SW_A->currentIndex() == 3 && ui->SW_C->currentIndex() == 7){
                    on_PB_C_7_Play_clicked();
                    }
                }
            }

            if(i == DIN_PORT_TEACHING_BACK){
                if(old_value == 1 && now_value == 0){
                    if(ui->SW_A->currentIndex() == 2 && ui->SW_B->currentIndex() == 1){
                   on_PB_B_1_Back_clicked();
                    }
                    if(play_type==0 && ui->SW_A->currentIndex() == 2 && ui->SW_B->currentIndex() == 2){
                    on_PB_B_2_Stop_clicked();
                    }
                    if(play_type== 1 && ui->SW_A->currentIndex()== 3 && ui->SW_C->currentIndex()== 3){
                    on_PB_C_3_Stop_clicked();
                    }
                    if(play_type== 1 && ui->SW_A->currentIndex()== 3 && ui->SW_C->currentIndex()== 5){
                    on_PB_C_5_Stop_clicked();
                    }
                    if(play_type== 1 && ui->SW_A->currentIndex()== 3 && ui->SW_C->currentIndex()== 7){
                    on_PB_C_7_Stop_clicked();
                    }
                }
            }
            if(data_weld_type == 3 && i == 12 && data_axis7 == 1 && data_axis8 == 1){
                if(old_value == 1 && now_value == 0){
                    if(play_type== 0 && ui->SW_A->currentIndex() == 2 && ui->SW_B->currentIndex() == 2){
                    on_PB_B_2_Play_clicked();
                    }
                }
            }if(data_weld_type == 3 && i == 13 && data_axis7 == 1 && data_axis8 == 1){
                if(old_value == 1 && now_value == 0){
                    if(play_type== 0 && ui->SW_A->currentIndex() == 2 && ui->SW_B->currentIndex() == 2){
                    on_PB_B_2_Stop_clicked();
                    }
                }
            }

        }

        if(sys_status.sdata.digital_in[DIN_PORT_EMG]==0)
        {
            // JCT_PLEASE_CHECK_THIS
            if(sys_status.sdata.task_state != 1){
                on_PB_B_2_Stop_clicked();
            }
        }
        if(sys_status.sdata.digital_in[15]==0 && data_weld_type==3 && data_axis7 == 1 && data_axis8 == 1)
        {
            // JCT_PLEASE_CHECK_THIS
            if(sys_status.sdata.task_state != 1){
                on_PB_B_2_Stop_clicked();
            }
        }
        old_digital_in[i] = now_value;
    }
}
// ===========================================================
void MainWindow::RBFTP_Transfer(void)
{

    // JCT_PLEASE_CHECK_THIS
    QString my_file_name;
    if(play_type == 0){
        my_file_name = QApplication::applicationDirPath() + "/play/" + "my_jct_program.wsl";
    }
    if(play_type == 1){
        if(mode_type ==0){
        my_file_name = QApplication::applicationDirPath() + "/play/" + "my_jct_program.wsl";
        }
        if(mode_type ==1){
        my_file_name = QApplication::applicationDirPath() + "/play/" + "my_jct_program_LH.wsl";
        }
        if(mode_type ==2){
        my_file_name = QApplication::applicationDirPath() + "/play/" + "my_jct_program_RH.wsl";
        }
        if(mode_type ==3){
        my_file_name = QApplication::applicationDirPath() + "/play/" + "my_jct_program_HOME.wsl";
        }
    }
    if(play_type == 2){
        if(mode_type ==0){
        my_file_name = QApplication::applicationDirPath() + "/play/" + "my_jct_program.wsl";
        }
        if(mode_type ==11){
        my_file_name = QApplication::applicationDirPath() + "/play/" + "my_jct_program_JIG1.wsl";
        }
        if(mode_type ==12){
        my_file_name = QApplication::applicationDirPath() + "/play/" + "my_jct_program_JIG2.wsl";
        }
        if(mode_type ==13){
        my_file_name = QApplication::applicationDirPath() + "/play/" + "my_jct_program_JIG3.wsl";
        }
        if(mode_type ==3){
        my_file_name = QApplication::applicationDirPath() + "/play/" + "my_jct_program_HOME.wsl";
        }
    }
    if(play_type ==3){
        if(mode_type ==100){
        my_file_name = QApplication::applicationDirPath() + "/play/" + "jct_master.wsl";
        }
        if(mode_type ==101){
        my_file_name = QApplication::applicationDirPath() + "/play/" + "jct_file1.wsl";
        }
        if(mode_type ==102){
        my_file_name = QApplication::applicationDirPath() + "/play/" + "jct_file2.wsl";
        }
        if(mode_type ==103){
        my_file_name = QApplication::applicationDirPath() + "/play/" + "jct_file3.wsl";
        }
        if(mode_type ==104){
        my_file_name = QApplication::applicationDirPath() + "/play/" + "jct_file4.wsl";
        }
        if(mode_type ==105){
        my_file_name = QApplication::applicationDirPath() + "/play/" + "jct_file5.wsl";
        }
        if(mode_type ==106){
        my_file_name = QApplication::applicationDirPath() + "/play/" + "jct_file6.wsl";
        }
        if(mode_type ==107){
        my_file_name = QApplication::applicationDirPath() + "/play/" + "jct_file7.wsl";
        }
        if(mode_type ==108){
        my_file_name = QApplication::applicationDirPath() + "/play/" + "jct_file8.wsl";
        }
        if(mode_type ==109){
        my_file_name = QApplication::applicationDirPath() + "/play/" + "jct_file9.wsl";
        }
        if(mode_type ==110){
        my_file_name = QApplication::applicationDirPath() + "/play/" + "jct_file10.wsl";
        }

    }

    QFileInfo fileInfo(my_file_name);

    if(!fileInfo.exists())
    {
        QMessageBox::warning(this,"JCT WelSystem","Uploadfile is not exist.");
        return;
    }

    std::cout<<":::WelSystem::: FTP UpLoad Start"<<std::endl;

    QString robot_ip_msg;
    robot_ip_msg.sprintf("%d.%d.%d.%d", setting_rb_ip_address[0], setting_rb_ip_address[1], setting_rb_ip_address[2], setting_rb_ip_address[3]);

    QNetworkAccessManager *accessManager=new QNetworkAccessManager(this);
    accessManager->setNetworkAccessible(QNetworkAccessManager::Accessible);
    QUrl url;
    url.setScheme("ftp");
    url.setHost(robot_ip_msg);
    if(play_type == 0){
        url.setPath("Desktop/cobot/build/Task/work/my_jct_program.wsl");
    }
    if(play_type == 1){
        if(mode_type == 0){
        url.setPath("Desktop/cobot/build/Task/work/my_jct_program.wsl");
        qDebug()<<"my_jct_program.wsl 보냄"<<endl;
        }
        if(mode_type == 1){
        url.setPath("Desktop/cobot/build/Task/work/my_jct_program_LH.wsl");
        qDebug()<<"my_jct_program_LH.wsl 보냄"<<endl;
        }
        if(mode_type == 2){
        url.setPath("Desktop/cobot/build/Task/work/my_jct_program_RH.wsl");
        qDebug()<<"my_jct_program_RH.wsl 보냄"<<endl;
        }
        if(mode_type == 3){
        url.setPath("Desktop/cobot/build/Task/work/my_jct_program_HOME.wsl");
        qDebug()<<"my_jct_program_HOME.wsl 보냄"<<endl;
        }
    }
    if(play_type == 2){
        if(mode_type == 0){
        url.setPath("Desktop/cobot/build/Task/work/my_jct_program.wsl");
        qDebug()<<"my_jct_program.wsl 보냄"<<endl;
        }
        if(mode_type == 11){
        url.setPath("Desktop/cobot/build/Task/work/my_jct_program_JIG1.wsl");
        qDebug()<<"my_jct_program_JIG1.wsl 보냄"<<endl;
        }
        if(mode_type == 12){
        url.setPath("Desktop/cobot/build/Task/work/my_jct_program_JIG2.wsl");
        qDebug()<<"my_jct_program_JIG2.wsl 보냄"<<endl;
        }
        if(mode_type == 13){
        url.setPath("Desktop/cobot/build/Task/work/my_jct_program_JIG3.wsl");
        qDebug()<<"my_jct_program_JIG3.wsl 보냄"<<endl;
        }
        if(mode_type == 3){
        url.setPath("Desktop/cobot/build/Task/work/my_jct_program_HOME.wsl");
        qDebug()<<"my_jct_program_HOME.wsl 보냄"<<endl;
        }
    }
    if(play_type == 3){
        if(mode_type == 100){
        url.setPath("Desktop/cobot/build/Task/work/jct_master.wsl");
        qDebug()<<"jct_master.wsl 보냄"<<endl;
        }
        if(mode_type == 101){
        url.setPath("Desktop/cobot/build/Task/work/jct_file1.wsl");
        qDebug()<<"jct_file1.wsl 보냄"<<endl;
        }
        if(mode_type == 102){
        url.setPath("Desktop/cobot/build/Task/work/jct_file2.wsl");
        qDebug()<<"jct_file2.wsl 보냄"<<endl;
        }
        if(mode_type == 103){
        url.setPath("Desktop/cobot/build/Task/work/jct_file3.wsl");
        qDebug()<<"jct_file3.wsl 보냄"<<endl;
        }
        if(mode_type == 104){
        url.setPath("Desktop/cobot/build/Task/work/jct_file4.wsl");
        qDebug()<<"jct_file4.wsl 보냄"<<endl;
        }
        if(mode_type == 105){
        url.setPath("Desktop/cobot/build/Task/work/jct_file5.wsl");
        qDebug()<<"jct_file5.wsl 보냄"<<endl;
        }
        if(mode_type == 106){
        url.setPath("Desktop/cobot/build/Task/work/jct_file6.wsl");
        qDebug()<<"jct_file6.wsl 보냄"<<endl;
        }
        if(mode_type == 107){
        url.setPath("Desktop/cobot/build/Task/work/jct_file7.wsl");
        qDebug()<<"jct_file7.wsl 보냄"<<endl;
        }
        if(mode_type == 108){
        url.setPath("Desktop/cobot/build/Task/work/jct_file8.wsl");
        qDebug()<<"jct_file8.wsl 보냄"<<endl;
        }
        if(mode_type == 109){
        url.setPath("Desktop/cobot/build/Task/work/jct_file9.wsl");
        qDebug()<<"jct_file9.wsl 보냄"<<endl;
        }
        if(mode_type == 110){
        url.setPath("Desktop/cobot/build/Task/work/jct_file10.wsl");
        qDebug()<<"jct_file10.wsl 보냄"<<endl;
        }
    }

    url.setPort(21);
    url.setUserName("root");
    //비밀번호
    //url.setPassword("rainbow");// JCT_PLEASE_CHECK_THIS 구형 비번
    url.setPassword("rainbow@2011");// JCT_PLEASE_CHECK_THIS 신형 비번

    QByteArray byte_file;
    QNetworkRequest request(url);
    // upload section
    file=new QFile(my_file_name);
    file->open(QIODevice::ReadOnly);
    byte_file=file->readAll();
    reply = accessManager->put(request, byte_file);
    // upload section

    connect(accessManager, SIGNAL(finished(QNetworkReply*)), SLOT(RBFTP_replyFinished(QNetworkReply*)));
    connect(reply, SIGNAL(error(QNetworkReply::NetworkError)),SLOT(RBFTP_loadError(QNetworkReply::NetworkError)));
}

void MainWindow::RBFTP_replyFinished(QNetworkReply*)    //Delete pointer, update and close file
{
    if(reply->error() == QNetworkReply::NoError)
    {
        std::cout<<":::WelSystem::: FTP UpLoad Finish"<<std::endl;
        old_TRANSMIT_FLAG = 1234;
    }
    else
    {
        qDebug()<<reply->errorString();
    }
    reply->deleteLater();
    file->flush();
    file->close();
    file->deleteLater();
}

void MainWindow::RBFTP_loadError(QNetworkReply::NetworkError)    //Error output during transmission
{
    qDebug()<<reply->errorString();
    qDebug()<<"Error: "<<reply->error();
}
// Table 관리 ==============================================================================
#define FOLD_START___TABLE_PART  {
void MainWindow::SetTableFormat()
{
    for(int i=0; i<ui->TW_1->columnCount(); i++){
        ui->TW_1->setColumnWidth(i, 150);
    }
    ui->TW_1->setSelectionBehavior(QAbstractItemView::SelectRows);
    ui->TW_1->setSelectionMode(QAbstractItemView::SingleSelection);

    for(int i=0; i<ui->TW_10->columnCount(); i++){
        ui->TW_10->setColumnWidth(i, 150);
    }
    ui->TW_10->setSelectionBehavior(QAbstractItemView::SelectRows);
    ui->TW_10->setSelectionMode(QAbstractItemView::SingleSelection);
}
void MainWindow::Update_TW_1()
{
    int table_num = ui->TW_1->rowCount();
    int content_num = command_data.size();
    int func_num = content_num;

    if(table_num > func_num){
        for(int i=0; i<table_num-func_num; i++){
            ui->TW_1->removeRow(ui->TW_1->rowCount()-1);
        }
    }else if(func_num > table_num){
        for(int i=0; i<func_num - table_num; i++){
            ui->TW_1->insertRow(ui->TW_1->rowCount());
        }
    }

    for(int i=0; i<content_num; i++){
        ST_DATA temp_line = command_data.at(i);
        QTableWidgetItem *item_func;
        QTableWidgetItem *item_current;
        QTableWidgetItem *item_voltage;
        QTableWidgetItem *item_speed;
        QTableWidgetItem *item_time;
        QTableWidgetItem *item_weaving_num;
        QTableWidgetItem *item_weaving_time;
        QTableWidgetItem *item_weaving_amp;
        QTableWidgetItem *item_on_current;
        QTableWidgetItem *item_on_voltage;
        QTableWidgetItem *item_on_time;
        QTableWidgetItem *item_off_current;
        QTableWidgetItem *item_off_voltage;
        QTableWidgetItem *item_off_time;
        QTableWidgetItem *item_wire;
        QTableWidgetItem *item_w_persent;
        QTableWidgetItem *item_tcp_0;
        QTableWidgetItem *item_tcp_1;
        QTableWidgetItem *item_tcp_2;
        QTableWidgetItem *item_tcp_3;
        QTableWidgetItem *item_tcp_4;
        QTableWidgetItem *item_tcp_5;
        QTableWidgetItem *item_a_axis_0;
        QTableWidgetItem *item_a_axis_1;
        QTableWidgetItem *item_a_axis_2;
        QTableWidgetItem *item_xx;
        QTableWidgetItem *item_yy;
        QTableWidgetItem *item_zz;

        switch(temp_line.command_option){
        case WEL_CMD_MOVE_J:
            item_func = new QTableWidgetItem("자유이동");
            break;
        case WEL_CMD_MOVE_L:
            item_func = new QTableWidgetItem("직선이동");
            break;
        case WEL_CMD_WAIT_TIME:
            item_func = new QTableWidgetItem("대기(시간)");
            break;
        case WEL_CMD_WAIT_DIN:
            item_func = new QTableWidgetItem("대기(신호)");
            break;
        case WEL_CMD_MOVE_PRO_L:
            item_func = new QTableWidgetItem("직선용접");
            break;
        case WEL_CMD_MOVE_PRO_C:
            item_func = new QTableWidgetItem("곡선용접");
            break;
        case WEL_CMD_MOVE_PRO_C_CONVERT:
            item_func = new QTableWidgetItem("전환곡선용접");
            break;
        case WEL_CMD_GAJUB:
            item_func = new QTableWidgetItem("가접용접");
            break;
        case WEL_CMD_WEAVING_L:
            item_func = new QTableWidgetItem("위빙직선용접");
            break;
        case WEL_CMD_ONEPOINT_WELD:
            item_func = new QTableWidgetItem("부가축용접");
            break;
        default:
            qDebug() <<"모르는 형태 등장!!: "<< temp_line.command_option;
            break;
        }
        item_current = new QTableWidgetItem(QString().sprintf("%.1f", temp_line.current));
        item_voltage = new QTableWidgetItem(QString().sprintf("%.1f", temp_line.voltage));
        item_speed = new QTableWidgetItem(QString().sprintf("%.1f", temp_line.vel));
        item_time = new QTableWidgetItem(QString().sprintf("%.1f", temp_line.wait_time));
        item_weaving_num = new QTableWidgetItem(QString().sprintf("%.1f", temp_line.weaving_para[0]));
        item_weaving_time = new QTableWidgetItem(QString().sprintf("%.1f", temp_line.weaving_para[1]));
        item_weaving_amp = new QTableWidgetItem(QString().sprintf("%.1f", temp_line.weaving_para[2]));
        item_on_current = new QTableWidgetItem(QString().sprintf("%.1f", temp_line.arc_on_para[0]));
        item_on_voltage = new QTableWidgetItem(QString().sprintf("%.1f", temp_line.arc_on_para[1]));
        item_on_time = new QTableWidgetItem(QString().sprintf("%.1f", temp_line.arc_on_para[2]));
        item_off_current = new QTableWidgetItem(QString().sprintf("%.1f", temp_line.arc_off_para[0]));
        item_off_voltage = new QTableWidgetItem(QString().sprintf("%.1f", temp_line.arc_off_para[1]));
        item_off_time = new QTableWidgetItem(QString().sprintf("%.1f", temp_line.arc_off_para[2]));
        item_wire = new QTableWidgetItem(QString().sprintf("%.1f", temp_line.wire_para[0]));
        item_w_persent = new QTableWidgetItem(QString().sprintf("%.1f",temp_line.w_persent));
        item_tcp_0 = new QTableWidgetItem(QString().sprintf("%.1f", temp_line.tcp[0]));
        item_tcp_1 = new QTableWidgetItem(QString().sprintf("%.1f", temp_line.tcp[1]));
        item_tcp_2 = new QTableWidgetItem(QString().sprintf("%.1f", temp_line.tcp[2]));
        item_tcp_3 = new QTableWidgetItem(QString().sprintf("%.1f", temp_line.tcp[3]));
        item_tcp_4 = new QTableWidgetItem(QString().sprintf("%.1f", temp_line.tcp[4]));
        item_tcp_5 = new QTableWidgetItem(QString().sprintf("%.1f", temp_line.tcp[5]));
        item_a_axis_0 = new QTableWidgetItem(QString().sprintf("%.1f", temp_line.a_axis_para[0]));
        item_a_axis_1 = new QTableWidgetItem(QString().sprintf("%.1f", temp_line.a_axis_para[1]));
        item_a_axis_2 = new QTableWidgetItem(QString().sprintf("%.1f", temp_line.a_axis_para[2]));
        item_xx = new QTableWidgetItem(QString().sprintf("%.1f", temp_line.xx));
        item_yy = new QTableWidgetItem(QString().sprintf("%.1f", temp_line.yy));
        item_zz = new QTableWidgetItem(QString().sprintf("%.1f", temp_line.zz));

        ui->TW_1->setItem(i,0,item_func);
        ui->TW_1->item(i,0)->setTextAlignment(Qt::AlignCenter);
        ui->TW_1->setItem(i,1,item_current);
        ui->TW_1->item(i,1)->setTextAlignment(Qt::AlignCenter);
        ui->TW_1->setItem(i,2,item_voltage);
        ui->TW_1->item(i,2)->setTextAlignment(Qt::AlignCenter);
        ui->TW_1->setItem(i,3,item_speed);
        ui->TW_1->item(i,3)->setTextAlignment(Qt::AlignCenter);
        ui->TW_1->setItem(i,4,item_time);
        ui->TW_1->item(i,4)->setTextAlignment(Qt::AlignCenter);
        ui->TW_1->setItem(i,5,item_weaving_num);
        ui->TW_1->item(i,5)->setTextAlignment(Qt::AlignCenter);
        ui->TW_1->setItem(i,6,item_weaving_time);
        ui->TW_1->item(i,6)->setTextAlignment(Qt::AlignCenter);
        ui->TW_1->setItem(i,7,item_weaving_amp);
        ui->TW_1->item(i,7)->setTextAlignment(Qt::AlignCenter);
        ui->TW_1->setItem(i,8,item_on_current);
        ui->TW_1->item(i,8)->setTextAlignment(Qt::AlignCenter);
        ui->TW_1->setItem(i,9,item_on_voltage);
        ui->TW_1->item(i,9)->setTextAlignment(Qt::AlignCenter);
        ui->TW_1->setItem(i,10,item_on_time);
        ui->TW_1->item(i,10)->setTextAlignment(Qt::AlignCenter);
        ui->TW_1->setItem(i,11,item_off_current);
        ui->TW_1->item(i,11)->setTextAlignment(Qt::AlignCenter);
        ui->TW_1->setItem(i,12,item_off_voltage);
        ui->TW_1->item(i,12)->setTextAlignment(Qt::AlignCenter);
        ui->TW_1->setItem(i,13,item_off_time);
        ui->TW_1->item(i,13)->setTextAlignment(Qt::AlignCenter);
        ui->TW_1->setItem(i,14,item_wire);
        ui->TW_1->item(i,14)->setTextAlignment(Qt::AlignCenter);
        ui->TW_1->setItem(i,15,item_w_persent);
        ui->TW_1->item(i,15)->setTextAlignment(Qt::AlignCenter);
        ui->TW_1->setItem(i,16,item_tcp_0);
        ui->TW_1->item(i,16)->setTextAlignment(Qt::AlignCenter);
        ui->TW_1->setItem(i,17,item_tcp_1);
        ui->TW_1->item(i,17)->setTextAlignment(Qt::AlignCenter);
        ui->TW_1->setItem(i,18,item_tcp_2);
        ui->TW_1->item(i,18)->setTextAlignment(Qt::AlignCenter);
        ui->TW_1->setItem(i,19,item_tcp_3);
        ui->TW_1->item(i,19)->setTextAlignment(Qt::AlignCenter);
        ui->TW_1->setItem(i,20,item_tcp_4);
        ui->TW_1->item(i,20)->setTextAlignment(Qt::AlignCenter);
        ui->TW_1->setItem(i,21,item_tcp_5);
        ui->TW_1->item(i,21)->setTextAlignment(Qt::AlignCenter);
        ui->TW_1->setItem(i,22,item_a_axis_0);
        ui->TW_1->item(i,22)->setTextAlignment(Qt::AlignCenter);
        ui->TW_1->setItem(i,23,item_a_axis_1);
        ui->TW_1->item(i,23)->setTextAlignment(Qt::AlignCenter);
        ui->TW_1->setItem(i,24,item_a_axis_2);
        ui->TW_1->item(i,24)->setTextAlignment(Qt::AlignCenter);
        ui->TW_1->setItem(i,25,item_xx);
        ui->TW_1->item(i,25)->setTextAlignment(Qt::AlignCenter);
        ui->TW_1->setItem(i,26,item_yy);
        ui->TW_1->item(i,26)->setTextAlignment(Qt::AlignCenter);
        ui->TW_1->setItem(i,27,item_zz);
        ui->TW_1->item(i,27)->setTextAlignment(Qt::AlignCenter);
    }
    for(int i=0;i<command_data.size();i++){
        qDebug()<<command_data[i].command_option<<","<<command_data[i].current<<","<<command_data[i].voltage<<","<<command_data[i].vel<<","<<command_data[i].wait_time<<","<<command_data[i].weaving_para[0]<<","<<command_data[i].weaving_para[1]<<","<<command_data[i].weaving_para[2]<<","<<command_data[i].arc_on_para[0]<<","<<command_data[i].arc_on_para[1]<<","<<command_data[i].arc_on_para[2]<<","<<command_data[i].arc_off_para[0]<<","<<command_data[i].arc_off_para[1]<<","<<command_data[i].arc_off_para[2]<<","<<command_data[i].wire_para[0]<<","<<command_data[i].w_persent<<","<<command_data[i].joint[0]<<","<<command_data[i].joint[1]<<","<<command_data[i].joint[2]<<","<<command_data[i].joint[3]<<","<<command_data[i].joint[4]<<","<<command_data[i].joint[5]<<","<<command_data[i].tcp[0]<<","<<command_data[i].tcp[1]<<","<<command_data[i].tcp[2]<<","<<command_data[i].tcp[3]<<","<<command_data[i].tcp[4]<<","<<command_data[i].tcp[5]<<endl;
    }

    qDebug()<<"TW_1_cell : "<<TW_1_cell<<endl;

    if(TW_1_cell == 0)
    {
        ui->TW_1->scrollToBottom();
    }

    TW_1_cell = 0;


}

void MainWindow::Update_TW_1_command_data()
{
    //	TW_1
    //	0.행동
    //	1.전류(A)
    //	2.전압(V)
    //	3.속도(mm/s)
    //	4.시간(sec)
    //	5.위빙 No.
    //	6.위빙시간(sec)
    //	7.진폭(mm)
    //	8.ON시 전류(A)
    //	9.ON시 전압(V)
    //	10.ON시 시간(sec)
    //	11.OFF시 전류(A)
    //	12.OFF시 전압(V)
    //	13.OFF시 시간(sec)
    //	14.Wire
    //	15.속도(%)
    //	16.Axis 0
    //	17.Axis 1
    //	18.Axis 2
    //	19.Axis 3
    //	20.Axis 4
    //	21.Axis 5
    //	22.A Axis0
    //	23.A Axis1
    //	24.A Axis2
    //	25.X시프트
    //	26.Y시프트
    //	27.Z시프트
    // --------------------------------------------
    // TW_1 기반으로 command data 추가하기
    // --------------------------------------------
    ST_DATA temp;
    for(int row=0; row<ui->TW_1->rowCount(); row++){
        for(int column=0; column<ui->TW_1->columnCount(); column++)
        {
            if(column == 0){
                temp.command_option = WEL_CMD_NONE;
                temp.sub_option = 0;
                if(ui->TW_1->item(row, 0)->text()=="가접용접"){ // 가접용접
                    temp.command_option = WEL_CMD_GAJUB;
                }if(ui->TW_1->item(row, 0)->text()=="직선용접"){ // 직선용접
                    temp.command_option = WEL_CMD_MOVE_PRO_L;
                }if(ui->TW_1->item(row, 0)->text()=="곡선용접"){ // 곡선용접
                    temp.command_option = WEL_CMD_MOVE_PRO_C;
                }if(ui->TW_1->item(row, 0)->text()=="전환곡선용접"){ // 전환곡선용접
                    temp.command_option = WEL_CMD_MOVE_PRO_C_CONVERT;
                }if(ui->TW_1->item(row, 0)->text()=="위빙직선용접"){ // 위빙직선용접
                    temp.command_option = WEL_CMD_WEAVING_L;
                }if(ui->TW_1->item(row, 0)->text()=="대기(신호)"){ // 대기
                    temp.command_option = WEL_CMD_WAIT_DIN;
                }if(ui->TW_1->item(row, 0)->text()=="자유이동"){ // 자유이동
                    temp.command_option = WEL_CMD_MOVE_J;
                }if(ui->TW_1->item(row, 0)->text()=="직선이동"){ // 직선이동
                    temp.command_option = WEL_CMD_MOVE_L;
                }if(ui->TW_1->item(row, 0)->text()=="부가축용접"){ // 부가축용접
                    temp.command_option = WEL_CMD_ONEPOINT_WELD;
                }if(ui->TW_1->item(row, 0)->text()=="대기(시간)"){ // 대기
                    temp.command_option = WEL_CMD_WAIT_TIME;
                }

            }
            if(column == 1){
                temp.current = ui->TW_1->item(row, 1)->text().toFloat();
            }
            if(column == 2){
                temp.voltage = ui->TW_1->item(row, 2)->text().toFloat();
            }
            if(column == 3){
                temp.vel = ui->TW_1->item(row, 3)->text().toFloat();
            }
            if(column == 4){
                temp.wait_time = ui->TW_1->item(row, 4)->text().toFloat();
            }
            if(column == 5){
                temp.weaving_para[0] = ui->TW_1->item(row, 5)->text().toFloat();
            }
            if(column == 6){
                temp.weaving_para[1] = ui->TW_1->item(row, 6)->text().toFloat();
            }
            if(column == 7){
                temp.weaving_para[2] = ui->TW_1->item(row, 7)->text().toFloat();
            }
            if(column == 8){
                temp.arc_on_para[0] = ui->TW_1->item(row, 8)->text().toFloat();
            }
            if(column == 9){
                temp.arc_on_para[1] = ui->TW_1->item(row, 9)->text().toFloat();
            }
            if(column == 10){
                temp.arc_on_para[2] = ui->TW_1->item(row, 10)->text().toFloat();
            }
            if(column == 11){
                temp.arc_off_para[0] = ui->TW_1->item(row, 11)->text().toFloat();
            }
            if(column == 12){
                temp.arc_off_para[1] = ui->TW_1->item(row, 12)->text().toFloat();
            }
            if(column == 13){
                temp.arc_off_para[2] = ui->TW_1->item(row, 13)->text().toFloat();
            }
            if(column == 14){
                temp.wire_para[0] = ui->TW_1->item(row, 14)->text().toFloat();
            }
            if(column == 15){
                temp.w_persent = ui->TW_1->item(row, 15)->text().toFloat();
            }
            if(column == 16){
                temp.tcp[0] = ui->TW_1->item(row, 16)->text().toFloat();
            }
            if(column == 17){
                temp.tcp[1] = ui->TW_1->item(row, 17)->text().toFloat();
            }
            if(column == 18){
                temp.tcp[2] = ui->TW_1->item(row, 18)->text().toFloat();
            }
            if(column == 19){
                temp.tcp[3] = ui->TW_1->item(row, 19)->text().toFloat();
            }
            if(column == 20){
                temp.tcp[4] = ui->TW_1->item(row, 20)->text().toFloat();
            }
            if(column == 21){
                temp.tcp[5] = ui->TW_1->item(row, 21)->text().toFloat();
            }
            if(column == 22){
                temp.a_axis_para[0] = ui->TW_1->item(row, 22)->text().toFloat();
            }
            if(column == 23){
                temp.a_axis_para[1] = ui->TW_1->item(row, 23)->text().toFloat();
            }
            if(column == 24){
                temp.a_axis_para[2] = ui->TW_1->item(row, 24)->text().toFloat();
            }
            if(column == 25){
                temp.xx = ui->TW_1->item(row, 25)->text().toFloat();
            }
            if(column == 26){
                temp.yy = ui->TW_1->item(row, 26)->text().toFloat();
            }
            if(column == 27){
                temp.zz = ui->TW_1->item(row, 27)->text().toFloat();
            }
        }
        for (int i=0; i<6; i++){
            temp.joint[i] = 99999;
        }
        command_data.push_back(temp);
    }
    for(int i=0;i<command_data.size();i++){
        //qDebug()<<"command_data : "<<command_data[i].command_option<<","<<command_data[i].current<<","<<command_data[i].voltage<<","<<command_data[i].vel<<","<<command_data[i].wait_time<<","<<command_data[i].weaving_para[0]<<","<<command_data[i].weaving_para[1]<<","<<command_data[i].weaving_para[2]<<","<<command_data[i].arc_on_para[0]<<","<<command_data[i].arc_on_para[1]<<","<<command_data[i].arc_on_para[2]<<","<<command_data[i].arc_off_para[0]<<","<<command_data[i].arc_off_para[1]<<","<<command_data[i].arc_off_para[2]<<","<<command_data[i].wire_para[0]<<","<<command_data[i].w_persent<<","<<command_data[i].joint[0]<<","<<command_data[i].joint[1]<<","<<command_data[i].joint[2]<<","<<command_data[i].joint[3]<<","<<command_data[i].joint[4]<<","<<command_data[i].joint[5]<<","<<command_data[i].tcp[0]<<","<<command_data[i].tcp[1]<<","<<command_data[i].tcp[2]<<","<<command_data[i].tcp[3]<<","<<command_data[i].tcp[4]<<","<<command_data[i].tcp[5]<<endl;
    }
}
void MainWindow::Update_TW_10(){
    //	TW_10
    //	0.행동
    //	1.설정 여부
    //	2.Axis 0
    //	3.Axis 1
    //	4.Axis 2
    //	5.Axis 3
    //	6.Axis 4
    //	7.Axis 5
    //	8.A Axis0
    //	9.A Axis1
    //	10.A Axis2
    //	11.속도(%)
    //	12.X시프트
    //	13.Y시프트
    //	14.Z시프트
    //	15.전류(A)
    //	16.전압(V)
    //	17.속도(mm/s)
    //	18.시간(sec)
    //	19.위빙 No.
    //	20.위빙시간(sec)
    //	21.진폭(mm)
    //	22.ON시 전류(A)
    //	23.ON시 전압(V)
    //	24.ON시 시간(sec)
    //	25.OFF시 전류(A)
    //	26.OFF시 전압(V)
    //	27.OFF시 시간(sec)
    //	28.Wire

    int table_num = ui->TW_10->rowCount();
    int content_num = welding_data.size();

    if(table_num > content_num){
        for(int i=0; i<table_num-content_num; i++){
            ui->TW_10->removeRow(ui->TW_10->rowCount()-1);
        }
    }else if(content_num > table_num){
        for(int i=0; i<content_num - table_num; i++){
            ui->TW_10->insertRow(ui->TW_10->rowCount());
        }
    }

    int is_teaching = 0;

    for(int i=0; i<content_num; i++){
        QTableWidgetItem *item_func;
        QTableWidgetItem *item_is_set;
        QTableWidgetItem *item_axis_0;
        QTableWidgetItem *item_axis_1;
        QTableWidgetItem *item_axis_2;
        QTableWidgetItem *item_axis_3;
        QTableWidgetItem *item_axis_4;
        QTableWidgetItem *item_axis_5;
        QTableWidgetItem *item_a_axis_0;
        QTableWidgetItem *item_a_axis_1;
        QTableWidgetItem *item_a_axis_2;
        QTableWidgetItem *item_persent;
        QTableWidgetItem *item_xx;
        QTableWidgetItem *item_yy;
        QTableWidgetItem *item_zz;
        QTableWidgetItem *item_current;
        QTableWidgetItem *item_voltage;
        QTableWidgetItem *item_speed;
        QTableWidgetItem *item_time;
        QTableWidgetItem *item_weaving_num;
        QTableWidgetItem *item_weaving_time;
        QTableWidgetItem *item_weaving_amp;
        QTableWidgetItem *item_on_current;
        QTableWidgetItem *item_on_voltage;
        QTableWidgetItem *item_on_time;
        QTableWidgetItem *item_off_current;
        QTableWidgetItem *item_off_voltage;
        QTableWidgetItem *item_off_time;
        QTableWidgetItem *item_wire;

        switch(welding_data[i].command_option){
        case WEL_CMD_MOVE_J:
            item_func = new QTableWidgetItem("자유이동");
            break;
        case WEL_CMD_MOVE_L:
            if(welding_data[i].sub_option == WEL_CMD_WEAVING_L){
                item_func = new QTableWidgetItem("접근 위빙용접");
            }else if(welding_data[i].sub_option == WEL_CMD_MOVE_PRO_C_CONVERT){
                item_func = new QTableWidgetItem("접근 전환곡선");
            }else if(welding_data[i].sub_option == WEL_CMD_MOVE_PRO_C){
                item_func = new QTableWidgetItem("접근 곡선용접");
            }else if(welding_data[i].sub_option == WEL_CMD_MOVE_PRO_L){
                item_func = new QTableWidgetItem("접근 직선용접");
            }else{
                item_func = new QTableWidgetItem("직선이동");
            }
            break;
        case WEL_CMD_WAIT_TIME:
            item_func = new QTableWidgetItem("대기(시간)");
            break;
        case WEL_CMD_WAIT_DIN:
            item_func = new QTableWidgetItem("대기(신호)");
            break;
        case WEL_CMD_MOVE_PRO_L:
            item_func = new QTableWidgetItem("직선용접");
            break;
        case WEL_CMD_MOVE_PRO_C:
            item_func = new QTableWidgetItem("곡선용접");
            break;
        case WEL_CMD_INIT_J:
            item_func = new QTableWidgetItem("작업시작위치");
            break;
        case WEL_CMD_INIT_L:
            item_func = new QTableWidgetItem("작업진입전위치");
            break;
        case WEL_CMD_FINAL_L:
            item_func = new QTableWidgetItem("작업후회피위치");
            break;
        case WEL_CMD_FINAL_J:
            item_func = new QTableWidgetItem("작업종료위치");
            break;
        case WEL_CMD_GAJUB:
            item_func = new QTableWidgetItem("가접용접");
            break;
        case WEL_CMD_WEAVING_L_REF_1:
            item_func = new QTableWidgetItem("위빙기준 1");
            break;
        case WEL_CMD_WEAVING_L_REF_2:
            item_func = new QTableWidgetItem("위빙기준 2");
            break;
        case WEL_CMD_WEAVING_L:
            item_func = new QTableWidgetItem("위빙도착지점");
            break;
        case WEL_CMD_ONEPOINT_WELD:
            item_func = new QTableWidgetItem("부가축용접");
            break;
        }
        if(welding_data[i].lv == 0){
            if(is_teaching == 0){
                item_is_set = new QTableWidgetItem("교시중");
                //
                //
                //
                if(welding_data[i].command_option == WEL_CMD_INIT_J ){
                    ui->LB_B_1->setText("작업 시작위치를 교시해주세요.");
                        if(data_sound == 1)
                        {
                            mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "작업 시작위치를 교시해주세요."+".MP3"));
                            mMediaPlayer->play();
                        }
                }
                if(welding_data[i].command_option == WEL_CMD_INIT_L){
                    ui->LB_B_1->setText("작업 진입 전 위치를 교시해주세요.");
                        if(data_sound == 1)
                        {
                            mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "작업 진입 전 위치를 교시해주세요."+".MP3"));
                            mMediaPlayer->play();
                        }
                }
                //
                //
                //
                if(i >= 2 && i < welding_data.size()-2){
                    // 전 x , 후 x
                    if(welding_data[i-1].command_option == WEL_CMD_INIT_L && welding_data[i+1].command_option == WEL_CMD_FINAL_L)
                    {
                        if(welding_data[i].command_option == WEL_CMD_GAJUB)
                        {
                            ui->LB_B_1->setText("가접용접 위치를 교시해주세요.");
                                if(data_sound == 1)
                                {
                                mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "가접용접 위치를 교시해주세요."+".MP3"));
                                mMediaPlayer->play();
                                }
                        }
                        if(welding_data[i].command_option == WEL_CMD_MOVE_L)
                        {
                            ui->LB_B_1->setText("직선이동 위치를 교시해주세요.");
                                if(data_sound == 1)
                                {
                                mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "직선이동 위치를 교시해주세요."+".MP3"));
                                mMediaPlayer->play();
                                }
                        }
                        if(welding_data[i].command_option == WEL_CMD_MOVE_J)
                        {
                            ui->LB_B_1->setText("자유이동 위치를 교시해주세요.");
                                if(data_sound == 1)
                                {
                                mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "자유이동 위치를 교시해주세요."+".MP3"));
                                mMediaPlayer->play();
                                }
                        }
                        if(welding_data[i].command_option == WEL_CMD_WAIT_DIN || welding_data[i].command_option == WEL_CMD_WAIT_TIME)
                        {
                            ui->LB_B_1->setText("대기 위치를 교시해주세요.");
                                if(data_sound == 1)
                                {
                                mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "대기 위치를 교시해주세요."+".MP3"));
                                mMediaPlayer->play();
                                }
                        }
                        if(welding_data[i].command_option == WEL_CMD_ONEPOINT_WELD)
                        {
                            ui->LB_B_1->setText("부가축 용접 접근 위치를 교시해주세요.");
                                if(data_sound == 1)
                                {
                                mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "부가축 용접 접근 위치를 교시해주세요."+".MP3"));
                                mMediaPlayer->play();
                                }
                        }
                    }
                    //
                    //
                    //
                    // 전 x , 후 o
                    if(welding_data[i-1].command_option == WEL_CMD_INIT_L && welding_data[i+1].command_option != WEL_CMD_FINAL_L)
                    {
                        if(welding_data[i].command_option == WEL_CMD_GAJUB)
                        {
                            ui->LB_B_1->setText("가접용접 위치를 교시해주세요.");
                                if(data_sound == 1)
                                {
                                mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "가접용접 위치를 교시해주세요."+".MP3"));
                                mMediaPlayer->play();
                                }
                        }
                        if(welding_data[i].sub_option == WEL_CMD_MOVE_PRO_L && welding_data[i].command_option == WEL_CMD_MOVE_L)
                        {
                            ui->LB_B_1->setText("직선용접 시작 위치를 교시해주세요.");
                                if(data_sound == 1)
                                {
                                mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "직선용접 시작 위치를 교시해주세요."+".MP3"));
                                mMediaPlayer->play();
                                }
                        }
                        if(welding_data[i].sub_option == WEL_CMD_MOVE_PRO_C && welding_data[i].command_option == WEL_CMD_MOVE_L)
                        {
                            ui->LB_B_1->setText("곡선용접 시작위치를 교시해주세요.");
                                if(data_sound == 1)
                                {
                                mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "곡선용접 시작위치를 교시해주세요."+".MP3"));
                                mMediaPlayer->play();
                                }
                        }
                        if(welding_data[i].sub_option == WEL_CMD_MOVE_PRO_C_CONVERT && welding_data[i].command_option == WEL_CMD_MOVE_L)
                        {
                            ui->LB_B_1->setText("전환곡선용접 시작위치를 교시해주세요.");
                                if(data_sound == 1)
                                {
                                mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "전환곡선용접 시작위치를 교시해주세요."+".MP3"));
                                mMediaPlayer->play();
                                }

                        }
                        if(welding_data[i].sub_option == WEL_CMD_WEAVING_L && welding_data[i].command_option == WEL_CMD_MOVE_L)
                        {
                            ui->LB_B_1->setText("위빙직선용접 시작위치를 교시해주세요.");
                                if(data_sound == 1)
                                {
                                mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "위빙직선용접 시작위치를 교시해주세요."+".MP3"));
                                mMediaPlayer->play();
                                }

                        }
                        if(welding_data[i].sub_option != WEL_CMD_MOVE_PRO_L && welding_data[i].sub_option != WEL_CMD_MOVE_PRO_C && welding_data[i].sub_option != WEL_CMD_MOVE_PRO_C_CONVERT && welding_data[i].sub_option != WEL_CMD_WEAVING_L && welding_data[i].command_option == WEL_CMD_MOVE_L)
                        {
                            ui->LB_B_1->setText("직선이동 위치를 교시해주세요.");
                                if(data_sound == 1)
                                {
                                mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "직선이동 위치를 교시해주세요."+".MP3"));
                                mMediaPlayer->play();
                                }
                        }
                        if(welding_data[i].command_option == WEL_CMD_MOVE_J)
                        {
                            ui->LB_B_1->setText("자유이동 위치를 교시해주세요.");
                                if(data_sound == 1)
                                {
                                mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "자유이동 위치를 교시해주세요."+".MP3"));
                                mMediaPlayer->play();
                                }
                        }
                        if(welding_data[i].command_option == WEL_CMD_WAIT_DIN || welding_data[i].command_option == WEL_CMD_WAIT_TIME)
                        {
                            ui->LB_B_1->setText("대기 위치를 교시해주세요.");
                                if(data_sound == 1)
                                {
                                mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "대기 위치를 교시해주세요."+".MP3"));
                                mMediaPlayer->play();
                                }
                        }
                        if(welding_data[i].command_option == WEL_CMD_ONEPOINT_WELD)
                        {
                            ui->LB_B_1->setText("부가축 용접 접근 위치를 교시해주세요.");
                                if(data_sound == 1)
                                {
                                mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "부가축 용접 접근 위치를 교시해주세요."+".MP3"));
                                mMediaPlayer->play();
                                }
                        }
                    }
                    //
                    //
                    //
                    // 전 o , 후 o
                    if(welding_data[i-1].command_option != WEL_CMD_INIT_L && welding_data[i+1].command_option != WEL_CMD_FINAL_L)
                    {
                        if(welding_data[i-1].command_option == WEL_CMD_GAJUB)
                        {
                            if(welding_data[i].command_option == WEL_CMD_GAJUB){
                                ui->LB_B_1->setText("가접용접 후 가접용접 위치를 교시해주세요.");
                                    if(data_sound == 1)
                                    {
                                    mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "가접용접 후 가접용접 위치를 교시해주세요."+".MP3"));
                                    mMediaPlayer->play();
                                    }
                            }
                            if(welding_data[i].sub_option == WEL_CMD_MOVE_PRO_L && welding_data[i].command_option == WEL_CMD_MOVE_L)
                            {
                                ui->LB_B_1->setText("가접용접 후 직선용접 시작 위치를 교시해주세요.");
                                    if(data_sound == 1)
                                    {
                                    mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "가접용접 후 직선용접 시작 위치를 교시해주세요."+".MP3"));
                                    mMediaPlayer->play();
                                    }
                            }
                            if(welding_data[i].sub_option == WEL_CMD_MOVE_PRO_C && welding_data[i].command_option == WEL_CMD_MOVE_L)
                            {
                                ui->LB_B_1->setText("가접용접 후 곡선용접 시작위치를 교시해주세요.");
                                    if(data_sound == 1)
                                    {
                                    mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "가접용접 후 곡선용접 시작위치를 교시해주세요."+".MP3"));
                                    mMediaPlayer->play();
                                    }
                            }
                            if(welding_data[i].sub_option == WEL_CMD_MOVE_PRO_C_CONVERT && welding_data[i].command_option == WEL_CMD_MOVE_L)
                            {
                                ui->LB_B_1->setText("가접용접 후 전환곡선용접 시작위치를 교시해주세요.");
                                    if(data_sound == 1)
                                    {
                                    mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "가접용접 후 전환곡선용접 시작위치를 교시해주세요."+".MP3"));
                                    mMediaPlayer->play();
                                    }
                            }
                            if(welding_data[i].sub_option == WEL_CMD_WEAVING_L && welding_data[i].command_option == WEL_CMD_MOVE_L)
                            {
                                ui->LB_B_1->setText("가접용접 후 위빙직선용접 시작위치를 교시해주세요.");
                                    if(data_sound == 1)
                                    {
                                    mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "가접용접 후 위빙직선용접 시작위치를 교시해주세요."+".MP3"));
                                    mMediaPlayer->play();
                                    }

                            }
                            if(welding_data[i].sub_option != WEL_CMD_MOVE_PRO_L && welding_data[i].sub_option != WEL_CMD_MOVE_PRO_C && welding_data[i].sub_option != WEL_CMD_MOVE_PRO_C_CONVERT && welding_data[i].sub_option != WEL_CMD_WEAVING_L && welding_data[i].command_option == WEL_CMD_MOVE_L)
                            {
                                ui->LB_B_1->setText("가접용접 후 직선이동 위치를 교시해주세요.");
                                    if(data_sound == 1)
                                    {
                                    mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "가접용접 후 직선이동 위치를 교시해주세요."+".MP3"));
                                    mMediaPlayer->play();
                                    }
                            }
                            if(welding_data[i].command_option == WEL_CMD_MOVE_J)
                            {
                                ui->LB_B_1->setText("가접용접 후 자유이동 위치를 교시해주세요.");
                                    if(data_sound == 1)
                                    {
                                    mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "가접용접 후 자유이동 위치를 교시해주세요."+".MP3"));
                                    mMediaPlayer->play();
                                    }
                            }
                            if(welding_data[i].command_option == WEL_CMD_WAIT_DIN || welding_data[i].command_option == WEL_CMD_WAIT_TIME)
                            {
                                ui->LB_B_1->setText("가접용접 후 대기 위치를 교시해주세요.");
                                    if(data_sound == 1)
                                    {
                                    mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "가접용접 후 대기 위치를 교시해주세요."+".MP3"));
                                    mMediaPlayer->play();
                                    }
                            }
                            if(welding_data[i].command_option == WEL_CMD_ONEPOINT_WELD){
                                ui->LB_B_1->setText("가접용접 후 부가축 용접 위치를 교시해주세요.");
                                    if(data_sound == 1)
                                    {
                                    mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "가접용접 후 부가축 용접 위치를 교시해주세요."+".MP3"));
                                    mMediaPlayer->play();
                                    }
                            }
                        }
                        //
                        //
                        if(welding_data[i-1].sub_option == WEL_CMD_MOVE_PRO_L)
                        {
                            if(welding_data[i].command_option == WEL_CMD_GAJUB)
                            {
                                ui->LB_B_1->setText("직선용접 후 가접용접 위치를 교시해주세요.");
                                    if(data_sound == 1)
                                    {
                                    mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "직선용접 후 가접용접 위치를 교시해주세요."+".MP3"));
                                    mMediaPlayer->play();
                                    }
                            }
                            if(welding_data[i].sub_option == WEL_CMD_MOVE_PRO_L)
                            {
                                if(welding_data[i+1].sub_option == WEL_CMD_MOVE_PRO_L)
                                {
                                    ui->LB_B_1->setText("다음 직선용접 위치를 교시해주세요.");
                                        if(data_sound == 1)
                                        {
                                        mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "다음 직선용접 위치를 교시해주세요."+".MP3"));
                                        mMediaPlayer->play();
                                        }
                                }
                                if(welding_data[i+1].sub_option == WEL_CMD_MOVE_PRO_C)
                                {
                                    ui->LB_B_1->setText("직선용접 종료 및 곡선용접 시작 위치를 교시해주세요.");
                                        if(data_sound == 1)
                                        {
                                        mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "직선용접 종료 및 곡선용접 시작 위치를 교시해주세요."+".MP3"));
                                        mMediaPlayer->play();
                                        }
                                }
                                if(welding_data[i+1].sub_option == WEL_CMD_MOVE_PRO_C_CONVERT)
                                {
                                    ui->LB_B_1->setText("직선용접 종료 및 전환곡선용접 시작 위치를 교시해주세요.");
                                        if(data_sound == 1)
                                        {
                                        mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "직선용접 종료 및 전환곡선용접 시작 위치를 교시해주세요."+".MP3"));
                                        mMediaPlayer->play();
                                        }
                                }
                                if(welding_data[i+1].sub_option != WEL_CMD_MOVE_PRO_L && welding_data[i+1].sub_option != WEL_CMD_MOVE_PRO_C && welding_data[i+1].sub_option != WEL_CMD_MOVE_PRO_C_CONVERT)
                                {
                                    ui->LB_B_1->setText("직선용접 종료 위치를 교시해주세요.");
                                        if(data_sound == 1)
                                        {
                                        mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "직선용접 종료 위치를 교시해주세요."+".MP3"));
                                        mMediaPlayer->play();
                                        }
                                }
                            }
                            if(welding_data[i].sub_option == WEL_CMD_MOVE_PRO_C)
                            {
                                ui->LB_B_1->setText("다음 곡선용접 위치를 교시해주세요.");
                                    if(data_sound == 1)
                                    {
                                    mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "다음 곡선용접 위치를 교시해주세요."+".MP3"));
                                    mMediaPlayer->play();
                                    }
                            }
                            if(welding_data[i].sub_option == WEL_CMD_MOVE_PRO_C_CONVERT)
                            {
                                ui->LB_B_1->setText("다음 전환곡선용접 위치를 교시해주세요.");
                                    if(data_sound == 1)
                                    {
                                    mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "다음 전환곡선용접 위치를 교시해주세요."+".MP3"));
                                    mMediaPlayer->play();
                                    }
                            }
                            if(welding_data[i].sub_option == WEL_CMD_WEAVING_L)
                            {
                                ui->LB_B_1->setText("직선용접 후 위빙직선용접 시작위치를 교시해주세요.");
                                    if(data_sound == 1)
                                    {
                                    mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "직선용접 후 위빙직선용접 시작위치를 교시해주세요."+".MP3"));
                                    mMediaPlayer->play();
                                    }
                            }
                            if(welding_data[i].sub_option != WEL_CMD_MOVE_PRO_L && welding_data[i].sub_option != WEL_CMD_MOVE_PRO_C && welding_data[i].sub_option != WEL_CMD_MOVE_PRO_C_CONVERT && welding_data[i].sub_option != WEL_CMD_WEAVING_L && welding_data[i].command_option == WEL_CMD_MOVE_L)
                            {
                                ui->LB_B_1->setText("직선용접 후 직선이동 위치를 교시해주세요.");
                                    if(data_sound == 1)
                                    {
                                    mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "직선용접 후 직선이동 위치를 교시해주세요."+".MP3"));
                                    mMediaPlayer->play();
                                    }
                            }
                            if(welding_data[i].command_option == WEL_CMD_MOVE_J)
                            {
                                ui->LB_B_1->setText("직선용접 후 자유이동 위치를 교시해주세요.");
                                    if(data_sound == 1)
                                    {
                                    mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "직선용접 후 자유이동 위치를 교시해주세요."+".MP3"));
                                    mMediaPlayer->play();
                                    }

                            }
                            if(welding_data[i].command_option == WEL_CMD_WAIT_DIN || welding_data[i].command_option == WEL_CMD_WAIT_TIME)
                            {
                                ui->LB_B_1->setText("직선용접 후 대기 위치를 교시해주세요.");
                                    if(data_sound == 1)
                                    {
                                    mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "직선용접 후 대기 위치를 교시해주세요."+".MP3"));
                                    mMediaPlayer->play();
                                    }
                            }
                            if(welding_data[i].command_option == WEL_CMD_ONEPOINT_WELD)
                            {
                                ui->LB_B_1->setText("직선용접 후 부가축 용접 위치를 교시해주세요.");
                                    if(data_sound == 1)
                                    {
                                    mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "직선용접 후 부가축 용접 위치를 교시해주세요."+".MP3"));
                                    mMediaPlayer->play();
                                    }
                            }

                        }
                        if(welding_data[i-1].sub_option == WEL_CMD_MOVE_PRO_C)
                        {
                            if(welding_data[i].command_option == WEL_CMD_GAJUB)
                            {
                                ui->LB_B_1->setText("곡선용접 후 가접용접 위치를 교시해주세요.");
                                    if(data_sound == 1)
                                    {
                                    mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "곡선용접 후 가접용접 위치를 교시해주세요."+".MP3"));
                                    mMediaPlayer->play();
                                    }
                            }
                            if(welding_data[i].sub_option == WEL_CMD_MOVE_PRO_L)
                            {
                                if(welding_data[i+1].sub_option == WEL_CMD_MOVE_PRO_L)
                                {
                                    ui->LB_B_1->setText("곡선용접 후 다음 직선용접 위치를 교시해주세요.");
                                        if(data_sound == 1)
                                        {
                                        mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "곡선용접 후 다음 직선용접 위치를 교시해주세요."+".MP3"));
                                        mMediaPlayer->play();
                                        }
                                }
                                if(welding_data[i+1].sub_option == WEL_CMD_MOVE_PRO_C)
                                {
                                    ui->LB_B_1->setText("직선용접 종료 및 곡선용접 시작 위치를 교시해주세요.");
                                        if(data_sound == 1)
                                        {
                                        mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "직선용접 종료 및 곡선용접 시작 위치를 교시해주세요."+".MP3"));
                                        mMediaPlayer->play();
                                        }
                                }
                                if(welding_data[i+1].sub_option == WEL_CMD_MOVE_PRO_C_CONVERT)
                                {
                                    ui->LB_B_1->setText("직선용접 종료 및 전환곡선용접 시작 위치를 교시해주세요.");
                                        if(data_sound == 1)
                                        {
                                        mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "직선용접 종료 및 전환곡선용접 시작 위치를 교시해주세요."+".MP3"));
                                        mMediaPlayer->play();
                                        }
                                }
                                if(welding_data[i+1].sub_option != WEL_CMD_MOVE_PRO_L && welding_data[i+1].sub_option != WEL_CMD_MOVE_PRO_C && welding_data[i+1].sub_option != WEL_CMD_MOVE_PRO_C_CONVERT)
                                {
                                    ui->LB_B_1->setText("곡선용접 후 직선용접 종료 위치를 교시해주세요.");
                                    if(data_sound == 1)
                                    {
                                    mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "곡선용접 후 직선용접 종료 위치를 교시해주세요."+".MP3"));
                                    mMediaPlayer->play();
                                    }
                                }
                            }
                            if(welding_data[i].sub_option == WEL_CMD_MOVE_PRO_C)
                            {
                                if(welding_data[i+1].sub_option == WEL_CMD_MOVE_PRO_L)
                                {
                                    ui->LB_B_1->setText("곡선용접 종료 및 직선용접 시작 위치를 교시해주세요.");
                                        if(data_sound == 1)
                                        {
                                        mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "곡선용접 종료 및 직선용접 시작 위치를 교시해주세요."+".MP3"));
                                        mMediaPlayer->play();
                                        }
                                }
                                if(welding_data[i+1].sub_option == WEL_CMD_MOVE_PRO_C)
                                {
                                    ui->LB_B_1->setText("다음 곡선용접 위치를 교시해주세요.");
                                        if(data_sound == 1)
                                        {
                                        mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "다음 곡선용접 위치를 교시해주세요."+".MP3"));
                                        mMediaPlayer->play();
                                        }
                                }
                                if(welding_data[i+1].sub_option == WEL_CMD_MOVE_PRO_C_CONVERT)
                                {
                                    ui->LB_B_1->setText("곡선용접 종료 및 전환곡선용접 시작 위치를 교시해주세요.");
                                        if(data_sound == 1)
                                        {
                                        mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "곡선용접 종료 및 전환곡선용접 시작 위치를 교시해주세요."+".MP3"));
                                        mMediaPlayer->play();
                                        }
                                }
                                if(welding_data[i+1].sub_option != WEL_CMD_MOVE_PRO_L && welding_data[i+1].sub_option != WEL_CMD_MOVE_PRO_C && welding_data[i+1].sub_option != WEL_CMD_MOVE_PRO_C_CONVERT)
                                {
                                    ui->LB_B_1->setText("곡선용접 종료 위치를 교시해주세요.");
                                    if(data_sound == 1)
                                    {
                                    mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "곡선용접 종료 위치를 교시해주세요."+".MP3"));
                                    mMediaPlayer->play();
                                    }
                                }

                            }
                            if(welding_data[i].sub_option == WEL_CMD_MOVE_PRO_C_CONVERT)
                            {
                                if(welding_data[i+1].sub_option == WEL_CMD_MOVE_PRO_L)
                                {
                                    ui->LB_B_1->setText("전환곡선용접 종료 및 직선용접 시작 위치를 교시해주세요.");
                                        if(data_sound == 1)
                                        {
                                        mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "전환곡선용접 종료 및 직선용접 시작 위치를 교시해주세요."+".MP3"));
                                        mMediaPlayer->play();
                                        }
                                }
                                if(welding_data[i+1].sub_option == WEL_CMD_MOVE_PRO_C)
                                {
                                    ui->LB_B_1->setText("전환곡선용접 종료 및 곡선용접 시작 위치를 교시해주세요.");
                                        if(data_sound == 1)
                                        {
                                        mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "전환곡선용접 종료 및 곡선용접 시작 위치를 교시해주세요."+".MP3"));
                                        mMediaPlayer->play();
                                        }
                                }
                                if(welding_data[i+1].sub_option == WEL_CMD_MOVE_PRO_C_CONVERT)
                                {
                                    ui->LB_B_1->setText("다음 전환곡선용접 위치를 교시해주세요.");
                                        if(data_sound == 1)
                                        {
                                        mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "다음 전환곡선용접 위치를 교시해주세요."+".MP3"));
                                        mMediaPlayer->play();
                                        }
                                }
                                if(welding_data[i+1].sub_option != WEL_CMD_MOVE_PRO_L && welding_data[i+1].sub_option != WEL_CMD_MOVE_PRO_C && welding_data[i+1].sub_option != WEL_CMD_MOVE_PRO_C_CONVERT)
                                {
                                    ui->LB_B_1->setText("전환곡선용접 종료 위치를 교시해주세요.");
                                        if(data_sound == 1)
                                        {
                                        mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "전환곡선용접 종료 위치를 교시해주세요."+".MP3"));
                                        mMediaPlayer->play();
                                        }
                                }

                            }
                            if(welding_data[i].sub_option == WEL_CMD_WEAVING_L)
                            {
                                ui->LB_B_1->setText("곡선용접 후 위빙직선용접 시작위치를 교시해주세요.");
                                if(data_sound == 1)
                                {
                                mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "곡선용접 후 위빙직선용접 시작위치를 교시해주세요."+".MP3"));
                                mMediaPlayer->play();
                                }
                            }
                            if(welding_data[i].sub_option != WEL_CMD_MOVE_PRO_L && welding_data[i].sub_option != WEL_CMD_MOVE_PRO_C && welding_data[i].sub_option != WEL_CMD_MOVE_PRO_C_CONVERT && welding_data[i].sub_option != WEL_CMD_WEAVING_L && welding_data[i].command_option == WEL_CMD_MOVE_L)
                            {
                                ui->LB_B_1->setText("곡선용접 후 직선이동 위치를 교시해주세요.");
                                    if(data_sound == 1)
                                    {
                                    mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "곡선용접 후 직선이동 위치를 교시해주세요."+".MP3"));
                                    mMediaPlayer->play();
                                    }
                            }
                            if(welding_data[i].command_option == WEL_CMD_MOVE_J)
                            {
                                ui->LB_B_1->setText("곡선용접 후 자유이동 위치를 교시해주세요.");
                                    if(data_sound == 1)
                                    {
                                    mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "곡선용접 후 자유이동 위치를 교시해주세요."+".MP3"));
                                    mMediaPlayer->play();
                                    }

                            }
                            if(welding_data[i].command_option == WEL_CMD_WAIT_DIN || welding_data[i].command_option == WEL_CMD_WAIT_TIME)
                            {
                                ui->LB_B_1->setText("곡선용접 후 대기 위치를 교시해주세요.");
                                    if(data_sound == 1)
                                    {
                                    mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "곡선용접 후 대기 위치를 교시해주세요."+".MP3"));
                                    mMediaPlayer->play();
                                    }
                            }
                            if(welding_data[i].command_option == WEL_CMD_ONEPOINT_WELD)
                            {
                                ui->LB_B_1->setText("곡선용접 후 부가축 용접 위치를 교시해주세요.");
                                    if(data_sound == 1)
                                    {
                                    mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "곡선용접 후 부가축 용접 위치를 교시해주세요."+".MP3"));
                                    mMediaPlayer->play();
                                    }
                            }

                        }
                        if(welding_data[i-1].sub_option == WEL_CMD_MOVE_PRO_C_CONVERT)
                        {
                            if(welding_data[i].command_option == WEL_CMD_GAJUB)
                            {
                                ui->LB_B_1->setText("전환곡선용접 후 가접용접 위치를 교시해주세요.");
                                    if(data_sound == 1)
                                    {
                                    mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "전환곡선용접 후 가접용접 위치를 교시해주세요."+".MP3"));
                                    mMediaPlayer->play();
                                    }
                            }
                            if(welding_data[i].sub_option == WEL_CMD_MOVE_PRO_L)
                            {
                                if(welding_data[i+1].sub_option == WEL_CMD_MOVE_PRO_L)
                                {
                                    ui->LB_B_1->setText("전환곡선용접 후 다음 직선용접 위치를 교시해주세요.");
                                        if(data_sound == 1)
                                        {
                                        mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "전환곡선용접 후 다음 직선용접 위치를 교시해주세요."+".MP3"));
                                        mMediaPlayer->play();
                                        }
                                }
                                if(welding_data[i+1].sub_option == WEL_CMD_MOVE_PRO_C)
                                {
                                    ui->LB_B_1->setText("직선용접 종료 및 곡선용접 시작 위치를 교시해주세요.");
                                        if(data_sound == 1)
                                        {
                                        mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "직선용접 종료 및 곡선용접 시작 위치를 교시해주세요."+".MP3"));
                                        mMediaPlayer->play();
                                        }
                                }
                                if(welding_data[i+1].sub_option == WEL_CMD_MOVE_PRO_C_CONVERT)
                                {
                                    ui->LB_B_1->setText("직선용접 종료 및 전환곡선용접 시작 위치를 교시해주세요.");
                                        if(data_sound == 1)
                                        {
                                        mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "직선용접 종료 및 전환곡선용접 시작 위치를 교시해주세요."+".MP3"));
                                        mMediaPlayer->play();
                                        }
                                }
                                if(welding_data[i+1].sub_option != WEL_CMD_MOVE_PRO_L && welding_data[i+1].sub_option != WEL_CMD_MOVE_PRO_C && welding_data[i+1].sub_option != WEL_CMD_MOVE_PRO_C_CONVERT)
                                {
                                    ui->LB_B_1->setText("전환곡선용접 후 직선용접 종료 위치를 교시해주세요.");
                                        if(data_sound == 1)
                                        {
                                        mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "전환곡선용접 후 직선용접 종료 위치를 교시해주세요."+".MP3"));
                                        mMediaPlayer->play();
                                        }
                                }

                            }
                            if(welding_data[i].sub_option == WEL_CMD_MOVE_PRO_C)
                            {
                                if(welding_data[i+1].sub_option == WEL_CMD_MOVE_PRO_L)
                                {
                                    ui->LB_B_1->setText("곡선용접 종료 및 직선용접 시작 위치를 교시해주세요.");
                                        if(data_sound == 1)
                                        {
                                        mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "곡선용접 종료 및 직선용접 시작 위치를 교시해주세요."+".MP3"));
                                        mMediaPlayer->play();
                                        }
                                }
                                if(welding_data[i+1].sub_option == WEL_CMD_MOVE_PRO_C)
                                {
                                    ui->LB_B_1->setText("다음 곡선용접 위치를 교시해주세요.");
                                        if(data_sound == 1)
                                        {
                                        mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "다음 곡선용접 위치를 교시해주세요."+".MP3"));
                                        mMediaPlayer->play();
                                        }
                                }
                                if(welding_data[i+1].sub_option == WEL_CMD_MOVE_PRO_C_CONVERT)
                                {
                                    ui->LB_B_1->setText("곡선용접 종료 및 전환곡선용접 시작 위치를 교시해주세요.");
                                        if(data_sound == 1)
                                        {
                                        mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "곡선용접 종료 및 전환곡선용접 시작 위치를 교시해주세요."+".MP3"));
                                        mMediaPlayer->play();
                                        }
                                }
                                if(welding_data[i+1].sub_option != WEL_CMD_MOVE_PRO_L && welding_data[i+1].sub_option != WEL_CMD_MOVE_PRO_C && welding_data[i+1].sub_option != WEL_CMD_MOVE_PRO_C_CONVERT)
                                {
                                    ui->LB_B_1->setText("곡선용접 종료 위치를 교시해주세요.");
                                        if(data_sound == 1)
                                        {
                                        mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "곡선용접 종료 위치를 교시해주세요."+".MP3"));
                                        mMediaPlayer->play();
                                        }
                                }
                            }
                            if(welding_data[i].sub_option == WEL_CMD_MOVE_PRO_C_CONVERT)
                            {
                                if(welding_data[i+1].sub_option == WEL_CMD_MOVE_PRO_L)
                                {
                                    ui->LB_B_1->setText("전환곡선용접 종료 및 직선용접 시작 위치를 교시해주세요.");
                                        if(data_sound == 1)
                                        {
                                        mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "전환곡선용접 종료 및 직선용접 시작 위치를 교시해주세요."+".MP3"));
                                        mMediaPlayer->play();
                                        }
                                }
                                if(welding_data[i+1].sub_option == WEL_CMD_MOVE_PRO_C)
                                {
                                    ui->LB_B_1->setText("전환곡선용접 종료 및 곡선용접 시작 위치를 교시해주세요.");
                                        if(data_sound == 1)
                                        {
                                        mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "전환곡선용접 종료 및 곡선용접 시작 위치를 교시해주세요."+".MP3"));
                                        mMediaPlayer->play();
                                        }
                                }
                                if(welding_data[i+1].sub_option == WEL_CMD_MOVE_PRO_C_CONVERT)
                                {
                                    ui->LB_B_1->setText("다음 전환곡선용접 위치를 교시해주세요.");
                                        if(data_sound == 1)
                                        {
                                        mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "다음 전환곡선용접 위치를 교시해주세요."+".MP3"));
                                        mMediaPlayer->play();
                                        }
                                }
                                if(welding_data[i+1].sub_option != WEL_CMD_MOVE_PRO_L && welding_data[i+1].sub_option != WEL_CMD_MOVE_PRO_C && welding_data[i+1].sub_option != WEL_CMD_MOVE_PRO_C_CONVERT)
                                {
                                    ui->LB_B_1->setText("전환곡선용접 종료 위치를 교시해주세요.");
                                        if(data_sound == 1)
                                        {
                                        mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "전환곡선용접 종료 위치를 교시해주세요."+".MP3"));
                                        mMediaPlayer->play();
                                        }
                                }

                            }
                            if(welding_data[i].sub_option == WEL_CMD_WEAVING_L)
                            {
                                ui->LB_B_1->setText("전환곡선용접 후 위빙직선용접 시작위치를 교시해주세요.");
                                    if(data_sound == 1)
                                    {
                                    mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "전환곡선용접 후 위빙직선용접 시작위치를 교시해주세요."+".MP3"));
                                    mMediaPlayer->play();
                                    }
                            }
                            if(welding_data[i].sub_option != WEL_CMD_MOVE_PRO_L && welding_data[i].sub_option != WEL_CMD_MOVE_PRO_C && welding_data[i].sub_option != WEL_CMD_MOVE_PRO_C_CONVERT && welding_data[i].sub_option != WEL_CMD_WEAVING_L && welding_data[i].command_option == WEL_CMD_MOVE_L)
                            {
                                ui->LB_B_1->setText("전환곡선용접 후 직선이동 위치를 교시해주세요.");
                                    if(data_sound == 1)
                                    {
                                    mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "전환곡선용접 후 직선이동 위치를 교시해주세요."+".MP3"));
                                    mMediaPlayer->play();
                                    }
                            }
                            if(welding_data[i].command_option == WEL_CMD_MOVE_J)
                            {
                                ui->LB_B_1->setText("전환곡선용접 후 자유이동 위치를 교시해주세요.");
                                    if(data_sound == 1)
                                    {
                                    mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "전환곡선용접 후 자유이동 위치를 교시해주세요."+".MP3"));
                                    mMediaPlayer->play();
                                    }
                            }
                            if(welding_data[i].command_option == WEL_CMD_WAIT_DIN || welding_data[i].command_option == WEL_CMD_WAIT_TIME)
                            {
                                ui->LB_B_1->setText("전환곡선용접 후 대기 위치를 교시해주세요.");
                                    if(data_sound == 1)
                                    {
                                    mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "전환곡선용접 후 대기 위치를 교시해주세요."+".MP3"));
                                    mMediaPlayer->play();
                                    }
                            }
                            if(welding_data[i].command_option == WEL_CMD_ONEPOINT_WELD)
                            {
                                ui->LB_B_1->setText("전환곡선용접 후 부가축 용접 위치를 교시해주세요.");
                                    if(data_sound == 1)
                                    {
                                    mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "전환곡선용접 후 부가축 용접 위치를 교시해주세요."+".MP3"));
                                    mMediaPlayer->play();
                                    }
                            }
                        }
                        if(welding_data[i-1].sub_option == WEL_CMD_WEAVING_L)
                        {
                            if(welding_data[i].command_option == WEL_CMD_WEAVING_L_REF_1)
                            {
                                ui->LB_B_1->setText("위빙직선용접 참고1 위치를 교시해주세요.");
                                if(data_sound == 1)
                                {
                                mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "위빙직선용접 참고 위치를 교시해주세요."+".MP3"));
                                mMediaPlayer->play();
                                }
                            }
                            if(welding_data[i].command_option == WEL_CMD_GAJUB)
                            {
                                ui->LB_B_1->setText("위빙직선용접 후 가접용접 위치를 교시해주세요.");
                                    if(data_sound == 1)
                                    {
                                    mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "위빙직선용접 후 가접용접 위치를 교시해주세요."+".MP3"));
                                    mMediaPlayer->play();
                                    }
                            }
                            if(welding_data[i].sub_option == WEL_CMD_MOVE_PRO_L)
                            {
                                ui->LB_B_1->setText("위빙직선용접 후 직선용접 시작 위치를 교시해주세요.");
                                    if(data_sound == 1)
                                    {
                                    mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "위빙직선용접 후 직선용접 시작 위치를 교시해주세요."+".MP3"));
                                    mMediaPlayer->play();
                                    }
                            }
                            if(welding_data[i].sub_option == WEL_CMD_MOVE_PRO_C)
                            {
                                ui->LB_B_1->setText("위빙직선용접 후 곡선용접 시작위치를 교시해주세요.");
                                    if(data_sound == 1)
                                    {
                                    mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "위빙직선용접 후 곡선용접 시작위치를 교시해주세요."+".MP3"));
                                    mMediaPlayer->play();
                                    }
                            }
                            if(welding_data[i].sub_option == WEL_CMD_MOVE_PRO_C_CONVERT)
                            {
                                ui->LB_B_1->setText("위빙직선용접 후 전환곡선용접 시작위치를 교시해주세요.");
                                    if(data_sound == 1)
                                    {
                                    mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "위빙직선용접 후 전환곡선용접 시작위치를 교시해주세요."+".MP3"));
                                    mMediaPlayer->play();
                                    }
                            }
                            if(welding_data[i].sub_option != WEL_CMD_MOVE_PRO_L && welding_data[i].sub_option != WEL_CMD_MOVE_PRO_C && welding_data[i].sub_option != WEL_CMD_MOVE_PRO_C_CONVERT && welding_data[i].sub_option != WEL_CMD_WEAVING_L && welding_data[i].command_option == WEL_CMD_MOVE_L)
                            {
                                ui->LB_B_1->setText("위빙직선용접 후 직선이동 위치를 교시해주세요.");
                                    if(data_sound == 1)
                                    {
                                    mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "위빙직선용접 후 직선이동 위치를 교시해주세요."+".MP3"));
                                    mMediaPlayer->play();
                                    }
                            }
                            if(welding_data[i].command_option == WEL_CMD_MOVE_J)
                            {
                                ui->LB_B_1->setText("위빙직선용접 후 자유이동 위치를 교시해주세요.");
                                    if(data_sound == 1)
                                    {
                                    mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "위빙직선용접 후 자유이동 위치를 교시해주세요."+".MP3"));
                                    mMediaPlayer->play();
                                    }
                            }
                            if(welding_data[i].command_option == WEL_CMD_WAIT_DIN || welding_data[i].command_option == WEL_CMD_WAIT_TIME)
                            {
                                ui->LB_B_1->setText("위빙직선용접 후 대기 위치를 교시해주세요.");
                                    if(data_sound == 1)
                                    {
                                    mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "위빙직선용접 후 대기 위치를 교시해주세요."+".MP3"));
                                    mMediaPlayer->play();
                                    }
                            }
                            if(welding_data[i].command_option == WEL_CMD_ONEPOINT_WELD)
                            {
                                ui->LB_B_1->setText("위빙직선용접 후 부가축 용접 위치를 교시해주세요.");
                                    if(data_sound == 1)
                                    {
                                    mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "위빙직선용접 후 부가축 용접 위치를 교시해주세요."+".MP3"));
                                    mMediaPlayer->play();
                                    }
                            }
                        }
                        if(welding_data[i-1].command_option == WEL_CMD_WEAVING_L_REF_1)
                        {
                            if(welding_data[i].command_option == WEL_CMD_WEAVING_L_REF_2)
                            {
                                ui->LB_B_1->setText("위빙직선용접 참고2 위치를 교시해주세요.");
                                if(data_sound == 1)
                                {
                                mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "위빙직선용접 참고 위치를 교시해주세요."+".MP3"));
                                mMediaPlayer->play();
                                }
                            }
                        }
                        if(welding_data[i-1].command_option == WEL_CMD_WEAVING_L_REF_2)
                        {
                            if(welding_data[i].sub_option == WEL_CMD_WEAVING_L)
                            {
                                ui->LB_B_1->setText("위빙직선용접 종료 위치를 교시해주세요.");
                                if(data_sound == 1)
                                {
                                mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "위빙직선용접 종료 위치를 교시해주세요."+".MP3"));
                                mMediaPlayer->play();
                                }
                            }
                        }
                        if(welding_data[i-1].sub_option != WEL_CMD_MOVE_PRO_L && welding_data[i-1].sub_option != WEL_CMD_MOVE_PRO_C && welding_data[i-1].sub_option != WEL_CMD_MOVE_PRO_C_CONVERT && welding_data[i-1].sub_option != WEL_CMD_WEAVING_L && welding_data[i-1].command_option == WEL_CMD_MOVE_L)
                        {
                            if(welding_data[i].command_option == WEL_CMD_GAJUB)
                            {
                                ui->LB_B_1->setText("직선이동 후 가접용접 위치를 교시해주세요.");
                                    if(data_sound == 1)
                                    {
                                    mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "직선이동 후 가접용접 위치를 교시해주세요."+".MP3"));
                                    mMediaPlayer->play();
                                    }
                            }
                            if(welding_data[i].sub_option == WEL_CMD_MOVE_PRO_L)
                            {
                                ui->LB_B_1->setText("직선이동 후 직선용접 시작 위치를 교시해주세요.");
                                    if(data_sound == 1)
                                    {
                                    mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "직선이동 후 직선용접 시작 위치를 교시해주세요."+".MP3"));
                                    mMediaPlayer->play();
                                    }
                            }
                            if(welding_data[i].sub_option == WEL_CMD_MOVE_PRO_C)
                            {
                                ui->LB_B_1->setText("직선이동 후 곡선용접 시작위치를 교시해주세요.");
                                    if(data_sound == 1)
                                    {
                                    mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "직선이동 후 곡선용접 시작위치를 교시해주세요."+".MP3"));
                                    mMediaPlayer->play();
                                    }
                            }
                            if(welding_data[i].sub_option == WEL_CMD_MOVE_PRO_C_CONVERT)
                            {
                                ui->LB_B_1->setText("직선이동 후 전환곡선용접 시작위치를 교시해주세요.");
                                    if(data_sound == 1)
                                    {
                                    mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "직선이동 후 전환곡선용접 시작위치를 교시해주세요."+".MP3"));
                                    mMediaPlayer->play();
                                    }
                            }
                            if(welding_data[i].sub_option == WEL_CMD_WEAVING_L)
                            {
                                ui->LB_B_1->setText("직선이동후 후 위빙직선용접 시작위치를 교시해주세요.");
                                    if(data_sound == 1)
                                    {
                                    mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "직선이동 후 위빙직선용접 시작위치를 교시해주세요."+".MP3"));
                                    mMediaPlayer->play();
                                    }
                            }
                            if(welding_data[i].sub_option != WEL_CMD_MOVE_PRO_L && welding_data[i].sub_option != WEL_CMD_MOVE_PRO_C && welding_data[i].sub_option != WEL_CMD_MOVE_PRO_C_CONVERT && welding_data[i].sub_option != WEL_CMD_WEAVING_L && welding_data[i].command_option == WEL_CMD_MOVE_L)
                            {
                                ui->LB_B_1->setText("다음 직선이동 위치를 교시해주세요.");
                                    if(data_sound == 1)
                                    {
                                    mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "다음 직선이동 위치를 교시해주세요."+".MP3"));
                                    mMediaPlayer->play();
                                    }
                            }
                            if(welding_data[i].command_option == WEL_CMD_MOVE_J)
                            {
                                ui->LB_B_1->setText("직선이동 후 자유이동 위치를 교시해주세요.");
                                    if(data_sound == 1)
                                    {
                                    mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "직선이동 후 자유이동 위치를 교시해주세요."+".MP3"));
                                    mMediaPlayer->play();
                                    }
                            }
                            if(welding_data[i].command_option == WEL_CMD_WAIT_DIN || welding_data[i].command_option == WEL_CMD_WAIT_TIME)
                            {
                                ui->LB_B_1->setText("직선이동 후 대기 위치를 교시해주세요.");
                                    if(data_sound == 1)
                                    {
                                    mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "직선이동 후 대기 위치를 교시해주세요."+".MP3"));
                                    mMediaPlayer->play();
                                    }
                            }
                            if(welding_data[i].command_option == WEL_CMD_ONEPOINT_WELD)
                            {
                                ui->LB_B_1->setText("직선이동 후 부가축 용접 위치를 교시해주세요.");
                                    if(data_sound == 1)
                                    {
                                    mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "직선이동 후 부가축 용접 위치를 교시해주세요."+".MP3"));
                                    mMediaPlayer->play();
                                    }
                            }
                        }
                        if(welding_data[i-1].command_option == WEL_CMD_MOVE_J)
                        {
                            if(welding_data[i].command_option == WEL_CMD_GAJUB)
                            {
                                ui->LB_B_1->setText("자유이동 후 가접용접 위치를 교시해주세요.");
                                    if(data_sound == 1)
                                    {
                                    mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "자유이동 후 가접용접 위치를 교시해주세요."+".MP3"));
                                    mMediaPlayer->play();
                                    }
                            }
                            if(welding_data[i].sub_option == WEL_CMD_MOVE_PRO_L)
                            {
                                ui->LB_B_1->setText("자유이동 후 직선용접 시작 위치를 교시해주세요.");
                                    if(data_sound == 1)
                                    {
                                    mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "자유이동 후 직선용접 시작 위치를 교시해주세요."+".MP3"));
                                    mMediaPlayer->play();
                                    }
                            }
                            if(welding_data[i].sub_option == WEL_CMD_MOVE_PRO_C)
                            {
                                ui->LB_B_1->setText("자유이동 후 곡선용접 시작위치를 교시해주세요.");
                                    if(data_sound == 1)
                                    {
                                    mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "자유이동 후 곡선용접 시작위치를 교시해주세요."+".MP3"));
                                    mMediaPlayer->play();
                                    }
                            }
                            if(welding_data[i].sub_option == WEL_CMD_MOVE_PRO_C_CONVERT)
                            {
                                ui->LB_B_1->setText("자유이동 후 전환곡선용접 시작위치를 교시해주세요.");
                                    if(data_sound == 1)
                                    {
                                    mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "자유이동 후 전환곡선용접 시작위치를 교시해주세요."+".MP3"));
                                    mMediaPlayer->play();
                                    }
                            }
                            if(welding_data[i].sub_option == WEL_CMD_WEAVING_L)
                            {
                                ui->LB_B_1->setText("자유이동 후 위빙직선용접 시작위치를 교시해주세요.");
                                    if(data_sound == 1)
                                    {
                                    mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "자유이동 후 위빙직선용접 시작위치를 교시해주세요."+".MP3"));
                                    mMediaPlayer->play();
                                    }
                            }
                            if(welding_data[i].sub_option != WEL_CMD_MOVE_PRO_L && welding_data[i].sub_option != WEL_CMD_MOVE_PRO_C && welding_data[i].sub_option != WEL_CMD_MOVE_PRO_C_CONVERT && welding_data[i].sub_option != WEL_CMD_WEAVING_L && welding_data[i].command_option == WEL_CMD_MOVE_L)
                            {
                                ui->LB_B_1->setText("자유이동 후 직선이동 위치를 교시해주세요.");
                                    if(data_sound == 1)
                                    {
                                    mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "자유이동 후 직선이동 위치를 교시해주세요."+".MP3"));
                                    mMediaPlayer->play();
                                    }
                            }
                            if(welding_data[i].command_option == WEL_CMD_MOVE_J)
                            {
                                ui->LB_B_1->setText("다음 자유이동 위치를 교시해주세요.");
                                if(data_sound == 1)
                                {
                                mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "다음 자유이동 위치를 교시해주세요."+".MP3"));
                                mMediaPlayer->play();
                                }
                            }
                            if(welding_data[i].command_option == WEL_CMD_WAIT_DIN || welding_data[i].command_option == WEL_CMD_WAIT_TIME)
                            {
                                ui->LB_B_1->setText("자유이동 후 대기 위치를 교시해주세요.");
                                if(data_sound == 1)
                                {
                                mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "자유이동 후 대기 위치를 교시해주세요."+".MP3"));
                                mMediaPlayer->play();
                                }
                            }
                            if(welding_data[i].command_option == WEL_CMD_ONEPOINT_WELD)
                            {
                                ui->LB_B_1->setText("자유이동 후 부가축 용접 위치를 교시해주세요.");
                                if(data_sound == 1)
                                {
                                mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "자유이동 후 부가축 용접 위치를 교시해주세요."+".MP3"));
                                mMediaPlayer->play();
                                }
                            }
                        }
                        if(welding_data[i-1].command_option == WEL_CMD_WAIT_DIN || welding_data[i].command_option == WEL_CMD_WAIT_TIME)
                        {
                            if(welding_data[i].command_option == WEL_CMD_GAJUB)
                            {
                                ui->LB_B_1->setText("대기 후 가접용접 위치를 교시해주세요.");
                                    if(data_sound == 1)
                                    {
                                    mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "대기 후 가접용접 위치를 교시해주세요."+".MP3"));
                                    mMediaPlayer->play();
                                    }
                            }
                            if(welding_data[i].sub_option == WEL_CMD_MOVE_PRO_L)
                            {
                                ui->LB_B_1->setText("대기 후 직선용접 시작 위치를 교시해주세요.");
                                    if(data_sound == 1)
                                    {
                                    mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "대기 후 직선용접 시작 위치를 교시해주세요."+".MP3"));
                                    mMediaPlayer->play();
                                    }
                            }
                            if(welding_data[i].sub_option == WEL_CMD_MOVE_PRO_C)
                            {
                                ui->LB_B_1->setText("대기 후 곡선용접 시작위치를 교시해주세요.");
                                    if(data_sound == 1)
                                    {
                                    mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "대기 후 곡선용접 시작위치를 교시해주세요."+".MP3"));
                                    mMediaPlayer->play();
                                    }
                            }
                            if(welding_data[i].sub_option == WEL_CMD_MOVE_PRO_C_CONVERT)
                            {
                                ui->LB_B_1->setText("대기 후 전환곡선용접 시작위치를 교시해주세요.");
                                    if(data_sound == 1)
                                    {
                                    mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "대기 후 전환곡선용접 시작위치를 교시해주세요."+".MP3"));
                                    mMediaPlayer->play();
                                    }
                            }
                            if(welding_data[i].sub_option == WEL_CMD_WEAVING_L)
                            {
                                ui->LB_B_1->setText("대기 후 위빙직선용접 시작위치를 교시해주세요.");
                                    if(data_sound == 1)
                                    {
                                    mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "대기 후 위빙직선용접 시작위치를 교시해주세요."+".MP3"));
                                    mMediaPlayer->play();
                                    }
                            }
                            if(welding_data[i].sub_option != WEL_CMD_MOVE_PRO_L && welding_data[i].sub_option != WEL_CMD_MOVE_PRO_C && welding_data[i].sub_option != WEL_CMD_MOVE_PRO_C_CONVERT && welding_data[i].sub_option != WEL_CMD_WEAVING_L && welding_data[i].command_option == WEL_CMD_MOVE_L)
                            {
                                ui->LB_B_1->setText("대기 후 직선이동 위치를 교시해주세요.");
                                    if(data_sound == 1)
                                    {
                                    mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "대기 후 직선이동 위치를 교시해주세요."+".MP3"));
                                    mMediaPlayer->play();
                                    }
                            }
                            if(welding_data[i].command_option == WEL_CMD_MOVE_J)
                            {
                                ui->LB_B_1->setText("대기 후 자유이동 위치를 교시해주세요.");
                                    if(data_sound == 1)
                                    {
                                    mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "대기 후 자유이동 위치를 교시해주세요."+".MP3"));
                                    mMediaPlayer->play();
                                }
                            }
                            if(welding_data[i].command_option == WEL_CMD_WAIT_DIN || welding_data[i].command_option == WEL_CMD_WAIT_TIME)
                            {
                                ui->LB_B_1->setText("다음 대기 위치를 교시해주세요.");
                                    if(data_sound == 1)
                                    {
                                    mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "다음 대기 위치를 교시해주세요."+".MP3"));
                                    mMediaPlayer->play();
                                    }
                            }
                            if(welding_data[i].command_option == WEL_CMD_ONEPOINT_WELD)
                            {
                                ui->LB_B_1->setText("대기 후 부가축 용접 위치를 교시해주세요.");
                                    if(data_sound == 1)
                                    {
                                    mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "대기 후 부가축 용접 위치를 교시해주세요."+".MP3"));
                                    mMediaPlayer->play();
                                    }
                            }
                        }
                        if(welding_data[i-1].command_option == WEL_CMD_ONEPOINT_WELD)
                        {
                            if(welding_data[i].command_option == WEL_CMD_GAJUB){
                                ui->LB_B_1->setText("부가축 용접 후 가접용접 위치를 교시해주세요.");
                                    if(data_sound == 1)
                                    {
                                    mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "부가축 용접 후 가접용접 위치를 교시해주세요."+".MP3"));
                                    mMediaPlayer->play();
                                    }
                            }
                            if(welding_data[i].sub_option == WEL_CMD_MOVE_PRO_L && welding_data[i].command_option == WEL_CMD_MOVE_L)
                            {
                                ui->LB_B_1->setText("부가축 용접 후 직선용접 시작 위치를 교시해주세요.");
                                    if(data_sound == 1)
                                    {
                                    mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "부가축 용접 후 직선용접 시작 위치를 교시해주세요."+".MP3"));
                                    mMediaPlayer->play();
                                    }
                            }
                            if(welding_data[i].sub_option == WEL_CMD_MOVE_PRO_C && welding_data[i].command_option == WEL_CMD_MOVE_L)
                            {
                                ui->LB_B_1->setText("부가축 용접 후 곡선용접 시작위치를 교시해주세요.");
                                    if(data_sound == 1)
                                    {
                                    mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "부가축 용접 후 곡선용접 시작위치를 교시해주세요."+".MP3"));
                                    mMediaPlayer->play();
                                    }
                            }
                            if(welding_data[i].sub_option == WEL_CMD_MOVE_PRO_C_CONVERT && welding_data[i].command_option == WEL_CMD_MOVE_L)
                            {
                                ui->LB_B_1->setText("부가축 용접 후 전환곡선용접 시작위치를 교시해주세요.");
                                    if(data_sound == 1)
                                    {
                                    mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "부가축 용접 후 전환곡선용접 시작위치를 교시해주세요."+".MP3"));
                                    mMediaPlayer->play();
                                    }
                            }
                            if(welding_data[i].sub_option == WEL_CMD_WEAVING_L && welding_data[i].command_option == WEL_CMD_MOVE_L)
                            {
                                ui->LB_B_1->setText("부가축 용접 후 위빙직선용접 시작위치를 교시해주세요.");
                                    if(data_sound == 1)
                                    {
                                    mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "부가축 용접 후 위빙직선용접 시작위치를 교시해주세요."+".MP3"));
                                    mMediaPlayer->play();
                                    }

                            }
                            if(welding_data[i].sub_option != WEL_CMD_MOVE_PRO_L && welding_data[i].sub_option != WEL_CMD_MOVE_PRO_C && welding_data[i].sub_option != WEL_CMD_MOVE_PRO_C_CONVERT && welding_data[i].sub_option != WEL_CMD_WEAVING_L && welding_data[i].command_option == WEL_CMD_MOVE_L)
                            {
                                ui->LB_B_1->setText("부가축 용접 후 직선이동 위치를 교시해주세요.");
                                    if(data_sound == 1)
                                    {
                                    mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "부가축 용접 후 직선이동 위치를 교시해주세요."+".MP3"));
                                    mMediaPlayer->play();
                                    }
                            }
                            if(welding_data[i].command_option == WEL_CMD_MOVE_J)
                            {
                                ui->LB_B_1->setText("부가축 용접 후 자유이동 위치를 교시해주세요.");
                                    if(data_sound == 1)
                                    {
                                    mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "부가축 용접 후 자유이동 위치를 교시해주세요."+".MP3"));
                                    mMediaPlayer->play();
                                    }
                            }
                            if(welding_data[i].command_option == WEL_CMD_WAIT_DIN || welding_data[i].command_option == WEL_CMD_WAIT_TIME)
                            {
                                ui->LB_B_1->setText("부가축 용접 후 대기 위치를 교시해주세요.");
                                    if(data_sound == 1)
                                    {
                                    mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "부가축 용접 후 대기 위치를 교시해주세요."+".MP3"));
                                    mMediaPlayer->play();
                                    }
                            }
                            if(welding_data[i].command_option == WEL_CMD_ONEPOINT_WELD){
                                if(welding_data[i+1].command_option !=WEL_CMD_ONEPOINT_WELD){
                                    ui->LB_B_1->setText("부가축 용접 종료 위치를 교시해주세요.");
                                        if(data_sound == 1)
                                        {
                                        mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "부가축 용접 종료 위치를 교시해주세요."+".MP3"));
                                        mMediaPlayer->play();
                                        }
                                }else{
                                    ui->LB_B_1->setText("다음 부가축 용접 위치를 교시해주세요.");
                                        if(data_sound == 1)
                                        {
                                        mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "다음 부가축 용접 위치를 교시해주세요."+".MP3"));
                                        mMediaPlayer->play();
                                        }
                                }

                            }
                        }
                    }
                    //
                    //
                    //
                    // 전 o , 후 x
                    if(welding_data[i-1].command_option != WEL_CMD_INIT_L && welding_data[i+1].command_option == WEL_CMD_FINAL_L)
                    {
                        if(welding_data[i-1].command_option == WEL_CMD_GAJUB)
                        {
                            if(welding_data[i].command_option == WEL_CMD_GAJUB)
                            {
                                ui->LB_B_1->setText("가접용접 후 가접용접 위치를 교시해주세요.");
                                if(data_sound == 1)
                                {
                                mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "가접용접 후 가접용접 위치를 교시해주세요."+".MP3"));
                                mMediaPlayer->play();
                                }
                            }
                            if(welding_data[i].sub_option != WEL_CMD_MOVE_PRO_L && welding_data[i].sub_option != WEL_CMD_MOVE_PRO_C && welding_data[i].sub_option != WEL_CMD_MOVE_PRO_C_CONVERT && welding_data[i].sub_option != WEL_CMD_WEAVING_L && welding_data[i].command_option == WEL_CMD_MOVE_L)
                            {
                                ui->LB_B_1->setText("가접용접 후 직선이동 위치를 교시해주세요.");
                                if(data_sound == 1)
                                {
                                mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "가접용접 후 직선이동 위치를 교시해주세요."+".MP3"));
                                mMediaPlayer->play();
                                }
                            }
                            if(welding_data[i].command_option == WEL_CMD_MOVE_J)
                            {
                                ui->LB_B_1->setText("가접용접 후 자유이동 위치를 교시해주세요.");
                                    if(data_sound == 1)
                                    {
                                    mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "가접용접 후 자유이동 위치를 교시해주세요."+".MP3"));
                                    mMediaPlayer->play();
                                    }
                            }
                            if(welding_data[i].command_option == WEL_CMD_WAIT_DIN || welding_data[i].command_option == WEL_CMD_WAIT_TIME)
                            {
                                ui->LB_B_1->setText("가접용접 후 대기 위치를 교시해주세요.");
                                    if(data_sound == 1)
                                    {
                                    mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "가접용접 후 대기 위치를 교시해주세요."+".MP3"));
                                    mMediaPlayer->play();
                                    }
                            }
                            if(welding_data[i].command_option == WEL_CMD_ONEPOINT_WELD)
                            {
                                ui->LB_B_1->setText("가접용접 후 부가축 용접 위치를 교시해주세요.");
                                    if(data_sound == 1)
                                    {
                                    mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "가접용접 후 부가축 용접 위치를 교시해주세요."+".MP3"));
                                    mMediaPlayer->play();
                                    }
                            }


                        }
                        if(welding_data[i-1].sub_option == WEL_CMD_MOVE_PRO_L)
                        {
                            if(welding_data[i].command_option == WEL_CMD_GAJUB)
                            {
                                ui->LB_B_1->setText("직선용접 후 가접용접 위치를 교시해주세요.");
                                    if(data_sound == 1)
                                    {
                                    mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "직선용접 후 가접용접 위치를 교시해주세요."+".MP3"));
                                    mMediaPlayer->play();
                                    }
                            }
                            if(welding_data[i].sub_option == WEL_CMD_MOVE_PRO_L)
                            {
                                ui->LB_B_1->setText("직선용접 종료 위치를 교시해주세요.");
                                    if(data_sound == 1)
                                    {
                                    mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "직선용접 종료 위치를 교시해주세요."+".MP3"));
                                    mMediaPlayer->play();
                                    }
                            }
                            if(welding_data[i].sub_option != WEL_CMD_MOVE_PRO_L && welding_data[i].sub_option != WEL_CMD_MOVE_PRO_C && welding_data[i].sub_option != WEL_CMD_MOVE_PRO_C_CONVERT && welding_data[i].sub_option != WEL_CMD_WEAVING_L && welding_data[i].command_option == WEL_CMD_MOVE_L)
                            {
                                ui->LB_B_1->setText("직선용접 후 직선이동 위치를 교시해주세요.");
                                    if(data_sound == 1)
                                    {
                                    mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "직선용접 후 직선이동 위치를 교시해주세요."+".MP3"));
                                    mMediaPlayer->play();
                                    }
                            }
                            if(welding_data[i].command_option == WEL_CMD_MOVE_J)
                            {
                                ui->LB_B_1->setText("직선용접 후 자유이동 위치를 교시해주세요.");
                                    if(data_sound == 1)
                                    {
                                    mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "직선용접 후 자유이동 위치를 교시해주세요."+".MP3"));
                                    mMediaPlayer->play();
                                    }
                            }
                            if(welding_data[i].command_option == WEL_CMD_WAIT_DIN || welding_data[i].command_option == WEL_CMD_WAIT_TIME)
                            {
                                ui->LB_B_1->setText("직선용접 후 대기 위치를 교시해주세요.");
                                    if(data_sound == 1)
                                    {
                                    mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "직선용접 후 대기 위치를 교시해주세요."+".MP3"));
                                    mMediaPlayer->play();
                                    }
                            }
                            if(welding_data[i].command_option == WEL_CMD_ONEPOINT_WELD)
                            {
                                ui->LB_B_1->setText("직선용접 후 부가축 용접 위치를 교시해주세요.");
                                    if(data_sound == 1)
                                    {
                                    mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "직선용접 후 부가축 용접 위치를 교시해주세요."+".MP3"));
                                    mMediaPlayer->play();
                                    }
                            }
                        }
                        if(welding_data[i-1].sub_option == WEL_CMD_MOVE_PRO_C)
                        {
                            if(welding_data[i].command_option == WEL_CMD_GAJUB)
                            {
                                ui->LB_B_1->setText("곡선용접 후 가접용접 위치를 교시해주세요.");
                                    if(data_sound == 1)
                                    {
                                    mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "곡선용접 후 가접용접 위치를 교시해주세요."+".MP3"));
                                    mMediaPlayer->play();
                                    }
                            }
                            if(welding_data[i].sub_option == WEL_CMD_MOVE_PRO_L)
                            {
                                ui->LB_B_1->setText("곡선용접 후 직선용접 종료 위치를 교시해주세요.");
                                    if(data_sound == 1)
                                    {
                                    mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "곡선용접 후 직선용접 종료 위치를 교시해주세요."+".MP3"));
                                    mMediaPlayer->play();
                                    }
                            }
                            if(welding_data[i].sub_option == WEL_CMD_MOVE_PRO_C)
                            {
                                ui->LB_B_1->setText("곡선용접 종료 위치를 교시해주세요.");
                                    if(data_sound == 1)
                                    {
                                    mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "곡선용접 종료 위치를 교시해주세요."+".MP3"));
                                    mMediaPlayer->play();
                                    }
                            }
                            if(welding_data[i].sub_option == WEL_CMD_MOVE_PRO_C_CONVERT)
                            {
                                ui->LB_B_1->setText("전환곡선용접 종료 위치를 교시해주세요.");
                                    if(data_sound == 1)
                                    {
                                    mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "전환곡선용접 종료 위치를 교시해주세요."+".MP3"));
                                    mMediaPlayer->play();
                                    }
                            }
                            if(welding_data[i].sub_option != WEL_CMD_MOVE_PRO_L && welding_data[i].sub_option != WEL_CMD_MOVE_PRO_C && welding_data[i].sub_option != WEL_CMD_MOVE_PRO_C_CONVERT && welding_data[i].sub_option != WEL_CMD_WEAVING_L && welding_data[i].command_option == WEL_CMD_MOVE_L)
                            {
                                ui->LB_B_1->setText("곡선용접 후 직선이동 위치를 교시해주세요.");
                                    if(data_sound == 1)
                                    {
                                    mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "곡선용접 후 직선이동 위치를 교시해주세요."+".MP3"));
                                    mMediaPlayer->play();
                                    }
                            }
                            if(welding_data[i].command_option == WEL_CMD_MOVE_J)
                            {
                                ui->LB_B_1->setText("곡선용접 후 자유이동 위치를 교시해주세요.");
                                    if(data_sound == 1)
                                    {
                                    mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "곡선용접 후 자유이동 위치를 교시해주세요."+".MP3"));
                                    mMediaPlayer->play();
                                    }
                            }
                            if(welding_data[i].command_option == WEL_CMD_WAIT_DIN || welding_data[i].command_option == WEL_CMD_WAIT_TIME)
                            {
                                ui->LB_B_1->setText("곡선용접 후 대기 위치를 교시해주세요.");
                                    if(data_sound == 1)
                                    {
                                    mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "곡선용접 후 대기 위치를 교시해주세요."+".MP3"));
                                    mMediaPlayer->play();
                                    }
                            }
                            if(welding_data[i].command_option == WEL_CMD_ONEPOINT_WELD)
                            {
                                ui->LB_B_1->setText("곡선용접 후 부가축 용접 위치를 교시해주세요.");
                                    if(data_sound == 1)
                                    {
                                    mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "곡선용접 후 부가축 용접 위치를 교시해주세요."+".MP3"));
                                    mMediaPlayer->play();
                                    }
                            }
                        }
                        if(welding_data[i-1].sub_option == WEL_CMD_MOVE_PRO_C_CONVERT)
                        {
                            if(welding_data[i].command_option == WEL_CMD_GAJUB)
                            {
                                ui->LB_B_1->setText("전환곡선용접 후 대기 위치를 교시해주세요.");
                                    if(data_sound == 1)
                                    {
                                    mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "전환곡선용접 후 가접용접 위치를 교시해주세요."+".MP3"));
                                    mMediaPlayer->play();
                                    }
                            }
                            if(welding_data[i].sub_option == WEL_CMD_MOVE_PRO_L)
                            {
                                ui->LB_B_1->setText("전환곡선용접 후 직선용접 종료 위치를 교시해주세요.");
                                    if(data_sound == 1)
                                    {
                                    mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "전환곡선용접 후 직선용접 종료 위치를 교시해주세요."+".MP3"));
                                    mMediaPlayer->play();
                                    }
                            }
                            if(welding_data[i].sub_option == WEL_CMD_MOVE_PRO_C)
                            {
                                ui->LB_B_1->setText("곡선용접 종료 위치를 교시해주세요.");
                                    if(data_sound == 1)
                                    {
                                    mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "곡선용접 종료 위치를 교시해주세요."+".MP3"));
                                    mMediaPlayer->play();
                                    }
                            }
                            if(welding_data[i].sub_option == WEL_CMD_MOVE_PRO_C_CONVERT)
                            {
                                ui->LB_B_1->setText("전환곡선용접 종료 위치를 교시해주세요.");
                                    if(data_sound == 1)
                                    {
                                    mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "전환곡선용접 종료 위치를 교시해주세요."+".MP3"));
                                    mMediaPlayer->play();
                                    }
                            }

                            if(welding_data[i].sub_option != WEL_CMD_MOVE_PRO_L && welding_data[i].sub_option != WEL_CMD_MOVE_PRO_C && welding_data[i].sub_option != WEL_CMD_MOVE_PRO_C_CONVERT && welding_data[i].sub_option != WEL_CMD_WEAVING_L && welding_data[i].command_option == WEL_CMD_MOVE_L)
                            {
                                ui->LB_B_1->setText("전환곡선용접 후 직선이동 위치를 교시해주세요.");
                                    if(data_sound == 1)
                                    {
                                    mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "전환곡선용접 후 직선이동 위치를 교시해주세요."+".MP3"));
                                    mMediaPlayer->play();
                                    }
                            }
                            if(welding_data[i].command_option == WEL_CMD_MOVE_J)
                            {
                                ui->LB_B_1->setText("전환곡선용접 후 자유이동 위치를 교시해주세요.");
                                    if(data_sound == 1)
                                    {
                                    mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "전환곡선용접 후 자유이동 위치를 교시해주세요."+".MP3"));
                                    mMediaPlayer->play();
                                    }
                            }
                            if(welding_data[i].command_option == WEL_CMD_WAIT_DIN || welding_data[i].command_option == WEL_CMD_WAIT_TIME)
                            {
                                ui->LB_B_1->setText("전환곡선용접 후 대기 위치를 교시해주세요.");
                                    if(data_sound == 1)
                                    {
                                    mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "전환곡선용접 후 대기 위치를 교시해주세요."+".MP3"));
                                    mMediaPlayer->play();
                                    }
                            }
                            if(welding_data[i].command_option == WEL_CMD_ONEPOINT_WELD)
                            {
                                ui->LB_B_1->setText("전환곡선용접 후 부가축 용접 위치를 교시해주세요.");
                                    if(data_sound == 1)
                                    {
                                    mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "전환곡선용접 후 부가축 용접 위치를 교시해주세요."+".MP3"));
                                    mMediaPlayer->play();
                                    }
                            }
                        }
                        if(welding_data[i-1].command_option == WEL_CMD_WEAVING_L_REF_2)
                        {
                            if(welding_data[i].sub_option == WEL_CMD_WEAVING_L)
                            {
                                ui->LB_B_1->setText("위빙직선용접 종료위치를 교시해주세요.");
                                if(data_sound == 1)
                                {
                                mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "위빙직선용접 종료위치를 교시해주세요."+".MP3"));
                                mMediaPlayer->play();
                                }
                            }
                        }
                        if(welding_data[i-1].sub_option == WEL_CMD_WEAVING_L)
                        {
                            if(welding_data[i].command_option == WEL_CMD_GAJUB)
                            {
                                ui->LB_B_1->setText("위빙직선용접 후 가접용접 위치를 교시해주세요.");
                                    if(data_sound == 1)
                                    {
                                    mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "위빙직선용접 후 가접용접 위치를 교시해주세요."+".MP3"));
                                    mMediaPlayer->play();
                                    }
                            }
                            if(welding_data[i].sub_option == WEL_CMD_MOVE_PRO_L)
                            {
                                ui->LB_B_1->setText("위빙직선용접 후 직선용접 종료 위치를 교시해주세요.");
                                    if(data_sound == 1)
                                    {
                                    mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "위빙직선용접 후 직선용접 종료 위치를 교시해주세요."+".MP3"));
                                    mMediaPlayer->play();
                                    }
                            }
                            if(welding_data[i].sub_option != WEL_CMD_MOVE_PRO_L && welding_data[i].sub_option != WEL_CMD_MOVE_PRO_C && welding_data[i].sub_option != WEL_CMD_MOVE_PRO_C_CONVERT && welding_data[i].sub_option != WEL_CMD_WEAVING_L && welding_data[i].command_option == WEL_CMD_MOVE_L)
                            {
                                ui->LB_B_1->setText("위빙직선용접 후 직선이동 위치를 교시해주세요.");
                                    if(data_sound == 1)
                                    {
                                    mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "위빙직선용접 후 직선이동 위치를 교시해주세요."+".MP3"));
                                    mMediaPlayer->play();
                                    }
                            }
                            if(welding_data[i].command_option == WEL_CMD_MOVE_J)
                            {
                                ui->LB_B_1->setText("위빙직선용접 후 자유이동 위치를 교시해주세요.");
                                    if(data_sound == 1)
                                    {
                                    mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "위빙직선용접 후 자유이동 위치를 교시해주세요."+".MP3"));
                                    mMediaPlayer->play();
                                    }
                            }
                            if(welding_data[i].command_option == WEL_CMD_WAIT_DIN || welding_data[i].command_option == WEL_CMD_WAIT_TIME)
                            {
                                ui->LB_B_1->setText("위빙직선용접 후 대기 위치를 교시해주세요.");
                                    if(data_sound == 1)
                                    {
                                    mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "위빙직선용접 후 대기 위치를 교시해주세요."+".MP3"));
                                    mMediaPlayer->play();
                                    }
                            }
                            if(welding_data[i].command_option == WEL_CMD_ONEPOINT_WELD)
                            {
                                ui->LB_B_1->setText("위빙직선용접 후 부가축 용접 위치를 교시해주세요.");
                                    if(data_sound == 1)
                                    {
                                    mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "위빙직선용접 후 부가축 용접 위치를 교시해주세요."+".MP3"));
                                    mMediaPlayer->play();
                                    }
                            }
                        }
                        if(welding_data[i-1].sub_option != WEL_CMD_MOVE_PRO_L && welding_data[i-1].sub_option != WEL_CMD_MOVE_PRO_C && welding_data[i-1].sub_option != WEL_CMD_MOVE_PRO_C_CONVERT && welding_data[i-1].sub_option != WEL_CMD_WEAVING_L && welding_data[i-1].command_option == WEL_CMD_MOVE_L)
                        {
                            if(welding_data[i].command_option == WEL_CMD_GAJUB)
                            {
                                ui->LB_B_1->setText("직선이동 후 가접용접 위치를 교시해주세요.");
                                    if(data_sound == 1)
                                    {
                                    mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "직선이동 후 가접용접 위치를 교시해주세요."+".MP3"));
                                    mMediaPlayer->play();
                                    }
                            }
                            if(welding_data[i].sub_option != WEL_CMD_MOVE_PRO_L && welding_data[i].sub_option != WEL_CMD_MOVE_PRO_C && welding_data[i].sub_option != WEL_CMD_MOVE_PRO_C_CONVERT && welding_data[i].sub_option != WEL_CMD_WEAVING_L && welding_data[i].command_option == WEL_CMD_MOVE_L)
                            {
                                ui->LB_B_1->setText("다음 직선이동 위치를 교시해주세요.");
                                    if(data_sound == 1)
                                    {
                                    mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "다음 직선이동 위치를 교시해주세요."+".MP3"));
                                    mMediaPlayer->play();
                                    }
                            }
                            if(welding_data[i].command_option == WEL_CMD_MOVE_J)
                            {
                                ui->LB_B_1->setText("직선이동 후 자유이동 위치를 교시해주세요.");
                                    if(data_sound == 1)
                                    {
                                    mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "직선이동 후 자유이동 위치를 교시해주세요."+".MP3"));
                                    mMediaPlayer->play();
                                    }
                            }
                            if(welding_data[i].command_option == WEL_CMD_WAIT_DIN || welding_data[i].command_option == WEL_CMD_WAIT_TIME)
                            {
                                ui->LB_B_1->setText("직선이동 후 대기 위치를 교시해주세요.");
                                    if(data_sound == 1)
                                    {
                                    mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "직선이동 후 대기 위치를 교시해주세요."+".MP3"));
                                    mMediaPlayer->play();
                                    }
                            }
                            if(welding_data[i].command_option == WEL_CMD_ONEPOINT_WELD)
                            {
                                ui->LB_B_1->setText("직선이동 후 부가축 용접 위치를 교시해주세요.");
                                    if(data_sound == 1)
                                    {
                                    mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "직선이동 후 부가축 용접 위치를 교시해주세요."+".MP3"));
                                    mMediaPlayer->play();
                                    }
                            }
                        }
                        if(welding_data[i-1].command_option == WEL_CMD_MOVE_J)
                        {
                            if(welding_data[i].command_option == WEL_CMD_GAJUB)
                            {
                                ui->LB_B_1->setText("자유이동 후 가접용접 위치를 교시해주세요.");
                                    if(data_sound == 1)
                                    {
                                    mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "자유이동 후 가접용접 위치를 교시해주세요."+".MP3"));
                                    mMediaPlayer->play();
                                    }
                            }
                            if(welding_data[i].sub_option != WEL_CMD_MOVE_PRO_L && welding_data[i].sub_option != WEL_CMD_MOVE_PRO_C && welding_data[i].sub_option != WEL_CMD_MOVE_PRO_C_CONVERT && welding_data[i].sub_option != WEL_CMD_WEAVING_L && welding_data[i].command_option == WEL_CMD_MOVE_L)
                            {
                                ui->LB_B_1->setText("자유이동 후 직선이동 위치를 교시해주세요.");
                                    if(data_sound == 1)
                                    {
                                    mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "자유이동 후 직선이동 위치를 교시해주세요."+".MP3"));
                                    mMediaPlayer->play();
                                    }
                            }
                            if(welding_data[i].command_option == WEL_CMD_MOVE_J)
                            {
                                ui->LB_B_1->setText("다음 자유이동 위치를 교시해주세요.");
                                    if(data_sound == 1)
                                    {
                                    mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "다음 자유이동 위치를 교시해주세요."+".MP3"));
                                    mMediaPlayer->play();
                                    }
                            }
                            if(welding_data[i].command_option == WEL_CMD_WAIT_DIN || welding_data[i].command_option == WEL_CMD_WAIT_TIME)
                            {
                                ui->LB_B_1->setText("자유이동 후 대기 위치를 교시해주세요.");
                                    if(data_sound == 1)
                                    {
                                    mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "자유이동 후 대기 위치를 교시해주세요."+".MP3"));
                                    mMediaPlayer->play();
                                    }
                            }
                            if(welding_data[i].command_option == WEL_CMD_ONEPOINT_WELD)
                            {
                                ui->LB_B_1->setText("자유이동 후 부가축 용접 위치를 교시해주세요.");
                                    if(data_sound == 1)
                                    {
                                    mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "자유이동 후 부가축 용접 위치를 교시해주세요."+".MP3"));
                                    mMediaPlayer->play();
                                    }
                            }
                        }
                        if(welding_data[i-1].command_option == WEL_CMD_WAIT_DIN || welding_data[i].command_option == WEL_CMD_WAIT_TIME)
                        {
                            if(welding_data[i].command_option == WEL_CMD_GAJUB)
                            {
                                ui->LB_B_1->setText("대기 후 가접용접 위치를 교시해주세요.");
                                    if(data_sound == 1)
                                    {
                                    mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "대기 후 가접용접 위치를 교시해주세요."+".MP3"));
                                    mMediaPlayer->play();
                                    }
                            }
                            if(welding_data[i].sub_option != WEL_CMD_MOVE_PRO_L && welding_data[i].sub_option != WEL_CMD_MOVE_PRO_C && welding_data[i].sub_option != WEL_CMD_MOVE_PRO_C_CONVERT && welding_data[i].sub_option != WEL_CMD_WEAVING_L && welding_data[i].command_option == WEL_CMD_MOVE_L)
                            {
                                ui->LB_B_1->setText("대기 후 직선이동 위치를 교시해주세요.");
                                    if(data_sound == 1)
                                    {
                                    mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "대기 후 직선이동 위치를 교시해주세요."+".MP3"));
                                    mMediaPlayer->play();
                                    }
                            }
                            if(welding_data[i].command_option == WEL_CMD_MOVE_J)
                            {
                                ui->LB_B_1->setText("대기 후 자유이동 위치를 교시해주세요.");
                                    if(data_sound == 1)
                                    {
                                    mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "대기 후 자유이동 위치를 교시해주세요."+".MP3"));
                                    mMediaPlayer->play();
                                    }
                            }
                            if(welding_data[i].command_option == WEL_CMD_WAIT_DIN || welding_data[i].command_option == WEL_CMD_WAIT_TIME)
                            {
                                ui->LB_B_1->setText("다음 대기 위치를 교시해주세요.");
                                    if(data_sound == 1)
                                    {
                                    mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "다음 대기 위치를 교시해주세요."+".MP3"));
                                    mMediaPlayer->play();
                                    }
                            }
                            if(welding_data[i].command_option == WEL_CMD_ONEPOINT_WELD)
                            {
                                ui->LB_B_1->setText("대기 후 부가축 용접 위치를 교시해주세요.");
                                    if(data_sound == 1)
                                    {
                                    mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "대기 후 부가축 용접 위치를 교시해주세요."+".MP3"));
                                    mMediaPlayer->play();
                                    }
                            }
                        }
                        if(welding_data[i-1].command_option == WEL_CMD_ONEPOINT_WELD)
                        {
                            if(welding_data[i].command_option == WEL_CMD_GAJUB)
                            {
                                ui->LB_B_1->setText("부가축 용접 후 가접용접 위치를 교시해주세요.");
                                if(data_sound == 1)
                                {
                                mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "부가축 용접 후 가접용접 위치를 교시해주세요."+".MP3"));
                                mMediaPlayer->play();
                                }
                            }
                            if(welding_data[i].sub_option != WEL_CMD_MOVE_PRO_L && welding_data[i].sub_option != WEL_CMD_MOVE_PRO_C && welding_data[i].sub_option != WEL_CMD_MOVE_PRO_C_CONVERT && welding_data[i].sub_option != WEL_CMD_WEAVING_L && welding_data[i].command_option == WEL_CMD_MOVE_L)
                            {
                                ui->LB_B_1->setText("부가축 용접 후 직선이동 위치를 교시해주세요.");
                                if(data_sound == 1)
                                {
                                mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "부가축 용접 후 직선이동 위치를 교시해주세요."+".MP3"));
                                mMediaPlayer->play();
                                }
                            }
                            if(welding_data[i].command_option == WEL_CMD_MOVE_J)
                            {
                                ui->LB_B_1->setText("부가축 용접 후 자유이동 위치를 교시해주세요.");
                                    if(data_sound == 1)
                                    {
                                    mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "부가축 용접 후 자유이동 위치를 교시해주세요."+".MP3"));
                                    mMediaPlayer->play();
                                    }
                            }
                            if(welding_data[i].command_option == WEL_CMD_WAIT_DIN || welding_data[i].command_option == WEL_CMD_WAIT_TIME)
                            {
                                ui->LB_B_1->setText("부가축 용접 후 대기 위치를 교시해주세요.");
                                    if(data_sound == 1)
                                    {
                                    mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "부가축 용접 후 대기 위치를 교시해주세요."+".MP3"));
                                    mMediaPlayer->play();
                                    }
                            }
                            if(welding_data[i].command_option == WEL_CMD_ONEPOINT_WELD)
                            {
                                ui->LB_B_1->setText("부가축 용접 종료 위치를 교시해주세요.");
                                    if(data_sound == 1)
                                    {
                                    mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "부가축 용접 종료 위치를 교시해주세요."+".MP3"));
                                    mMediaPlayer->play();
                                    }
                            }

                        }

                    }
                    //
                    //
                    //
                }
                if(welding_data[i].command_option == WEL_CMD_FINAL_L){
                    ui->LB_B_1->setText("작업완료 후 회피 위치를 교시해주세요.");
                        if(data_sound == 1)
                        {
                            mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "작업완료 후 회피 위치를 교시해주세요."+".mp3"));
                            mMediaPlayer->play();
                        }
                }
                //
                //
                //
                if(welding_data[i].command_option == WEL_CMD_FINAL_J){
                    ui->LB_B_1->setText("작업종료 위치를 교시해주세요.");
                        if(data_sound == 1)
                        {
                            mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "작업종료 위치를 교시해주세요."+".mp3"));
                            mMediaPlayer->play();
                        }
                }
                //
                //
                //
                is_teaching = 1;
            }else{
                item_is_set = new QTableWidgetItem("설정 안됨");
            }
            if(welding_data[i].command_option == WEL_CMD_INIT_J || welding_data[i].command_option == WEL_CMD_MOVE_J || welding_data[i].command_option == WEL_CMD_FINAL_J){
                // joint move
                item_axis_0 = new QTableWidgetItem(QString().sprintf("%.3f", welding_data[i].joint[0]));
                item_axis_1 = new QTableWidgetItem(QString().sprintf("%.3f", welding_data[i].joint[1]));
                item_axis_2 = new QTableWidgetItem(QString().sprintf("%.3f", welding_data[i].joint[2]));
                item_axis_3 = new QTableWidgetItem(QString().sprintf("%.3f", welding_data[i].joint[3]));
                item_axis_4 = new QTableWidgetItem(QString().sprintf("%.3f", welding_data[i].joint[4]));
                item_axis_5 = new QTableWidgetItem(QString().sprintf("%.3f", welding_data[i].joint[5]));
            }else{
                // linear move
                item_axis_0 = new QTableWidgetItem(QString().sprintf("%.3f", welding_data[i].tcp[0]));
                item_axis_1 = new QTableWidgetItem(QString().sprintf("%.3f", welding_data[i].tcp[1]));
                item_axis_2 = new QTableWidgetItem(QString().sprintf("%.3f", welding_data[i].tcp[2]));
                item_axis_3 = new QTableWidgetItem(QString().sprintf("%.3f", welding_data[i].tcp[3]));
                item_axis_4 = new QTableWidgetItem(QString().sprintf("%.3f", welding_data[i].tcp[4]));
                item_axis_5 = new QTableWidgetItem(QString().sprintf("%.3f", welding_data[i].tcp[5]));
            }

        }else{
            item_is_set = new QTableWidgetItem("설정 완료");
            if(welding_data[i].command_option == WEL_CMD_INIT_J || welding_data[i].command_option == WEL_CMD_MOVE_J || welding_data[i].command_option == WEL_CMD_FINAL_J){
                // joint move
                item_axis_0 = new QTableWidgetItem(QString().sprintf("%.3f", welding_data[i].joint[0]));
                item_axis_1 = new QTableWidgetItem(QString().sprintf("%.3f", welding_data[i].joint[1]));
                item_axis_2 = new QTableWidgetItem(QString().sprintf("%.3f", welding_data[i].joint[2]));
                item_axis_3 = new QTableWidgetItem(QString().sprintf("%.3f", welding_data[i].joint[3]));
                item_axis_4 = new QTableWidgetItem(QString().sprintf("%.3f", welding_data[i].joint[4]));
                item_axis_5 = new QTableWidgetItem(QString().sprintf("%.3f", welding_data[i].joint[5]));
            }else{
                // linear move
                item_axis_0 = new QTableWidgetItem(QString().sprintf("%.3f", welding_data[i].tcp[0]));
                item_axis_1 = new QTableWidgetItem(QString().sprintf("%.3f", welding_data[i].tcp[1]));
                item_axis_2 = new QTableWidgetItem(QString().sprintf("%.3f", welding_data[i].tcp[2]));
                item_axis_3 = new QTableWidgetItem(QString().sprintf("%.3f", welding_data[i].tcp[3]));
                item_axis_4 = new QTableWidgetItem(QString().sprintf("%.3f", welding_data[i].tcp[4]));
                item_axis_5 = new QTableWidgetItem(QString().sprintf("%.3f", welding_data[i].tcp[5]));
            }
        }
        if(data_axis7 == 1){
            item_a_axis_0 = new QTableWidgetItem(QString().sprintf("%.3f", welding_data[i].a_axis_para[0]));
        }else{
            item_a_axis_0 = new QTableWidgetItem("0.0");
        }
        if(data_axis8 == 1){
            item_a_axis_1 = new QTableWidgetItem(QString().sprintf("%.3f", welding_data[i].a_axis_para[1]));
        }else{
            item_a_axis_1 = new QTableWidgetItem("0.0");
        }
        if(data_axis9 == 1){
            item_a_axis_2 = new QTableWidgetItem(QString().sprintf("%.3f", welding_data[i].a_axis_para[2]));
        }else{
            item_a_axis_2 = new QTableWidgetItem("0.0");
        }
        item_persent = new QTableWidgetItem(QString().sprintf("%.3f",welding_data[i].w_persent));
        item_xx = new QTableWidgetItem(QString().sprintf("%.3f",welding_data[i].xx));
        item_yy = new QTableWidgetItem(QString().sprintf("%.3f",welding_data[i].yy));
        item_zz = new QTableWidgetItem(QString().sprintf("%.3f",welding_data[i].zz));
        item_current = new QTableWidgetItem(QString().sprintf("%.3f",welding_data[i].current));
        item_voltage = new QTableWidgetItem(QString().sprintf("%.3f",welding_data[i].voltage));
        item_speed = new QTableWidgetItem(QString().sprintf("%.3f",welding_data[i].vel));
        item_time = new QTableWidgetItem(QString().sprintf("%.3f",welding_data[i].wait_time));
        item_weaving_num = new QTableWidgetItem(QString().sprintf("%.3f",welding_data[i].weaving_para[0]));
        item_weaving_time = new QTableWidgetItem(QString().sprintf("%.3f",welding_data[i].weaving_para[1]));
        item_weaving_amp = new QTableWidgetItem(QString().sprintf("%.3f",welding_data[i].weaving_para[2]));
        item_on_current = new QTableWidgetItem(QString().sprintf("%.3f",welding_data[i].arc_on_para[0]));
        item_on_voltage = new QTableWidgetItem(QString().sprintf("%.3f",welding_data[i].arc_on_para[1]));
        item_on_time = new QTableWidgetItem(QString().sprintf("%.3f",welding_data[i].arc_on_para[2]));
        item_off_current = new QTableWidgetItem(QString().sprintf("%.3f",welding_data[i].arc_off_para[0]));
        item_off_voltage = new QTableWidgetItem(QString().sprintf("%.3f",welding_data[i].arc_off_para[1]));
        item_off_time = new QTableWidgetItem(QString().sprintf("%.3f",welding_data[i].arc_off_para[2]));
        item_wire = new QTableWidgetItem(QString().sprintf("%.3f",welding_data[i].wire_para[0]));

        ui->TW_10->setItem(i, 0, item_func);
        ui->TW_10->item(i,0)->setTextAlignment(Qt::AlignCenter);
        ui->TW_10->setItem(i, 1, item_is_set);
        ui->TW_10->item(i,1)->setTextAlignment(Qt::AlignCenter);
        ui->TW_10->setItem(i, 2, item_axis_0);
        ui->TW_10->item(i,2)->setTextAlignment(Qt::AlignCenter);
        ui->TW_10->setItem(i, 3, item_axis_1);
        ui->TW_10->item(i,3)->setTextAlignment(Qt::AlignCenter);
        ui->TW_10->setItem(i, 4, item_axis_2);
        ui->TW_10->item(i,4)->setTextAlignment(Qt::AlignCenter);
        ui->TW_10->setItem(i, 5, item_axis_3);
        ui->TW_10->item(i,5)->setTextAlignment(Qt::AlignCenter);
        ui->TW_10->setItem(i, 6, item_axis_4);
        ui->TW_10->item(i,6)->setTextAlignment(Qt::AlignCenter);
        ui->TW_10->setItem(i, 7, item_axis_5);
        ui->TW_10->item(i,7)->setTextAlignment(Qt::AlignCenter);
        ui->TW_10->setItem(i, 8, item_a_axis_0);
        ui->TW_10->item(i,8)->setTextAlignment(Qt::AlignCenter);
        ui->TW_10->setItem(i, 9, item_a_axis_1);
        ui->TW_10->item(i,9)->setTextAlignment(Qt::AlignCenter);
        ui->TW_10->setItem(i, 10, item_a_axis_2);
        ui->TW_10->item(i,10)->setTextAlignment(Qt::AlignCenter);
        ui->TW_10->setItem(i, 11, item_persent);
        ui->TW_10->item(i,11)->setTextAlignment(Qt::AlignCenter);
        ui->TW_10->setItem(i, 12, item_xx);
        ui->TW_10->item(i,12)->setTextAlignment(Qt::AlignCenter);
        ui->TW_10->setItem(i, 13, item_yy);
        ui->TW_10->item(i,13)->setTextAlignment(Qt::AlignCenter);
        ui->TW_10->setItem(i, 14, item_zz);
        ui->TW_10->item(i,14)->setTextAlignment(Qt::AlignCenter);
        ui->TW_10->setItem(i, 15, item_current);
        ui->TW_10->item(i,15)->setTextAlignment(Qt::AlignCenter);
        ui->TW_10->setItem(i, 16, item_voltage);
        ui->TW_10->item(i,16)->setTextAlignment(Qt::AlignCenter);
        ui->TW_10->setItem(i, 17, item_speed);
        ui->TW_10->item(i,17)->setTextAlignment(Qt::AlignCenter);
        ui->TW_10->setItem(i, 18, item_time);
        ui->TW_10->item(i,18)->setTextAlignment(Qt::AlignCenter);
        ui->TW_10->setItem(i, 19, item_weaving_num);
        ui->TW_10->item(i,19)->setTextAlignment(Qt::AlignCenter);
        ui->TW_10->setItem(i, 20, item_weaving_time);
        ui->TW_10->item(i,20)->setTextAlignment(Qt::AlignCenter);
        ui->TW_10->setItem(i, 21, item_weaving_amp);
        ui->TW_10->item(i,21)->setTextAlignment(Qt::AlignCenter);
        ui->TW_10->setItem(i, 22, item_on_current);
        ui->TW_10->item(i,22)->setTextAlignment(Qt::AlignCenter);
        ui->TW_10->setItem(i, 23, item_on_voltage);
        ui->TW_10->item(i,23)->setTextAlignment(Qt::AlignCenter);
        ui->TW_10->setItem(i, 24, item_on_time);
        ui->TW_10->item(i,24)->setTextAlignment(Qt::AlignCenter);
        ui->TW_10->setItem(i, 25, item_off_current);
        ui->TW_10->item(i,25)->setTextAlignment(Qt::AlignCenter);
        ui->TW_10->setItem(i, 26, item_off_voltage);
        ui->TW_10->item(i,26)->setTextAlignment(Qt::AlignCenter);
        ui->TW_10->setItem(i, 27, item_off_time);
        ui->TW_10->item(i,27)->setTextAlignment(Qt::AlignCenter);
        ui->TW_10->setItem(i, 28, item_wire);
        ui->TW_10->item(i,28)->setTextAlignment(Qt::AlignCenter);

        if(ui->TW_10->item(i, 1)->text() == "교시중"){
            for(int j=0; j<29; j++){
                ui->TW_10->item(i, j)->setBackground(Qt::yellow);
            }
        }else if(ui->TW_10->item(i, 1)->text() == "설정 완료"){
            for(int j=0; j<29; j++){
                ui->TW_10->item(i, j)->setBackground(Qt::darkGreen);
            }
        }
    }
}
void MainWindow::Update_TW_10_welding_data()
{
    ST_DATA temp;
    for(int row=0; row<ui->TW_10->rowCount(); row++){
        for(int column=0; column<ui->TW_10->columnCount(); column++)
        {
            if(column == 0){
               temp.command_option = welding_data[row].command_option;
               temp.sub_option = welding_data[row].sub_option;
            }
            if(column == 1){
                temp.lv = welding_data[row].lv;
            }
            if(column == 2){
                if(welding_data[row].command_option == WEL_CMD_INIT_J || welding_data[row].command_option == WEL_CMD_MOVE_J || welding_data[row].command_option == WEL_CMD_FINAL_J){
                    // joint move
                    temp.joint[0] = ui->TW_10->item(row, 2)->text().toFloat();
                    temp.tcp[0] = welding_data[row].tcp[0];
                }else{
                    temp.joint[0] = welding_data[row].joint[0];
                    temp.tcp[0] = ui->TW_10->item(row, 2)->text().toFloat();
                }
            }
            if(column == 3){
                if(welding_data[row].command_option == WEL_CMD_INIT_J || welding_data[row].command_option == WEL_CMD_MOVE_J || welding_data[row].command_option == WEL_CMD_FINAL_J){
                    // joint move
                    temp.joint[1] = ui->TW_10->item(row, 3)->text().toFloat();
                    temp.tcp[1] = welding_data[row].tcp[1];
                }else{
                    temp.joint[1] = welding_data[row].joint[1];
                    temp.tcp[1] = ui->TW_10->item(row, 3)->text().toFloat();
                }
            }
            if(column == 4){
                if(welding_data[row].command_option == WEL_CMD_INIT_J || welding_data[row].command_option == WEL_CMD_MOVE_J || welding_data[row].command_option == WEL_CMD_FINAL_J){
                    // joint move
                    temp.joint[2] = ui->TW_10->item(row, 4)->text().toFloat();
                    temp.tcp[2] = welding_data[row].tcp[2];
                }else{
                    temp.joint[2] = welding_data[row].joint[2];
                    temp.tcp[2] = ui->TW_10->item(row, 4)->text().toFloat();
                }
            }
            if(column == 5){
                if(welding_data[row].command_option == WEL_CMD_INIT_J || welding_data[row].command_option == WEL_CMD_MOVE_J || welding_data[row].command_option == WEL_CMD_FINAL_J){
                    // joint move
                    temp.joint[3] = ui->TW_10->item(row, 5)->text().toFloat();
                    temp.tcp[3] = welding_data[row].tcp[3];
                }else{
                    temp.joint[3] = welding_data[row].joint[3];
                    temp.tcp[3] = ui->TW_10->item(row, 5)->text().toFloat();
                }
            }
            if(column == 6){
                if(welding_data[row].command_option == WEL_CMD_INIT_J || welding_data[row].command_option == WEL_CMD_MOVE_J || welding_data[row].command_option == WEL_CMD_FINAL_J){
                    // joint move
                    temp.joint[4] = ui->TW_10->item(row, 6)->text().toFloat();
                    temp.tcp[4] = welding_data[row].tcp[4];
                }else{
                    temp.joint[4] = welding_data[row].joint[4];
                    temp.tcp[4] = ui->TW_10->item(row, 6)->text().toFloat();
                }
            }
            if(column == 7){
                if(welding_data[row].command_option == WEL_CMD_INIT_J || welding_data[row].command_option == WEL_CMD_MOVE_J || welding_data[row].command_option == WEL_CMD_FINAL_J){
                    // joint move
                    temp.joint[5] = ui->TW_10->item(row, 7)->text().toFloat();
                    temp.tcp[5] = welding_data[row].tcp[5];
                }else{
                    temp.joint[5] = welding_data[row].joint[5];
                    temp.tcp[5] = ui->TW_10->item(row, 7)->text().toFloat();
                }
            }
            if(column == 8){
               temp.a_axis_para[0] = ui->TW_10->item(row, 8)->text().toFloat();
            }
            if(column == 9){
               temp.a_axis_para[1] = ui->TW_10->item(row, 9)->text().toFloat();
            }
            if(column == 10){
                temp.a_axis_para[2] = ui->TW_10->item(row, 10)->text().toFloat();
            }
            if(column == 11){
                temp.w_persent = ui->TW_10->item(row, 11)->text().toFloat();
            }
            if(column == 12){
                temp.xx = ui->TW_10->item(row, 12)->text().toFloat();
            }
            if(column == 13){
                temp.yy = ui->TW_10->item(row, 13)->text().toFloat();
            }
            if(column == 14){
                temp.zz = ui->TW_10->item(row, 14)->text().toFloat();
            }
            if(column == 15){
                temp.current = ui->TW_10->item(row, 15)->text().toFloat();
            }
            if(column == 16){
                temp.voltage = ui->TW_10->item(row, 16)->text().toFloat();
            }
            if(column == 17){
                temp.vel = ui->TW_10->item(row, 17)->text().toFloat();
                temp.acc = ui->TW_10->item(row, 17)->text().toFloat();
            }
            if(column == 18){
                temp.wait_time = ui->TW_10->item(row, 18)->text().toFloat();
            }
            if(column == 19){
                temp.weaving_para[0] = ui->TW_10->item(row, 19)->text().toFloat();
            }
            if(column == 20){
                temp.weaving_para[1] = ui->TW_10->item(row, 20)->text().toFloat();
            }
            if(column == 21){
                temp.weaving_para[2] = ui->TW_10->item(row, 21)->text().toFloat();
            }
            if(column == 22){
                temp.arc_on_para[0] = ui->TW_10->item(row, 22)->text().toFloat();
            }
            if(column == 23){
                temp.arc_on_para[1] = ui->TW_10->item(row, 23)->text().toFloat();
            }
            if(column == 24){
                temp.arc_on_para[2] = ui->TW_10->item(row, 24)->text().toFloat();
            }
            if(column == 25){
                temp.arc_off_para[0] = ui->TW_10->item(row, 25)->text().toFloat();
            }
            if(column == 26){
                temp.arc_off_para[1] = ui->TW_10->item(row, 26)->text().toFloat();
            }
            if(column == 27){
                temp.arc_off_para[2] = ui->TW_10->item(row, 27)->text().toFloat();
            }
            if(column == 28){
                temp.wire_para[0] = ui->TW_10->item(row, 28)->text().toFloat();
            }
        }
        welding_data[row] = temp;
    }
    for(int i=0;i<welding_data.size();i++){
        //qDebug()<<"welding_data :"<<welding_data[i].command_option<<","<<welding_data[i].sub_option<<","<<welding_data[i].joint[0]<<","<<welding_data[i].joint[1]<<","<<welding_data[i].joint[2]<<","<<welding_data[i].joint[3]<<","<<welding_data[i].joint[4]<<","<<welding_data[i].joint[5]<<","<<welding_data[i].tcp[0]<<","<<welding_data[i].tcp[1]<<","<<welding_data[i].tcp[2]<<","<<welding_data[i].tcp[3]<<","<<welding_data[i].tcp[4]<<","<<welding_data[i].tcp[5]<<","<<welding_data[i].vel<<","<<welding_data[i].acc<<","<<welding_data[i].current<<","<<welding_data[i].voltage<<","<<welding_data[i].wait_time<<","<<welding_data[i].arc_on_para[0]<<","<<welding_data[i].arc_on_para[1]<<","<<welding_data[i].arc_on_para[2]<<","<<welding_data[i].arc_off_para[0]<<","<<welding_data[i].arc_off_para[1]<<","<<welding_data[i].arc_off_para[2]<<","<<welding_data[i].wire_para[0]<<","<<welding_data[i].weaving_para[0]<<","<<welding_data[i].weaving_para[1]<<","<<welding_data[i].weaving_para[2]<<","<<welding_data[i].a_axis_para[0]<<","<<welding_data[i].a_axis_para[1]<<","<<welding_data[i].a_axis_para[2]<<","<<welding_data[i].lv<<","<<welding_data[i].w_persent<<","<<welding_data[i].xx<<","<<welding_data[i].yy<<","<<welding_data[i].zz<<endl;
    }

}

void MainWindow::Update_modify_data()
{

    modify_command_data.clear();
    modify_command_data = command_data;
    for(int i=0;i<command_data.size();i++){
        //qDebug()<<"modify_command_data :"<<modify_command_data[i].command_option<<","<<modify_command_data[i].sub_option<<","<<modify_command_data[i].joint[0]<<","<<modify_command_data[i].joint[1]<<","<<modify_command_data[i].joint[2]<<","<<modify_command_data[i].joint[3]<<","<<modify_command_data[i].joint[4]<<","<<modify_command_data[i].joint[5]<<","<<modify_command_data[i].tcp[0]<<","<<modify_command_data[i].tcp[1]<<","<<modify_command_data[i].tcp[2]<<","<<modify_command_data[i].tcp[3]<<","<<modify_command_data[i].tcp[4]<<","<<modify_command_data[i].tcp[5]<<","<<modify_command_data[i].vel<<","<<modify_command_data[i].acc<<","<<modify_command_data[i].current<<","<<modify_command_data[i].voltage<<","<<modify_command_data[i].wait_time<<","<<modify_command_data[i].arc_on_para[0]<<","<<modify_command_data[i].arc_on_para[1]<<","<<modify_command_data[i].arc_on_para[2]<<","<<modify_command_data[i].arc_off_para[0]<<","<<modify_command_data[i].arc_off_para[1]<<","<<modify_command_data[i].arc_off_para[2]<<","<<modify_command_data[i].wire_para[0]<<","<<modify_command_data[i].weaving_para[0]<<","<<modify_command_data[i].weaving_para[1]<<","<<modify_command_data[i].weaving_para[2]<<","<<modify_command_data[i].a_axis_para[0]<<","<<modify_command_data[i].a_axis_para[1]<<","<<modify_command_data[i].a_axis_para[2]<<","<<modify_command_data[i].lv<<","<<modify_command_data[i].w_persent<<","<<modify_command_data[i].xx<<","<<modify_command_data[i].yy<<","<<modify_command_data[i].zz<<endl;
    }
    modify_welding_data.clear();
    modify_welding_data = welding_data;
    for(int i=0;i<welding_data.size();i++){
        //qDebug()<<"modify_welding_data :"<<modify_welding_data[i].command_option<<","<<modify_welding_data[i].sub_option<<","<<modify_welding_data[i].joint[0]<<","<<modify_welding_data[i].joint[1]<<","<<modify_welding_data[i].joint[2]<<","<<modify_welding_data[i].joint[3]<<","<<modify_welding_data[i].joint[4]<<","<<modify_welding_data[i].joint[5]<<","<<modify_welding_data[i].tcp[0]<<","<<modify_welding_data[i].tcp[1]<<","<<modify_welding_data[i].tcp[2]<<","<<modify_welding_data[i].tcp[3]<<","<<modify_welding_data[i].tcp[4]<<","<<modify_welding_data[i].tcp[5]<<","<<modify_welding_data[i].vel<<","<<modify_welding_data[i].acc<<","<<modify_welding_data[i].current<<","<<modify_welding_data[i].voltage<<","<<modify_welding_data[i].wait_time<<","<<modify_welding_data[i].arc_on_para[0]<<","<<modify_welding_data[i].arc_on_para[1]<<","<<modify_welding_data[i].arc_on_para[2]<<","<<modify_welding_data[i].arc_off_para[0]<<","<<modify_welding_data[i].arc_off_para[1]<<","<<modify_welding_data[i].arc_off_para[2]<<","<<modify_welding_data[i].wire_para[0]<<","<<modify_welding_data[i].weaving_para[0]<<","<<modify_welding_data[i].weaving_para[1]<<","<<modify_welding_data[i].weaving_para[2]<<","<<modify_welding_data[i].a_axis_para[0]<<","<<modify_welding_data[i].a_axis_para[1]<<","<<modify_welding_data[i].a_axis_para[2]<<","<<modify_welding_data[i].lv<<","<<modify_welding_data[i].w_persent<<","<<modify_welding_data[i].xx<<","<<modify_welding_data[i].yy<<","<<modify_welding_data[i].zz<<endl;
    }
}

#define FOLD_END___TABLE_PART  }
// ========================================================================================

// Script ====================================================
#define FOLD_START___SCRIPT_PART  {
void MainWindow::Script_Maker(QString work_name, unsigned int start_index){

    // JCT_PLEASE_CHECK_THIS
    QString my_job_name = QApplication::applicationDirPath() + "/play/" + work_name +".wsl";

    int previous_commnad = WEL_CMD_NONE;
    FILE* fp;
    fp = fopen(my_job_name.toStdString().c_str(), "w");
    fprintf(fp, "begin %.2f,%.2f,%.2f,%.2f,%.2f,%.2f\n", 0., 0., 0., 0., 0., 0.);
    fprintf(fp, QString(Script_Wait_Time(0.5) + "\n").toStdString().c_str());
    fprintf(fp, QString(Script_SpeedBar(100) + "\n").toStdString().c_str());
    fprintf(fp, "script {\n");
    fprintf(fp,"\tvar wait_sig_flag = 0\n");
    fprintf(fp,"\tvar btn_lh_sig_flag = 0\n");
    fprintf(fp,"\tvar btn_rh_sig_flag = 0\n");
    fprintf(fp,"\tvar air_sig_flag = 0\n");
    fprintf(fp,"\tvar btn_jig1_sig_flag = 0\n");
    fprintf(fp,"\tvar btn_jig2_sig_flag = 0\n");
    fprintf(fp,"\tvar btn_jig3_sig_flag = 0\n");
    fprintf(fp,"}\n");

    if(ui->LE_D_0_data_5->text() == "1"){ //레이저 Tool 12v
        fprintf(fp,"tool_out 12,-1,-1\n");
    }
    if(setting_is_tig_welder){
        fprintf(fp, "script {\n");
        fprintf(fp,"\tset_jct_tig_graph(1)\n");
        fprintf(fp,"}\n");
    }
    if(mode_type!=100){
        if(mode_type!=3){
            if(mode_type==1){
                fprintf(fp, "script {\n");
                fprintf(fp, "\tset_jct_handok_mode(0,0)\n");
                fprintf(fp, "}\n");
                if(data_axis7 == 1 && data_axis8 == 0 && data_axis9 == 0){
                    fprintf(fp,"\t\tdigital_out -1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\n");
                }
                if(data_axis7 == 1 && data_axis8 == 1 && data_axis9 == 1){
                    fprintf(fp,"\t\tdigital_out -1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\n");
                }
            }
            if(mode_type==2){
                fprintf(fp, "script {\n");
                fprintf(fp, "\tset_jct_handok_mode(1,1)\n");
                fprintf(fp, "}\n");
                if(data_axis7 == 1 && data_axis8 == 0 && data_axis9 == 0){
                    fprintf(fp,"\t\tdigital_out -1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\n");
                }
                if(data_axis7 == 1 && data_axis8 == 1 && data_axis9 == 1){
                    fprintf(fp,"\t\tdigital_out -1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\n");
                }
            }

        for(unsigned int i=start_index; i < welding_data.size(); i++){
            ST_DATA temp_line = welding_data.at(i);

                bool is_this_last_line = false;
                bool is_next_command_pro = true;
                bool is_this_last_line1 = false;
                bool is_next_command_pro1 = true;
                if(i ==  (welding_data.size() - 1)){
                    is_this_last_line = true;
                    is_next_command_pro = false;
                    is_this_last_line1 = true;
                    is_next_command_pro1 = false;
                }else{
                    if(welding_data.at(i+1).command_option != WEL_CMD_MOVE_PRO_L && welding_data.at(i+1).command_option != WEL_CMD_MOVE_PRO_C){
                        is_next_command_pro = false;
                    }
                    if(welding_data.at(i+1).command_option != WEL_CMD_ONEPOINT_WELD){
                        is_next_command_pro1 = false;
                    }
                }

                switch(temp_line.command_option){
                case WEL_CMD_GAJUB:
                {
                        fprintf(fp, QString(Script_rb_xyz_value_shift(temp_line.xx,temp_line.yy,temp_line.zz)+"\n").toStdString().c_str());
                        fprintf(fp, "script {\n");
                        fprintf(fp, QString("\t" + Script_Move_L(temp_line.tcp[0], temp_line.tcp[1], temp_line.tcp[2], temp_line.tcp[3], temp_line.tcp[4], temp_line.tcp[5]
                                                                , setting_air_move_L_vel, setting_air_move_L_acc) + "\n").toStdString().c_str());
                        fprintf(fp, "}\n");
                        if(data_axis7 == 1){
                            fprintf(fp, QString(Script_aux_motor_move_multi(data_axis7,data_axis8,data_axis9,0,0,0,temp_line.a_axis_para[0],temp_line.a_axis_para[1],temp_line.a_axis_para[2],0,0,0,100,20,20,0,0,0,100,20,20,0,0,0,0)+"\n").toStdString().c_str());
                        }
                    if(setting_is_tig_welder){
                        int will_use_wire = (int)(round(temp_line.wire_para[0]));
                        if(will_use_wire){
                            fprintf(fp, QString(Script_Digital_Out(DOUT_PORT_TIG_WELDER, 1) + "\n").toStdString().c_str());
                            fprintf(fp, "script {\n");
                            fprintf(fp, QString("\t" + Script_JCT_TIG_WIRE(temp_line.voltage) + "\n").toStdString().c_str());
                            fprintf(fp, "}\n");
                        }
                        if(data_weld_type == 3){
                            fronius_job = (int)temp_line.current; // 프로니우스
                            fprintf(fp,"digital_bit_combination_out 4,7,%d,0,0,0\n",fronius_job); // 프로니우스
                        }
                        fprintf(fp, QString(Script_Arc_On(0, temp_line.vel, arc_accel, temp_line.current, 1, temp_line.voltage, VALUE_ARC_WAIT_TIME, 0, 1, 1, 1) + "\n").toStdString().c_str());
                        fprintf(fp, QString(Script_Wait_Time(temp_line.wait_time) + "\n").toStdString().c_str());
                        fprintf(fp, QString(Script_Arc_Off(0, temp_line.current, 1, 0, 0, 0) + "\n").toStdString().c_str());
                        if(data_weld_type == 3){
                            fprintf(fp, QString(Script_Wait_Time(temp_line.wait_time) + "\n").toStdString().c_str()); // 프로니우스
                        }

                        if(will_use_wire){
                            fprintf(fp, "script {\n");
                            fprintf(fp, QString("\t" + Script_JCT_TIG_WIRE(0) + "\n").toStdString().c_str());
                            fprintf(fp, "}\n");
                            fprintf(fp, QString(Script_Digital_Out(DOUT_PORT_TIG_WELDER, 0) + "\n").toStdString().c_str());
                        }
                    }else{
                        if(data_weld_type == 3){
                            fronius_job =(int)temp_line.current; // 프로니우스
                            fprintf(fp,"digital_bit_combination_out 4,7,%d,0,0,0\n",fronius_job); // 프로니우스
                        }
                        fprintf(fp, QString(Script_Arc_On(0, temp_line.vel, arc_accel, temp_line.current, 1, temp_line.voltage, VALUE_ARC_WAIT_TIME, 0, 1, 1, 1) + "\n").toStdString().c_str());
                        fprintf(fp, QString(Script_Wait_Time(temp_line.wait_time) + "\n").toStdString().c_str());
                        fprintf(fp, QString(Script_Arc_Off(0, temp_line.current, 1, temp_line.voltage, 0, 0) + "\n").toStdString().c_str());
                        if(data_weld_type == 3){
                           fprintf(fp, QString(Script_Wait_Time(temp_line.wait_time) + "\n").toStdString().c_str()); // 프로니우스
                           fprintf(fp,"script {\n");
                           fprintf(fp,"\tair_sig_flag=1\n");
                           fprintf(fp,"}\n");
                        }


                    }
                    break;
                }
                // Wait ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                case WEL_CMD_WEAVING_L_REF_1:
                    break;
                case WEL_CMD_WEAVING_L_REF_2:
                    break;
                case WEL_CMD_WEAVING_L:
                {
                    if(setting_is_tig_welder){
                        int will_use_wire = (int)(round(temp_line.wire_para[0]));
                        if(will_use_wire){
                            fprintf(fp, QString(Script_Digital_Out(DOUT_PORT_TIG_WELDER, 1) + "\n").toStdString().c_str());
                            fprintf(fp, "script {\n");
                            fprintf(fp, QString("\t" + Script_JCT_TIG_WIRE(temp_line.arc_on_para[1]) + "\n").toStdString().c_str());
                            fprintf(fp, "}\n");
                        }
                        if(data_weld_type == 3){
                            fronius_job = (int)temp_line.current; // 프로니우스
                            fprintf(fp,"digital_bit_combination_out 4,7,%d,0,0,0\n",fronius_job); // 프로니우스
                        }
                        fprintf(fp, QString(Script_Arc_On(0, temp_line.vel, arc_accel, temp_line.arc_on_para[0], 1, temp_line.arc_on_para[0], VALUE_ARC_WAIT_TIME, temp_line.arc_on_para[2], 1, 1, 0) + "\n").toStdString().c_str());
                        if(will_use_wire){
                            fprintf(fp, "script {\n");
                            fprintf(fp, QString("\t" + Script_JCT_TIG_WIRE(temp_line.voltage) + "\n").toStdString().c_str());
                            fprintf(fp, "}\n");
                        }
                        fprintf(fp, QString(Script_Arc_Set(temp_line.vel, temp_line.acc, temp_line.current, 1, 0) + "\n").toStdString().c_str());
                    }else{
                        if(data_weld_type == 3){
                            fronius_job = (int)temp_line.current; // 프로니우스
                            fprintf(fp,"digital_bit_combination_out 4,7,%d,0,0,0\n",fronius_job); // 프로니우스
                        }
                        fprintf(fp, QString(Script_Arc_On(0, temp_line.vel, arc_accel, temp_line.arc_on_para[0], 1, temp_line.arc_on_para[1], VALUE_ARC_WAIT_TIME, temp_line.arc_on_para[2], 1, 1, 0) + "\n").toStdString().c_str());
                        fprintf(fp, QString(Script_Arc_Set(temp_line.vel, temp_line.acc, temp_line.current, 1, temp_line.voltage) + "\n").toStdString().c_str());
                    }

                    float set1[6];
                    float set2[6];
                    for(int j=0; j<6; j++){
                        set1[j] = welding_data.at(i-2).tcp[j];
                        set2[j] = welding_data.at(i-1).tcp[j];
                    }
                    int weaving_type = (int)(round(temp_line.weaving_para[0]));
                    float weaving_time = temp_line.weaving_para[1];
                    float weaving_amp = temp_line.weaving_para[2];
                    if(weaving_type == 1){//trap
                        QString weaving_start = Script_Weaving(1, weaving_amp, weaving_amp, 50, 50, weaving_time, 0, weaving_time, 0, 0, 0, 100, set1[0], set1[1], set1[2], set1[3], set1[4], set1[5], set2[0], set2[1], set2[2], set2[3], set2[4], set2[5], 0) + "{\n";
                        fprintf(fp, weaving_start.toStdString().c_str());

                        fprintf(fp, "\tscript {\n");
                        fprintf(fp, QString("\t\t" + Script_Move_L(temp_line.tcp[0], temp_line.tcp[1], temp_line.tcp[2], temp_line.tcp[3], temp_line.tcp[4], temp_line.tcp[5]
                                                                , temp_line.vel, temp_line.acc) + "\n").toStdString().c_str());
                        fprintf(fp, "\t}\n");

                        fprintf(fp, "}\n");
                    }else if(weaving_type == 2){//sine
                        QString weaving_start = Script_Weaving(2, weaving_amp, weaving_amp, 0, 0, weaving_time, 0, weaving_time, 0, 0, 0, 100, set1[0], set1[1], set1[2], set1[3], set1[4], set1[5], set2[0], set2[1], set2[2], set2[3], set2[4], set2[5], 0) + "{\n";
                        fprintf(fp, weaving_start.toStdString().c_str());

                        fprintf(fp, "\tscript {\n");
                        fprintf(fp, QString("\t\t" + Script_Move_L(temp_line.tcp[0], temp_line.tcp[1], temp_line.tcp[2], temp_line.tcp[3], temp_line.tcp[4], temp_line.tcp[5]
                                                                , temp_line.vel, temp_line.acc) + "\n").toStdString().c_str());
                        fprintf(fp, "\t}\n");

                        fprintf(fp, "}\n");
                    }else if(weaving_type == 3){//triangle
                        QString weaving_start = Script_Weaving(3, weaving_amp, weaving_amp, 50, 50, weaving_time, weaving_time, weaving_time, 0, 100, 0, 100, set1[0], set1[1], set1[2], set1[3], set1[4], set1[5], set2[0], set2[1], set2[2], set2[3], set2[4], set2[5], 0) + "{\n";
                        fprintf(fp, weaving_start.toStdString().c_str());

                        fprintf(fp, "\tscript {\n");
                        fprintf(fp, QString("\t\t" + Script_Move_L(temp_line.tcp[0], temp_line.tcp[1], temp_line.tcp[2], temp_line.tcp[3], temp_line.tcp[4], temp_line.tcp[5]
                                                                , temp_line.vel, temp_line.acc) + "\n").toStdString().c_str());
                        fprintf(fp, "\t}\n");

                        fprintf(fp, "}\n");
                    }else if(weaving_type == 4){// c wave
                        QString weaving_start = Script_Weaving(4, weaving_amp, 45, 50, 50, weaving_time, 0, weaving_time, 0, 0, 0, 100, set1[0], set1[1], set1[2], set1[3], set1[4], set1[5], set2[0], set2[1], set2[2], set2[3], set2[4], set2[5], 0) + "{\n";
                        fprintf(fp, weaving_start.toStdString().c_str());

                        fprintf(fp, "\tscript {\n");
                        fprintf(fp, QString("\t\t" + Script_Move_L(temp_line.tcp[0], temp_line.tcp[1], temp_line.tcp[2], temp_line.tcp[3], temp_line.tcp[4], temp_line.tcp[5]
                                                                , temp_line.vel, temp_line.acc) + "\n").toStdString().c_str());
                        fprintf(fp, "\t}\n");

                        fprintf(fp, "}\n");
                    }else if(weaving_type == 5){// circle
                        QString weaving_start = Script_Weaving(5, weaving_amp, 1, 0, 0, 0, 0, 0, 0, 0, 0, 100, set1[0], set1[1], set1[2], set1[3], set1[4], set1[5], set2[0], set2[1], set2[2], set2[3], set2[4], set2[5], 0) + "{\n";
                        fprintf(fp, weaving_start.toStdString().c_str());

                        fprintf(fp, "\tscript {\n");
                        fprintf(fp, QString("\t\t" + Script_Move_L(temp_line.tcp[0], temp_line.tcp[1], temp_line.tcp[2], temp_line.tcp[3], temp_line.tcp[4], temp_line.tcp[5]
                                                                , temp_line.vel, temp_line.acc) + "\n").toStdString().c_str());
                        fprintf(fp, "\t}\n");

                        fprintf(fp, "}\n");
                    }

                    if(setting_is_tig_welder){
                        int will_use_wire = (int)(round(temp_line.wire_para[0]));

                        fprintf(fp, QString(Script_Arc_Off(0, temp_line.arc_off_para[0], 1, 0, temp_line.arc_off_para[2], 0) + "\n").toStdString().c_str());
                        if(data_weld_type == 3){
                            fprintf(fp, QString(Script_Wait_Time(temp_line.wait_time) + "\n").toStdString().c_str()); // 프로니우스
                            fprintf(fp,"script {\n");
                            fprintf(fp,"\tair_sig_flag=1\n");
                            fprintf(fp,"}\n");
                        }
                        if(will_use_wire){
                            fprintf(fp, "script {\n");
                            fprintf(fp, QString("\t" + Script_JCT_TIG_WIRE(0) + "\n").toStdString().c_str());
                            fprintf(fp, "}\n");
                            fprintf(fp, QString(Script_Digital_Out(DOUT_PORT_TIG_WELDER, 0) + "\n").toStdString().c_str());
                        }
                    }else{
                        fprintf(fp, QString(Script_Arc_Off(0, temp_line.arc_off_para[0], 1, temp_line.arc_off_para[1], temp_line.arc_off_para[2], 0) + "\n").toStdString().c_str());
                        if(data_weld_type == 3){
                            fprintf(fp, QString(Script_Wait_Time(temp_line.wait_time) + "\n").toStdString().c_str()); // 프로니우스
                            fprintf(fp,"script {\n");
                            fprintf(fp,"\tair_sig_flag=1\n");
                            fprintf(fp,"}\n");
                        }

                    }
                    break;
                }
                case WEL_CMD_WAIT_TIME:
                {
                    fprintf(fp, "script {\n");
                    fprintf(fp, QString("\t" + Script_Move_L(temp_line.tcp[0], temp_line.tcp[1], temp_line.tcp[2], temp_line.tcp[3], temp_line.tcp[4], temp_line.tcp[5]
                                                            , setting_air_move_L_vel, setting_air_move_L_acc) + "\n").toStdString().c_str());
                    fprintf(fp, "}\n");
                    fprintf(fp, QString(Script_Wait_Time(temp_line.wait_time) + "\n").toStdString().c_str());
                    break;
                }
                case WEL_CMD_WAIT_DIN:
                {
                    if(ui->LE_D_0_data_0->text()=="0" || ui->LE_D_0_data_0->text()=="2"  ){     //기본
                        fprintf(fp, "script {\n");
                        fprintf(fp, QString("\t" + Script_Move_L(temp_line.tcp[0], temp_line.tcp[1], temp_line.tcp[2], temp_line.tcp[3], temp_line.tcp[4], temp_line.tcp[5]
                                                                , setting_air_move_L_vel, setting_air_move_L_acc) + "\n").toStdString().c_str());
                        fprintf(fp, "}\n");
                        fprintf(fp, "script {\n");
                        fprintf(fp,"\twait_sig_flag = 1\n");
                        fprintf(fp,"\t_ROM_9 = 1\n");
                        fprintf(fp,"}\n");
                        fprintf(fp, QString(Script_Wait_Digital_Input(DIN_PORT_SIGNAL_WAIT) + "\n").toStdString().c_str());
                        fprintf(fp, "script {\n");
                        fprintf(fp,"\twait_sig_flag = 0\n");
                        fprintf(fp,"\t_ROM_9 = 0\n");
                        fprintf(fp,"}\n");
                        break;
                    }
                    if(ui->LE_D_0_data_0->text()=="1"){     //한독
                        if(mode_type == 0){
                        fprintf(fp, "script {\n");
                        fprintf(fp,"\twait_sig_flag = 1\n");
                        fprintf(fp,"}\n");
                        fprintf(fp, QString(Script_Wait_Digital_Input(DIN_PORT_SIGNAL_WAIT) + "\n").toStdString().c_str());
                        fprintf(fp, "script {\n");
                        fprintf(fp,"\twait_sig_flag = 0\n");
                        fprintf(fp,"}\n");
                        }
                        if(mode_type == 1){
                            if(data_axis7 == 1 && data_axis8 == 0 && data_axis9 == 0){
                                fprintf(fp,"digital_out -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,-1\n");
                            }
                            if(data_axis7 == 1 && data_axis8 == 1 && data_axis9 == 1){
                                fprintf(fp,"digital_out -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\n");
                            }
                            fprintf(fp, QString(Script_Wait_Time(temp_line.wait_time) + "\n").toStdString().c_str());
                            if(data_axis7 == 1 && data_axis8 == 0 && data_axis9 == 0){
                                fprintf(fp,"digital_out -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,-1\n");
                            }
                            if(data_axis7 == 1 && data_axis8 == 1 && data_axis9 == 1){
                                fprintf(fp,"digital_out -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\n");
                            }
                        }
                        if(mode_type == 2){
                            if(data_axis7 == 1 && data_axis8 == 0 && data_axis9 == 0){
                                fprintf(fp,"digital_out -1,-1,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1\n");
                            }
                            if(data_axis7 == 1 && data_axis8 == 1 && data_axis9 == 1){
                                fprintf(fp,"digital_out -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\n");
                            }
                            fprintf(fp, QString(Script_Wait_Time(temp_line.wait_time) + "\n").toStdString().c_str());
                            if(data_axis7 == 1 && data_axis8 == 0 && data_axis9 == 0){
                                fprintf(fp,"digital_out -1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1\n");
                            }
                            if(data_axis7 == 1 && data_axis8 == 1 && data_axis9 == 1){
                                fprintf(fp,"digital_out -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\n");
                            }
                        }
                        break;
                    }
                    if(ui->LE_D_0_data_0->text()=="3"){     //한독
                    if(mode_type == 0){
                    fprintf(fp, "script {\n");
                    fprintf(fp,"\twait_sig_flag = 1\n");
                    fprintf(fp,"}\n");
                    fprintf(fp, QString(Script_Wait_Digital_Input(DIN_PORT_SIGNAL_WAIT) + "\n").toStdString().c_str());
                    fprintf(fp, "script {\n");
                    fprintf(fp,"\twait_sig_flag = 0\n");
                    fprintf(fp,"}\n");
                    }
                    if(mode_type == 1){
                        if(data_axis7 == 1 && data_axis8 == 1){
                            fprintf(fp,"digital_out -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\n");
                        }
                        fprintf(fp, QString(Script_Wait_Time(temp_line.wait_time) + "\n").toStdString().c_str());
                        if(data_axis7 == 1 && data_axis8 == 1){
                            fprintf(fp,"digital_out -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\n");
                        }
                    }
                    if(mode_type == 2){
                        if(data_axis7 == 1 && data_axis8 == 1){
                            fprintf(fp,"digital_out -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\n");
                        }
                        fprintf(fp, QString(Script_Wait_Time(temp_line.wait_time) + "\n").toStdString().c_str());
                        if(data_axis7 == 1 && data_axis8 == 1 && data_axis9 == 1){
                            fprintf(fp,"digital_out -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\n");
                        }
                    }
                    break;
                    }
                }
                // Move J ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                case WEL_CMD_MOVE_J:
                {
                    fprintf(fp, "script {\n");
                    fprintf(fp, QString("\t" + Script_Move_J(temp_line.joint[0], temp_line.joint[1], temp_line.joint[2], temp_line.joint[3], temp_line.joint[4], temp_line.joint[5]
                                                            , setting_air_move_J_vel, setting_air_move_J_acc) + "\n").toStdString().c_str());
                    fprintf(fp, "}\n");
                    if(data_axis7 == 1){
                        fprintf(fp, QString(Script_aux_motor_move_multi(data_axis7,data_axis8,data_axis9,0,0,0,temp_line.a_axis_para[0],temp_line.a_axis_para[1],temp_line.a_axis_para[2],0,0,0,setting_air_Axis_0_vel,setting_air_Axis_1_vel,setting_air_Axis_2_vel,0,0,0,setting_air_Axis_0_acc,setting_air_Axis_1_acc,setting_air_Axis_2_acc,0,0,0,0)+"\n").toStdString().c_str());
                    }
                    break;
                }
                case WEL_CMD_INIT_J:
                {
                    fprintf(fp, "script {\n");
                    fprintf(fp, QString("\t" + Script_Move_J(temp_line.joint[0], temp_line.joint[1], temp_line.joint[2], temp_line.joint[3], temp_line.joint[4], temp_line.joint[5]
                                                            , setting_air_move_J_vel, setting_air_move_J_acc) + "\n").toStdString().c_str());
                    fprintf(fp, "}\n");
                    if(data_axis7 == 1){
                        fprintf(fp, QString(Script_aux_motor_move_multi(data_axis7,data_axis8,data_axis9,0,0,0,temp_line.a_axis_para[0],temp_line.a_axis_para[1],temp_line.a_axis_para[2],0,0,0,setting_air_Axis_0_vel,setting_air_Axis_1_vel,setting_air_Axis_2_vel,0,0,0,setting_air_Axis_0_acc,setting_air_Axis_1_acc,setting_air_Axis_2_acc,0,0,0,0)+"\n").toStdString().c_str());
                    }
                    break;
                }
                case WEL_CMD_FINAL_J:
                {
                    fprintf(fp, "script {\n");
                    fprintf(fp, QString("\t" + Script_Move_J(temp_line.joint[0], temp_line.joint[1], temp_line.joint[2], temp_line.joint[3], temp_line.joint[4], temp_line.joint[5]
                                                            , setting_air_move_J_vel, setting_air_move_J_acc) + "\n").toStdString().c_str());
                    fprintf(fp, "}\n");
                    if(data_axis7 == 1){
                        fprintf(fp, QString(Script_aux_motor_move_multi(data_axis7,data_axis8,data_axis9,0,0,0,temp_line.a_axis_para[0],temp_line.a_axis_para[1],temp_line.a_axis_para[2],0,0,0,setting_air_Axis_0_vel,setting_air_Axis_1_vel,setting_air_Axis_2_vel,0,0,0,setting_air_Axis_0_acc,setting_air_Axis_1_acc,setting_air_Axis_2_acc,0,0,0,0)+"\n").toStdString().c_str());
                    }
                    break;
                }
                // Move L ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                case WEL_CMD_MOVE_L:
                {
                    fprintf(fp, QString(Script_rb_xyz_value_shift(temp_line.xx,temp_line.yy,temp_line.zz)+"\n").toStdString().c_str());
                    fprintf(fp, "script {\n");
                    fprintf(fp, QString("\t" + Script_Move_L(temp_line.tcp[0], temp_line.tcp[1], temp_line.tcp[2], temp_line.tcp[3], temp_line.tcp[4], temp_line.tcp[5]
                                                            , setting_air_move_L_vel, setting_air_move_L_acc) + "\n").toStdString().c_str());
                    fprintf(fp, "}\n");
                    if(data_axis7 == 1){
                        fprintf(fp, QString(Script_aux_motor_move_multi(data_axis7,data_axis8,data_axis9,0,0,0,temp_line.a_axis_para[0],temp_line.a_axis_para[1],temp_line.a_axis_para[2],0,0,0,setting_air_Axis_0_vel,setting_air_Axis_1_vel,setting_air_Axis_2_vel,0,0,0,setting_air_Axis_0_acc,setting_air_Axis_1_acc,setting_air_Axis_2_acc,0,0,0,0)+"\n").toStdString().c_str());
                    }
                    break;
                }
                case WEL_CMD_INIT_L:
                {
                    if(data_axis7 == 1){
                        fprintf(fp, QString(Script_aux_motor_move_multi(data_axis7,data_axis8,data_axis9,0,0,0,temp_line.a_axis_para[0],temp_line.a_axis_para[1],temp_line.a_axis_para[2],0,0,0,setting_air_Axis_0_vel,setting_air_Axis_1_vel,setting_air_Axis_2_vel,0,0,0,setting_air_Axis_0_acc,setting_air_Axis_1_acc,setting_air_Axis_2_acc,0,0,0,0)+"\n").toStdString().c_str());
                    }
                    fprintf(fp, QString(Script_rb_xyz_value_shift(temp_line.xx,temp_line.yy,temp_line.zz)+"\n").toStdString().c_str());
                    fprintf(fp, "script {\n");
                    fprintf(fp, QString("\t" + Script_Move_L(temp_line.tcp[0], temp_line.tcp[1], temp_line.tcp[2], temp_line.tcp[3], temp_line.tcp[4], temp_line.tcp[5]
                                                            , setting_air_move_L_vel, setting_air_move_L_acc) + "\n").toStdString().c_str());
                    fprintf(fp, "}\n");
                    break;
                }
                case WEL_CMD_FINAL_L:
                {
                    fprintf(fp, QString(Script_rb_xyz_value_shift(temp_line.xx,temp_line.yy,temp_line.zz)+"\n").toStdString().c_str());
                    fprintf(fp, "script {\n");
                    fprintf(fp, QString("\t" + Script_Move_L(temp_line.tcp[0], temp_line.tcp[1], temp_line.tcp[2], temp_line.tcp[3], temp_line.tcp[4], temp_line.tcp[5]
                                                            , setting_air_move_L_vel, setting_air_move_L_acc) + "\n").toStdString().c_str());
                    fprintf(fp, "}\n");
                    if(data_axis7 == 1){
                        fprintf(fp, QString(Script_aux_motor_move_multi(data_axis7,data_axis8,data_axis9,0,0,0,temp_line.a_axis_para[0],temp_line.a_axis_para[1],temp_line.a_axis_para[2],0,0,0,setting_air_Axis_0_vel,setting_air_Axis_1_vel,setting_air_Axis_2_vel,0,0,0,setting_air_Axis_0_acc,setting_air_Axis_1_acc,setting_air_Axis_2_acc,0,0,0,0)+"\n").toStdString().c_str());
                    }
                    break;
                }
                // Move PRO ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                case WEL_CMD_MOVE_PRO_L:
                case WEL_CMD_MOVE_PRO_C:
                {
                    if(previous_commnad != WEL_CMD_MOVE_PRO_L && previous_commnad != WEL_CMD_MOVE_PRO_C){
                        // + Clear & Arc on
                        if(setting_is_tig_welder){
                            int will_use_wire = (int)(round(temp_line.wire_para[0]));
                            if(will_use_wire){
                                fprintf(fp, QString(Script_Digital_Out(DOUT_PORT_TIG_WELDER, 1) + "\n").toStdString().c_str());
                                fprintf(fp, "script {\n");
                                fprintf(fp, QString("\t" + Script_JCT_TIG_WIRE(temp_line.arc_on_para[1]) + "\n").toStdString().c_str());
                                fprintf(fp, "}\n");
                            }
                            if(data_weld_type == 3){
                                fronius_job = (int)temp_line.current; // 프로니우스
                                fprintf(fp,"digital_bit_combination_out 4,7,%d,0,0,0\n",fronius_job); // 프로니우스
                            }

                            //fprintf(fp, QString(Script_Arc_On(0, temp_line.vel, arc_accel, temp_line.arc_on_para[0], 1, 0, VALUE_ARC_WAIT_TIME, temp_line.arc_on_para[2], 1, 1, 0) + "\n").toStdString().c_str());
                            //
                            fprintf(fp, "if (SD_DIGITAL_IN_1 == 1) {\n");
                            fprintf(fp, QString("\t"+Script_Arc_On(0, temp_line.vel*3, arc_accel, temp_line.arc_on_para[0], 1, temp_line.arc_on_para[1], VALUE_ARC_WAIT_TIME, temp_line.arc_on_para[2], 1, 1, 0) + "\n").toStdString().c_str());
                            fprintf(fp, "}\n");
                            fprintf(fp, "else {\n");
                            fprintf(fp, QString("\t"+Script_Arc_On(0, temp_line.vel, arc_accel, temp_line.arc_on_para[0], 1, temp_line.arc_on_para[1], VALUE_ARC_WAIT_TIME, temp_line.arc_on_para[2], 1, 1, 0) + "\n").toStdString().c_str());
                            fprintf(fp, "}\n");
                            //240104
                            fprintf(fp, "script {\n");
                            fprintf(fp, "\ticv_on()\n");
                            fprintf(fp, "}\n");
                            //
                            if(will_use_wire){
                                fprintf(fp, "script {\n");
                                fprintf(fp, QString("\t" + Script_JCT_TIG_WIRE(temp_line.voltage) + "\n").toStdString().c_str());
                                fprintf(fp, "}\n");
                            }

                            //fprintf(fp, QString(Script_Arc_Set(temp_line.vel, temp_line.acc, temp_line.current, 1, 0) + "\n").toStdString().c_str());
                            fprintf(fp, "if (SD_DIGITAL_IN_1 == 1) {\n");
                            fprintf(fp, QString("\t"+Script_Arc_Set(temp_line.vel*3, arc_accel, temp_line.current, 1, temp_line.voltage) + "\n").toStdString().c_str());
                            fprintf(fp, "}\n");
                            fprintf(fp, "else {\n");
                            fprintf(fp, QString("\t"+Script_Arc_Set(temp_line.vel, arc_accel, temp_line.current, 1, temp_line.voltage) + "\n").toStdString().c_str());
                            fprintf(fp, "}\n");

                            if(data_weld_type == 3){
                                fronius_job = (int)temp_line.current; // 프로니우스
                                fprintf(fp,"digital_bit_combination_out 4,7,%d,0,0,0\n",fronius_job); // 프로니우스
                            }
                        }else{
                            if(data_weld_type == 3){
                                fronius_job = (int)temp_line.current; // 프로니우스
                                fprintf(fp,"digital_bit_combination_out 4,7,%d,0,0,0\n",fronius_job); // 프로니우스
                            }

                           // fprintf(fp, QString(Script_Arc_On(0, temp_line.vel, arc_accel, temp_line.arc_on_para[0], 1, temp_line.arc_on_para[1], VALUE_ARC_WAIT_TIME, temp_line.arc_on_para[2], 1, 1, 0) + "\n").toStdString().c_str());
                            //
                            fprintf(fp, "if (SD_DIGITAL_IN_1 == 1) {\n");
                            fprintf(fp, QString("\t"+Script_Arc_On(0, temp_line.vel*3, arc_accel, temp_line.arc_on_para[0], 1, temp_line.arc_on_para[1], VALUE_ARC_WAIT_TIME, temp_line.arc_on_para[2], 1, 1, 0) + "\n").toStdString().c_str());
                            fprintf(fp, "}\n");
                            fprintf(fp, "else {\n");
                            fprintf(fp, QString("\t"+Script_Arc_On(0, temp_line.vel, arc_accel, temp_line.arc_on_para[0], 1, temp_line.arc_on_para[1], VALUE_ARC_WAIT_TIME, temp_line.arc_on_para[2], 1, 1, 0) + "\n").toStdString().c_str());
                            fprintf(fp, "}\n");
                            //240104
                            fprintf(fp, "script {\n");
                            fprintf(fp, "\ticv_on()\n");
                            fprintf(fp, "}\n");
                            //

                            if(data_weld_type == 3){
                                fronius_job = (int)temp_line.current; // 프로니우스
                                fprintf(fp,"digital_bit_combination_out 4,7,%d,0,0,0\n",fronius_job); // 프로니우스
                            }
                            //fprintf(fp, QString(Script_Arc_Set(temp_line.vel, arc_accel, temp_line.current, 1, temp_line.voltage) + "\n").toStdString().c_str());

                            fprintf(fp, "if (SD_DIGITAL_IN_1 == 1) {\n");
                            fprintf(fp, QString("\t"+Script_Arc_Set(temp_line.vel*3, arc_accel, temp_line.current, 1, temp_line.voltage) + "\n").toStdString().c_str());
                            fprintf(fp, "}\n");
                            fprintf(fp, "else {\n");
                            fprintf(fp, QString("\t"+Script_Arc_Set(temp_line.vel, arc_accel, temp_line.current, 1, temp_line.voltage) + "\n").toStdString().c_str());
                            fprintf(fp, "}\n");

                            fprintf(fp, QString(Script_SpeedBar(welding_data.at(i).w_persent) + "\n").toStdString().c_str());
                        }
                        if(data_axis7 == 0){
                            fprintf(fp, "script {\n");
                            fprintf(fp, QString("\t" + Script_Move_PRO_Clear() + "\n").toStdString().c_str());
                            fprintf(fp, "}\n");
                        }
                        if(data_axis7 == 1){
                            fprintf(fp, QString(Script_move_waypoint(2,0,temp_line.vel,arc_accel,0.4,0.1,temp_line.joint[0],temp_line.joint[1],temp_line.joint[2],temp_line.joint[3],temp_line.joint[4],temp_line.joint[5]
                                                ,temp_line.tcp[0],temp_line.tcp[1],temp_line.tcp[2],temp_line.tcp[3],temp_line.tcp[4],temp_line.tcp[5]
                                                ,temp_line.a_axis_para[0],temp_line.a_axis_para[1],temp_line.a_axis_para[2])+ "\n").toStdString().c_str());
                        }
                    }
                    // + add
                    int temp_pro_option = 0;
                    if(temp_line.command_option == WEL_CMD_MOVE_PRO_C)
                        temp_pro_option = 1;

                    if(data_axis7 == 0){
                        fprintf(fp, "script {\n");
                        if(is_this_last_line || is_next_command_pro == false){
                            fprintf(fp, QString(Script_rb_xyz_value_shift(temp_line.xx,temp_line.yy,temp_line.zz)+"\n").toStdString().c_str());
                            if(temp_line.vel >=0){
                                fprintf(fp, QString("\t" + Script_Move_PRO_Add(temp_line.tcp[0], temp_line.tcp[1], temp_line.tcp[2], temp_line.tcp[3], temp_line.tcp[4], temp_line.tcp[5]
                                                                        , temp_line.vel, temp_pro_option, 0)
                                                         + "\n"
                                                    ).toStdString().c_str());
                            }
                            if(temp_line.vel <0){
                                fprintf(fp, QString("\t" + Script_Move_PRO_Add(temp_line.tcp[0], temp_line.tcp[1], temp_line.tcp[2], temp_line.tcp[3], temp_line.tcp[4], temp_line.tcp[5]
                                                                        , temp_line.vel*-1, temp_pro_option, 0)
                                                         + "\n"
                                                    ).toStdString().c_str());
                            }

                        }else{
                            if(setting_is_tig_welder){
                                int will_use_wire = (int)(round(welding_data.at(i+1).wire_para[0]));
                                if(will_use_wire){
                                    fprintf(fp, QString(Script_rb_xyz_value_shift(temp_line.xx,temp_line.yy,temp_line.zz)+"\n").toStdString().c_str());
                                    fprintf(fp, QString("\t" + Script_Move_PRO_Add(temp_line.tcp[0], temp_line.tcp[1], temp_line.tcp[2], temp_line.tcp[3], temp_line.tcp[4], temp_line.tcp[5]
                                                                            , temp_line.vel, temp_pro_option, 0)
                                                             + Script_Move_PRO_Add_Script(Script_JCT_Set(welding_data.at(i+1).current, 1, 0, welding_data.at(i+1).voltage, welding_data.at(i+1).w_persent))
                                                             + "\n"
                                                        ).toStdString().c_str());
                                }else{
                                    fprintf(fp, QString(Script_rb_xyz_value_shift(temp_line.xx,temp_line.yy,temp_line.zz)+"\n").toStdString().c_str());
                                    fprintf(fp, QString("\t" + Script_Move_PRO_Add(temp_line.tcp[0], temp_line.tcp[1], temp_line.tcp[2], temp_line.tcp[3], temp_line.tcp[4], temp_line.tcp[5]
                                                                            , temp_line.vel, temp_pro_option, 0)
                                                             + Script_Move_PRO_Add_Script(Script_JCT_Set(welding_data.at(i+1).current, 1, 0, 0, welding_data.at(i+1).w_persent))
                                                             + "\n"
                                                        ).toStdString().c_str());
                                }
                            }else{
                                if(data_weld_type != 3){
                                    fprintf(fp, QString(Script_rb_xyz_value_shift(temp_line.xx,temp_line.yy,temp_line.zz)+"\n").toStdString().c_str());
                                    if(temp_line.vel >=0){
                                        fprintf(fp, QString("\t" + Script_Move_PRO_Add(temp_line.tcp[0], temp_line.tcp[1], temp_line.tcp[2], temp_line.tcp[3], temp_line.tcp[4], temp_line.tcp[5]
                                                                                , temp_line.vel, temp_pro_option, 0)
                                                                 + Script_Move_PRO_Add_Script(Script_JCT_Set(welding_data.at(i+1).current, 1, welding_data.at(i+1).voltage, -1,welding_data.at(i+1).w_persent))
                                                                 + "\n"
                                                            ).toStdString().c_str());
                                        }
                                    if(temp_line.vel <0){
                                        fprintf(fp, QString("\t" + Script_Move_PRO_Add(temp_line.tcp[0], temp_line.tcp[1], temp_line.tcp[2], temp_line.tcp[3], temp_line.tcp[4], temp_line.tcp[5]
                                                                                , temp_line.vel*-1, temp_pro_option, 0)
                                                                 + Script_Move_PRO_Add_Script(Script_JCT_Set(welding_data.at(i+1).current, 1, welding_data.at(i+1).voltage, -1,welding_data.at(i+1).w_persent))
                                                                 + "\n"
                                                            ).toStdString().c_str());
                                    }
                                }
                                if(data_weld_type == 3){
                                    fronius_job = (int)welding_data.at(i+1).current; // 프로니우스
                                    fprintf(fp, QString(Script_rb_xyz_value_shift(temp_line.xx,temp_line.yy,temp_line.zz)+"\n").toStdString().c_str());
                                    if(temp_line.vel >=0){
                                        fprintf(fp, QString("\t" + Script_Move_PRO_Add(temp_line.tcp[0], temp_line.tcp[1], temp_line.tcp[2], temp_line.tcp[3], temp_line.tcp[4], temp_line.tcp[5]
                                                                                , temp_line.vel, temp_pro_option, 0)
                                                                 + Script_Move_PRO_Add_Script(Script_action_dout(fronius_job))
                                                                 + "\n"
                                                            ).toStdString().c_str());
                                        }
                                    if(temp_line.vel <0){
                                        fprintf(fp, QString("\t" + Script_Move_PRO_Add(temp_line.tcp[0], temp_line.tcp[1], temp_line.tcp[2], temp_line.tcp[3], temp_line.tcp[4], temp_line.tcp[5]
                                                                                , temp_line.vel*-1, temp_pro_option, 0)
                                                                 + Script_Move_PRO_Add_Script(Script_action_dout(fronius_job))
                                                                 + "\n"
                                                            ).toStdString().c_str());
                                    }

                                }
                            }
                        }
                        fprintf(fp, "}\n");
                    }
                    if(data_axis7 == 1){
                        if(is_this_last_line || is_next_command_pro == false){
                            fprintf(fp, QString(Script_rb_xyz_value_shift(temp_line.xx,temp_line.yy,temp_line.zz)+"\n").toStdString().c_str());
                            fprintf(fp, QString(Script_move_waypoint(3,temp_pro_option,temp_line.vel,arc_accel,0.4,0.1,temp_line.joint[0],temp_line.joint[1],temp_line.joint[2],temp_line.joint[3],temp_line.joint[4],temp_line.joint[5]
                                                ,temp_line.tcp[0],temp_line.tcp[1],temp_line.tcp[2],temp_line.tcp[3],temp_line.tcp[4],temp_line.tcp[5]
                                                ,temp_line.a_axis_para[0],temp_line.a_axis_para[1],temp_line.a_axis_para[2])+ "\n").toStdString().c_str());

                        }else{
                            fprintf(fp, QString(Script_rb_xyz_value_shift(temp_line.xx,temp_line.yy,temp_line.zz)+"\n").toStdString().c_str());
                            fprintf(fp, QString(Script_move_waypoint(3,temp_pro_option,temp_line.vel,arc_accel,0.4,0.1,temp_line.joint[0],temp_line.joint[1],temp_line.joint[2],temp_line.joint[3],temp_line.joint[4],temp_line.joint[5]
                                                ,temp_line.tcp[0],temp_line.tcp[1],temp_line.tcp[2],temp_line.tcp[3],temp_line.tcp[4],temp_line.tcp[5]
                                                ,temp_line.a_axis_para[0],temp_line.a_axis_para[1],temp_line.a_axis_para[2])
                                    + Script_Move_PRO_Add_Script(Script_JCT_Set(welding_data.at(i+1).current, 1, welding_data.at(i+1).voltage, -1,welding_data.at(i+1).w_persent))
                                    + "\n"
                               ).toStdString().c_str());
                        }
                        // 부가축 tig x
                    }

                    if(is_this_last_line || is_next_command_pro == false){
                        // + run
                        if(data_axis7 == 0){
                            fprintf(fp, "script {\n");
                            fprintf(fp, QString("\t" + Script_Move_PRO_Run(arc_accel, 0) + "\n").toStdString().c_str());
                            fprintf(fp, "}\n");
                        }
                        if(data_axis7 == 1){
                            fprintf(fp, QString(Script_move_waypoint(4,temp_pro_option,temp_line.vel,arc_accel,0.4,0.1,temp_line.joint[0],temp_line.joint[1],temp_line.joint[2],temp_line.joint[3],temp_line.joint[4],temp_line.joint[5]
                                                ,temp_line.tcp[0],temp_line.tcp[1],temp_line.tcp[2],temp_line.tcp[3],temp_line.tcp[4],temp_line.tcp[5]
                                                ,temp_line.a_axis_para[0],temp_line.a_axis_para[1],temp_line.a_axis_para[2])+ "\n").toStdString().c_str());
                        }

                        if(setting_is_tig_welder){
                            int will_use_wire = (int)(round(temp_line.wire_para[0]));

                            fprintf(fp, QString(Script_Arc_Off(0, temp_line.arc_off_para[0], 1, 0, temp_line.arc_off_para[2], 0) + "\n").toStdString().c_str());
                            if(data_weld_type == 3){
                                fprintf(fp, QString(Script_Wait_Time(temp_line.wait_time) + "\n").toStdString().c_str()); // 프로니우스
                                fprintf(fp,"script {\n");
                                fprintf(fp,"\tair_sig_flag=1\n");
                                fprintf(fp,"}\n");
                            }
                            if(will_use_wire){
                                fprintf(fp, "script {\n");
                                fprintf(fp, QString("\t" + Script_JCT_TIG_WIRE(0) + "\n").toStdString().c_str());
                                fprintf(fp, "}\n");
                                fprintf(fp, QString(Script_Digital_Out(DOUT_PORT_TIG_WELDER, 0) + "\n").toStdString().c_str());
                                fprintf(fp, QString(Script_SpeedBar(100) + "\n").toStdString().c_str());
                            }
                        }else{
                            //240104
                            fprintf(fp, "script {\n");
                            fprintf(fp, "\ticv_off()\n");
                            fprintf(fp, "}\n");
                            //
                            fprintf(fp, QString(Script_Arc_Off(0, temp_line.arc_off_para[0], 1, temp_line.arc_off_para[1], temp_line.arc_off_para[2], 0) + "\n").toStdString().c_str());
                            if(data_weld_type == 3){
                                fprintf(fp, QString(Script_Wait_Time(temp_line.wait_time) + "\n").toStdString().c_str()); // 프로니우스
                                fprintf(fp,"script {\n");
                                fprintf(fp,"\tair_sig_flag=1\n");
                                fprintf(fp,"}\n");
                            }
                            fprintf(fp, QString(Script_SpeedBar(100) + "\n").toStdString().c_str());
                        }
                    }
                    break;

                }
                    // 1점 용접 부가축 용접
                case WEL_CMD_ONEPOINT_WELD:
                {
                       if(previous_commnad != WEL_CMD_ONEPOINT_WELD){
                           qDebug()<<"one 1"<<endl;
                           fprintf(fp, QString(Script_rb_xyz_value_shift(temp_line.xx,temp_line.yy,temp_line.zz)+"\n").toStdString().c_str());
                           fprintf(fp, "script {\n");
                           fprintf(fp, QString("\t" + Script_Move_L(temp_line.tcp[0], temp_line.tcp[1], temp_line.tcp[2], temp_line.tcp[3], temp_line.tcp[4], temp_line.tcp[5]
                                                                   , setting_air_move_L_vel, setting_air_move_L_acc) + "\n").toStdString().c_str());
                           fprintf(fp, "}\n");
                           if(data_axis7 == 1){
                               fprintf(fp, QString(Script_aux_motor_move_multi(data_axis7,data_axis8,data_axis9,0,0,0,temp_line.a_axis_para[0],temp_line.a_axis_para[1],temp_line.a_axis_para[2],0,0,0,temp_line.vel,temp_line.vel,temp_line.vel,0,0,0,temp_line.acc,temp_line.acc,temp_line.acc,0,0,0,0)+"\n").toStdString().c_str());
                           }
                           if(setting_is_tig_welder){
                               int will_use_wire = (int)(round(temp_line.wire_para[0]));
                               if(will_use_wire){
                                   fprintf(fp, QString(Script_Digital_Out(DOUT_PORT_TIG_WELDER, 1) + "\n").toStdString().c_str());
                                   fprintf(fp, "script {\n");
                                   fprintf(fp, QString("\t" + Script_JCT_TIG_WIRE(temp_line.arc_on_para[1]) + "\n").toStdString().c_str());
                                   fprintf(fp, "}\n");
                               }
                               if(data_weld_type == 3){
                                   fronius_job = (int)temp_line.current; // 프로니우스
                                   fprintf(fp,"digital_bit_combination_out 4,7,%d,0,0,0\n",fronius_job); // 프로니우스
                               }
                               fprintf(fp, QString(Script_Arc_On(0, temp_line.vel, arc_accel, temp_line.arc_on_para[0], 1, temp_line.arc_on_para[1], VALUE_ARC_WAIT_TIME, temp_line.arc_on_para[2], 1, 1, 0) + "\n").toStdString().c_str());
                               if(will_use_wire){
                                   fprintf(fp, "script {\n");
                                   fprintf(fp, QString("\t" + Script_JCT_TIG_WIRE(temp_line.voltage) + "\n").toStdString().c_str());
                                   fprintf(fp, "}\n");
                               }
                               fprintf(fp, QString(Script_Arc_Set(temp_line.vel, arc_accel, temp_line.current, 1, 0) + "\n").toStdString().c_str());
                           }else{
                               if(data_weld_type == 3){
                                   fronius_job = (int)temp_line.current; // 프로니우스
                                   fprintf(fp,"digital_bit_combination_out 4,7,%d,0,0,0\n",fronius_job); // 프로니우스
                               }
                               fprintf(fp, QString(Script_Arc_On(0, temp_line.vel, arc_accel, temp_line.arc_on_para[0], 1, temp_line.arc_on_para[1], VALUE_ARC_WAIT_TIME, temp_line.arc_on_para[2], 1, 1, 0) + "\n").toStdString().c_str());
                       }
                       }
                       if(is_this_last_line1 == false && is_next_command_pro1 && welding_data.at(i-1).command_option == WEL_CMD_ONEPOINT_WELD){
                           qDebug()<<"one 2"<<endl;
                           fprintf(fp, QString(Script_Arc_Set(temp_line.vel, temp_line.acc, temp_line.current, 1, temp_line.voltage) + "\n").toStdString().c_str());
                           if(data_axis7 == 1){
                               fprintf(fp, QString(Script_aux_motor_move_multi(data_axis7,data_axis8,data_axis9,0,0,0,temp_line.a_axis_para[0],temp_line.a_axis_para[1],temp_line.a_axis_para[2],0,0,0,temp_line.vel,temp_line.vel,temp_line.vel,0,0,0,temp_line.acc,temp_line.acc,temp_line.acc,0,0,0,1)+"\n").toStdString().c_str());
                           }
                           fprintf(fp, QString(Script_rb_xyz_value_shift(temp_line.xx,temp_line.yy,temp_line.zz)+"\n").toStdString().c_str());
                           fprintf(fp, "script {\n");
                           fprintf(fp, QString("\t" + Script_Move_L(temp_line.tcp[0], temp_line.tcp[1], temp_line.tcp[2], temp_line.tcp[3], temp_line.tcp[4], temp_line.tcp[5]
                                                                   , setting_air_move_L_vel, setting_air_move_L_acc) + "\n").toStdString().c_str());
                           fprintf(fp, "}\n");
                       }
                       if(is_this_last_line1 || is_next_command_pro1 == false){
                           qDebug()<<"one 3"<<endl;
                           fprintf(fp, QString(Script_Arc_Set(temp_line.vel, temp_line.acc, temp_line.current, 1, temp_line.voltage) + "\n").toStdString().c_str());
                           if(data_axis7 == 1){
                               fprintf(fp, QString(Script_aux_motor_move_multi(data_axis7,data_axis8,data_axis9,0,0,0,temp_line.a_axis_para[0],temp_line.a_axis_para[1],temp_line.a_axis_para[2],0,0,0,temp_line.vel,temp_line.vel,temp_line.vel,0,0,0,temp_line.acc,temp_line.acc,temp_line.acc,0,0,0,1)+"\n").toStdString().c_str());
                           }
                           fprintf(fp, QString(Script_rb_xyz_value_shift(temp_line.xx,temp_line.yy,temp_line.zz)+"\n").toStdString().c_str());
                           fprintf(fp, "script {\n");
                           fprintf(fp, QString("\t" + Script_Move_L(temp_line.tcp[0], temp_line.tcp[1], temp_line.tcp[2], temp_line.tcp[3], temp_line.tcp[4], temp_line.tcp[5]
                                                                   , setting_air_move_L_vel, setting_air_move_L_acc) + "\n").toStdString().c_str());
                           fprintf(fp, "}\n");
                           fprintf(fp, QString(Script_Arc_Off(0, temp_line.arc_off_para[0], 1, temp_line.arc_off_para[1], temp_line.arc_off_para[2], 0) + "\n").toStdString().c_str());
                           if(data_weld_type == 3){
                               fprintf(fp, QString(Script_Wait_Time(temp_line.wait_time) + "\n").toStdString().c_str()); // 프로니우스
                               fprintf(fp,"script {\n");
                               fprintf(fp,"\tair_sig_flag=1\n");
                               fprintf(fp,"}\n");
                           }
                       }
                            qDebug()<<"one end"<<endl;
                          break;
                       }
                default:
                    break;
                }

                previous_commnad = temp_line.command_option;
            }
        }
    }

    if(mode_type==3){
        if(ui->LE_D_0_data_0->text() == "1"){ // 한독
            fprintf(fp, "script {\n");
            fprintf(fp, QString("\t" + Script_Move_J(home_axis0, home_axis1, home_axis2, home_axis3, home_axis4, home_axis5
                                                , setting_air_move_J_vel, setting_air_move_J_acc) + "\n").toStdString().c_str());
            fprintf(fp, "}\n");
            if(data_axis7 == 1){
                fprintf(fp, QString(Script_aux_motor_move_multi(data_axis7,data_axis8,data_axis9,0,0,0,home_axis6,home_axis7,home_axis8,0,0,0,setting_air_Axis_0_vel,setting_air_Axis_1_vel,setting_air_Axis_2_vel,0,0,0,setting_air_Axis_0_acc,setting_air_Axis_1_acc,setting_air_Axis_2_acc,0,0,0,0)+"\n").toStdString().c_str());
            }
            fprintf(fp,"repeat (-1 times) {\n");

            fprintf(fp,"\tif (btn_lh_sig_flag==1) {\n");
            fprintf(fp,"\t\tscript {\n");
            fprintf(fp,"\t\t\tbtn_lh_sig_flag=2\n");
            fprintf(fp,"\t\t}\n");
            fprintf(fp, "\t}\n");

            fprintf(fp,"\tif (btn_lh_sig_flag==2) {\n");
            if(data_axis7 == 1 && data_axis8 == 0 && data_axis9 == 0){
                fprintf(fp,"\t\tdigital_out -1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,-1,-1\n");
            }
            if(data_axis7 == 1 && data_axis8 == 1 && data_axis9 == 1){
                fprintf(fp,"\t\tdigital_out -1,-1,1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\n");
            }
            fprintf(fp, "\tscript {\n");
            fprintf(fp, "\t\tset_jct_handok_mode(0,0)\n");
            fprintf(fp, "}\t\n");
            fprintf(fp,"\t\tsubp my_jct_program_LH\n");
            if(data_axis7 == 1 && data_axis8 == 0 && data_axis9 == 0){
                fprintf(fp,"\t\tdigital_out -1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,1,0,1,1\n");
            }
            if(data_axis7 == 1 && data_axis8 == 1 && data_axis9 == 1){
                fprintf(fp,"\t\tdigital_out -1,-1,0,-1,1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\n");
            }
            fprintf(fp,"\t\twait (1.0 sec)\n");
            if(data_axis7 == 1 && data_axis8 == 0 && data_axis9 == 0){
                fprintf(fp,"\t\tdigital_out -1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,0,0\n");
            }
            if(data_axis7 == 1 && data_axis8 == 1 && data_axis9 == 1){
                fprintf(fp,"\t\tdigital_out -1,-1,0,-1,0,0,0,0,-1,-1,-1,-1,-1,-1,-1,-1\n");
            }
            fprintf(fp,"\t\tscript {\n");
            fprintf(fp,"\t\t\tbtn_lh_sig_flag=0\n");
            fprintf(fp,"\t\t}\n");
            fprintf(fp, "\t}\n");

            fprintf(fp,"\tif (btn_rh_sig_flag==1) {\n");
            fprintf(fp,"\t\tscript {\n");
            fprintf(fp,"\t\t\tbtn_rh_sig_flag=2\n");
            fprintf(fp,"\t\t}\n");
            fprintf(fp, "\t}\n");

            fprintf(fp,"\tif (btn_rh_sig_flag==2) {\n");
            if(data_axis7 == 1 && data_axis8 == 0 && data_axis9 == 0){
                fprintf(fp,"\t\tdigital_out -1,-1,1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\n");
            }
            if(data_axis7 == 1 && data_axis8 == 1 && data_axis9 == 1){
                fprintf(fp,"\t\tdigital_out -1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,-1,-1\n");
            }
            fprintf(fp, "\tscript {\n");
            fprintf(fp, "\t\tset_jct_handok_mode(1,1)\n");
            fprintf(fp, "}\t\n");
            fprintf(fp,"\t\tsubp my_jct_program_RH\n");
            if(data_axis7 == 1 && data_axis8 == 0 && data_axis9 == 0){
                fprintf(fp,"\t\tdigital_out -1,-1,0,-1,1,0,1,1,-1,-1,-1,-1,-1,-1,-1,-1\n");
            }
            if(data_axis7 == 1 && data_axis8 == 1 && data_axis9 == 1){
                fprintf(fp,"\t\tdigital_out -1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,1,0,-1,-1\n");
            }
            fprintf(fp,"\t\twait (1.0 sec)\n");
            if(data_axis7 == 1 && data_axis8 == 0 && data_axis9 == 0){
                fprintf(fp,"\t\tdigital_out -1,-1,0,-1,0,0,0,0,-1,-1,-1,-1,-1,-1,-1,-1\n");
            }
            if(data_axis7 == 1 && data_axis8 == 1 && data_axis9 == 1){
                fprintf(fp,"\t\tdigital_out -1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,0,0\n");
            }
            fprintf(fp,"\t\tscript {\n");
            fprintf(fp,"\t\t\tbtn_rh_sig_flag=0\n");
            fprintf(fp,"\t\t}\n");
            fprintf(fp, "\t}\n");

            fprintf(fp, "}\n");
        }
        //
        if(ui->LE_D_0_data_0->text() == "2"){ // JIG1,JIG2,JIG3
            fprintf(fp, "script {\n");
            fprintf(fp, QString("\t" + Script_Move_J(home_axis0, home_axis1, home_axis2, home_axis3, home_axis4, home_axis5
                                                , setting_air_move_J_vel, setting_air_move_J_acc) + "\n").toStdString().c_str());
            fprintf(fp, "}\n");
            if(data_axis7 == 1){
                fprintf(fp, QString(Script_aux_motor_move_multi(data_axis7,data_axis8,data_axis9,0,0,0,home_axis6,home_axis7,home_axis8,0,0,0,setting_air_Axis_0_vel,setting_air_Axis_1_vel,setting_air_Axis_2_vel,0,0,0,setting_air_Axis_0_acc,setting_air_Axis_1_acc,setting_air_Axis_2_acc,0,0,0,0)+"\n").toStdString().c_str());
            }
            fprintf(fp,"repeat (-1 times) {\n");
            // JIG1
            fprintf(fp,"\tif (btn_jig1_sig_flag==1) {\n");
            fprintf(fp,"\t\tscript {\n");
            fprintf(fp,"\t\t\tbtn_jig1_sig_flag=2\n");
            fprintf(fp,"\t\t}\n");
            fprintf(fp, "\t}\n");

            fprintf(fp,"\tif (btn_jig1_sig_flag==2) {\n");
            fprintf(fp,"\t\tdigital_out -1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\n");
            fprintf(fp,"\t\tsubp my_jct_program_JIG1\n");
            fprintf(fp,"\t\tdigital_out -1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\n");

            fprintf(fp,"\t\tscript {\n");
            fprintf(fp,"\t\t\tbtn_jig1_sig_flag=0\n");
            fprintf(fp,"\t\t}\n");
            fprintf(fp, "\t}\n");
            // JIG2
            fprintf(fp,"\tif (btn_jig2_sig_flag==1) {\n");
            fprintf(fp,"\t\tscript {\n");
            fprintf(fp,"\t\t\tbtn_jig2_sig_flag=2\n");
            fprintf(fp,"\t\t}\n");
            fprintf(fp, "\t}\n");

            fprintf(fp,"\tif (btn_jig2_sig_flag==2) {\n");
            fprintf(fp,"\t\tdigital_out -1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\n");
            fprintf(fp,"\t\tsubp my_jct_program_JIG2\n");
            fprintf(fp,"\t\tdigital_out -1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\n");

            fprintf(fp,"\t\tscript {\n");
            fprintf(fp,"\t\t\tbtn_jig2_sig_flag=0\n");
            fprintf(fp,"\t\t}\n");
            fprintf(fp, "\t}\n");

            // JIG3
            fprintf(fp,"\tif (btn_jig3_sig_flag==1) {\n");
            fprintf(fp,"\t\tscript {\n");
            fprintf(fp,"\t\t\tbtn_jig3_sig_flag=2\n");
            fprintf(fp,"\t\t}\n");
            fprintf(fp, "\t}\n");

            fprintf(fp,"\tif (btn_jig3_sig_flag==2) {\n");
            fprintf(fp,"\t\tdigital_out -1,-1,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1\n");
            fprintf(fp,"\t\tsubp my_jct_program_JIG3\n");
            fprintf(fp,"\t\tdigital_out -1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1\n");

            fprintf(fp,"\t\tscript {\n");
            fprintf(fp,"\t\t\tbtn_jig3_sig_flag=0\n");
            fprintf(fp,"\t\t}\n");
            fprintf(fp, "\t}\n");

            fprintf(fp, "}\n");
        }
        if(ui->LE_D_0_data_0->text() == "3"){ // 한독
            fprintf(fp, "script {\n");
            fprintf(fp, QString("\t" + Script_Move_J(home_axis0, home_axis1, home_axis2, home_axis3, home_axis4, home_axis5
                                                                                                   , setting_air_move_J_vel, setting_air_move_J_acc) + "\n").toStdString().c_str());
           fprintf(fp, "}\n");
           if(data_axis7 == 1){
               fprintf(fp, QString(Script_aux_motor_move_multi(data_axis7,data_axis8,data_axis9,0,0,0,home_axis6,home_axis7,home_axis8,0,0,0,setting_air_Axis_0_vel,setting_air_Axis_1_vel,setting_air_Axis_2_vel,0,0,0,setting_air_Axis_0_acc,setting_air_Axis_1_acc,setting_air_Axis_2_acc,0,0,0,0)+"\n").toStdString().c_str());
           }
           fprintf(fp,"repeat (-1 times) {\n");

           fprintf(fp,"\tif (btn_lh_sig_flag==1) {\n");
           fprintf(fp,"\t\tscript {\n");
           fprintf(fp,"\t\t\tbtn_lh_sig_flag=2\n");
           fprintf(fp,"\t\t}\n");
           fprintf(fp, "\t}\n");

           fprintf(fp,"\tif (btn_lh_sig_flag==2) {\n");
           fprintf(fp,"\t\tdigital_out -1,-1,1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\n");
           fprintf(fp, "\tscript {\n");
           fprintf(fp, "\t\tset_jct_handok_mode(0,0)\n");
           fprintf(fp, "}\t\n");
           fprintf(fp,"\t\tsubp my_jct_program_LH\n");
           fprintf(fp,"\t\tdigital_out -1,-1,0,-1,1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\n");

           fprintf(fp,"\t\twait (1.0 sec)\n");
           fprintf(fp,"\t\tdigital_out -1,-1,0,-1,0,0,0,0,-1,-1,-1,-1,-1,-1,-1,-1\n");

           fprintf(fp,"\t\tscript {\n");
           fprintf(fp,"\t\t\tbtn_lh_sig_flag=0\n");
           fprintf(fp,"\t\t}\n");
           fprintf(fp, "\t}\n");

           fprintf(fp,"\tif (btn_rh_sig_flag==1) {\n");
           fprintf(fp,"\t\tscript {\n");
           fprintf(fp,"\t\t\tbtn_rh_sig_flag=2\n");
           fprintf(fp,"\t\t}\n");
           fprintf(fp, "\t}\n");

           fprintf(fp,"\tif (btn_rh_sig_flag==2) {\n");
           fprintf(fp,"\t\tdigital_out -1,-1,1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\n");
           fprintf(fp, "\tscript {\n");
           fprintf(fp, "\t\tset_jct_handok_mode(0,0)\n");
           fprintf(fp, "}\t\n");
           fprintf(fp,"\t\tsubp my_jct_program_RH\n");
           fprintf(fp,"\t\tdigital_out -1,-1,0,-1,1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\n");
           fprintf(fp,"\t\twait (1.0 sec)\n");
           fprintf(fp,"\t\tdigital_out -1,-1,0,-1,0,0,0,0,-1,-1,-1,-1,-1,-1,-1,-1\n");

           fprintf(fp,"\t\tscript {\n");
           fprintf(fp,"\t\t\tbtn_rh_sig_flag=0\n");
           fprintf(fp,"\t\t}\n");
           fprintf(fp, "\t}\n");

           fprintf(fp, "}\n");
       }

    }
    if(mode_type == 100){
        if(file_load_no_1 == 1)
        {
            fprintf(fp,"subp jct_file1\n");
        }
        if(file_load_no_2 == 1)
        {
            fprintf(fp,"subp jct_file2\n");
        }
        if(file_load_no_3 == 1)
        {
            fprintf(fp,"subp jct_file3\n");
        }
        if(file_load_no_4 == 1)
        {
            fprintf(fp,"subp jct_file4\n");
        }
        if(file_load_no_5 == 1)
        {
            fprintf(fp,"subp jct_file5\n");
        }
        if(file_load_no_6 == 1)
        {
            fprintf(fp,"subp jct_file6\n");
        }
        if(file_load_no_7 == 1)
        {
            fprintf(fp,"subp jct_file7\n");
        }
        if(file_load_no_8 == 1)
        {
            fprintf(fp,"subp jct_file8\n");
        }
        if(file_load_no_9 == 1)
        {
            fprintf(fp,"subp jct_file9\n");
        }
        if(file_load_no_10 == 1)
        {
            fprintf(fp,"subp jct_file10\n");
        }

    }

    fprintf(fp, "end");
    fprintf(fp, Script_Thread().toStdString().c_str());
    fprintf(fp, Script_Post_Program().toStdString().c_str());
    fclose(fp);
    fflush(fp);
    qDebug() << "WSL is Made";
}

QString MainWindow::Script_Wait_Time(float TIME){
    // TIME (sec)
    QString text;
    text.sprintf("wait (%.2f sec)", TIME);
    return text;
}

QString MainWindow::Script_Wait_Digital_Input(int port_num){
    QString text;
    text.sprintf("wait (SD_DIGITAL_IN_%d out)", port_num);
    return text;
}

QString MainWindow::Script_SpeedBar(int percentage){
    // Speed bar
    // percentage ( 0 ~ 100)
    if(percentage < 0)
        percentage = 0;
    if(percentage > 100)
        percentage = 100;

    QString text;
    text.sprintf("set rb_global_vel_bar %d", percentage);
    return text;
}

QString MainWindow::Script_Digital_Out(int portnum, int high_low){
    if(portnum > 15){
        portnum = -1;
        high_low = -1;
    }

    if(high_low > 1)
        high_low = 1;
    if(high_low < 0)
        high_low = -1;

    int temp_output[16] = {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1};

    if(portnum < 0){
        for(int k=0; k<16; k++){
            temp_output[k] = high_low;
        }
    }else{
        temp_output[portnum] = high_low;
    }

    QString text;
    text.sprintf("digital_out %d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d", temp_output[0], temp_output[1], temp_output[2], temp_output[3], temp_output[4], temp_output[5], temp_output[6], temp_output[7], temp_output[8], temp_output[9], temp_output[10], temp_output[11], temp_output[12], temp_output[13], temp_output[14], temp_output[15]);
    return text;
}

QString MainWindow::Script_Move_J(float J0, float J1, float J2, float J3, float J4, float J5, float VEL, float ACC){
    // Target : deg
    // VEL (deg/s)
    // ACC (deg/ss)
    QString text;
    text.sprintf("move_j(jnt[%.3f,%.3f,%.3f,%.3f,%.3f,%.3f],%.3f,%.3f)", J0, J1, J2, J3, J4, J5, VEL, ACC);
    return text;
}

QString MainWindow::Script_Move_L(float X, float Y, float Z, float RX, float RY, float RZ, float VEL, float ACC){
    // Target : mm and deg
    // VEL (mm/s)
    // ACC (mm/ss)
    QString text;
    text.sprintf("move_l(pnt[%.3f,%.3f,%.3f,%.3f,%.3f,%.3f],%.3f,%.3f)", X, Y, Z, RX, RY, RZ, VEL, ACC);
    return text;
}

QString MainWindow::Script_Move_PRO_Clear(void){
    QString text = "move_pro_clear()";
    return text;
}

QString MainWindow::Script_Move_PRO_Add(float X, float Y, float Z, float RX, float RY, float RZ, float VEL, int OPTION, float OPTION_PARA){
    // VEL (mm/s)

    // OPTION
    // 0 = L point
    // 1 = C point
    // 2 = B point (dist)
    // 3 = B point (%)

    // OPTION_PARA
    // mm or %
    QString text;
    text.sprintf("move_pro_add(pnt[%.3f,%.3f,%.3f,%.3f,%.3f,%.3f],%.3f,%d,%.3f)", X, Y, Z, RX, RY, RZ, VEL, OPTION, OPTION_PARA);
    return text;
}

QString MainWindow::Script_Move_PRO_Run(float ACC, int OPTION_ORIENTATION){
    // ACC (mm/ss)
    // OPTION_ORIENTATION
    // 0 = user input
    // 1 = constant
    // 2 = DO NOT USE
    // 3 = smooth

    QString text;
    text.sprintf("move_pro_run(%.3f, %d)", ACC, OPTION_ORIENTATION);
    return text;
}

QString MainWindow::Script_Move_PRO_Add_Script(QString my_script){
    QString text = " add_point_script(" + my_script + ")";
    return text;
}
QString MainWindow::Script_action_dout(int val)
{
    int dout_7 = 0;
    int dout_6 = 0;
    int dout_5 = 0;
    int dout_4 = 1;
    if(val < 16){
        switch (val) {
        case 15:
            dout_7 = 1;
            dout_6 = 1;
            dout_5 = 1;
            dout_4 = 1;
            break;
        case 14:
            dout_7 = 1;
            dout_6 = 1;
            dout_5 = 1;
            dout_4 = 0;
            break;
        case 13:
            dout_7 = 1;
            dout_6 = 1;
            dout_5 = 0;
            dout_4 = 1;
            break;
        case 12:
            dout_7 = 1;
            dout_6 = 1;
            dout_5 = 0;
            dout_4 = 0;
            break;
        case 11:
            dout_7 = 1;
            dout_6 = 0;
            dout_5 = 1;
            dout_4 = 1;
            break;
        case 10:
            dout_7 = 1;
            dout_6 = 0;
            dout_5 = 1;
            dout_4 = 0;
            break;
        case 9:
            dout_7 = 1;
            dout_6 = 0;
            dout_5 = 0;
            dout_4 = 1;
            break;
        case 8:
            dout_7 = 1;
            dout_6 = 0;
            dout_5 = 0;
            dout_4 = 0;
            break;
        case 7:
            dout_7 = 0;
            dout_6 = 1;
            dout_5 = 1;
            dout_4 = 1;
            break;
        case 6:
            dout_7 = 0;
            dout_6 = 1;
            dout_5 = 1;
            dout_4 = 0;
            break;
        case 5:
            dout_7 = 0;
            dout_6 = 1;
            dout_5 = 0;
            dout_4 = 1;
            break;
        case 4:
            dout_7 = 0;
            dout_6 = 1;
            dout_5 = 0;
            dout_4 = 0;
            break;
        case 3:
            dout_7 = 0;
            dout_6 = 0;
            dout_5 = 1;
            dout_4 = 1;
            break;
        case 2:
            dout_7 = 0;
            dout_6 = 0;
            dout_5 = 1;
            dout_4 = 0;
            break;
        case 1:
            dout_7 = 0;
            dout_6 = 0;
            dout_5 = 0;
            dout_4 = 1;
            break;
        default:
            break;
        }
    }
    QString text;
    text.sprintf("script_action_dout(-1,-1,-1,-1,%d,%d,%d,%d,-1,-1,-1,-1,-1,-1,-1,-1)",dout_4,dout_5,dout_6,dout_7);
    return text;
}

QString MainWindow::Script_JCT_Set(float weld_A, int weld_V_option, float weld_V, float tig_wire_speed, int w_persent){
    // weld_A
    // (0~ 999 A ..용접전류)

    // weld_V_option
    // 0 = 전류 대비 offset
    // 1 = 사용자 정의 사용

    // weld_V
    // 전압값

    // tig_wire_speed
    // 음수 (-1)이면 wire 사용안함..... 0~999 넣으면 와이어 속도

    if(data_weld_type != 4)
    {
        QString text;
        text.sprintf("jct_arc_set_1(%.2f,%d,%.2f,%.2f,%d)", weld_A, weld_V_option, weld_V, tig_wire_speed, w_persent);
        return text;
    }
    if(data_weld_type == 4)
    {
        float sync_volt = (((weld_V/10)-5)*4.2);
        if(sync_volt <= 10){
            sync_volt = 10;
        }
        if(sync_volt >= 42)
        {
            sync_volt = 42;
        }
        QString text;
        text.sprintf("jct_arc_set_1(%.2f,%d,%.2f,%.2f,%d)", weld_A, weld_V_option, sync_volt, tig_wire_speed, w_persent);
        return text;
    }
}

QString MainWindow::Script_JCT_TIG_WIRE(float vel){
    QString text;
    text.sprintf("jct_tig_wire_out(%.2f)", vel);
    return text;
}

QString MainWindow::Script_Thread(void){
    if(ui->LE_D_0_data_0->text()=="0"){
        QString text;
        text += "\n";
        text += "nonstop_thread {\n";
        text += "\trepeat (-1 times) {\n";
        text += "\t\t" + Script_Wait_Time(0.5) + "\n";
        text += "\t\tif (wait_sig_flag == 1 || _ROM_9 == 1) {\n";
        text += "\t\t\tdigital_sig_toggle_out 1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\n";
        text += "\t\t}\n";
        if(data_weld_type == 3){
            if(data_axis7 == 1 && data_axis8 == 1)
            {
                text += "\t\tif (air_sig_flag==1) {\n";
                text += "\t\t\tif (SD_DIGITAL_IN_1==0){\n";
                text += "\t\t\t\tdigital_out -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,-1,-1,-1\n";
                text += "\t\t\t}\n";
                text += "\t\t\t" + Script_Wait_Time(1) + "\n";
                text += "\t\t\tdigital_out -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1\n";
                text += "\t\t\tscript {\n";
                text += "\t\t\t\tair_sig_flag=0\n";
                text += "\t\t\t}\n";
                text += "\t\t}\n";
            }
            if(data_axis7 == 0 && data_axis8 == 0)
            {
                text += "\t\tif (air_sig_flag==1) {\n";
                text += "\t\t\tif (SD_DIGITAL_IN_1==0){\n";
                text += "\t\t\t\tdigital_out -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\n";
                text += "\t\t\t}\n";
                text += "\t\t\t" + Script_Wait_Time(1) + "\n";
                text += "\t\t\tdigital_out -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\n";
                text += "\t\t\tscript {\n";
                text += "\t\t\t\tair_sig_flag=0\n";
                text += "\t\t\t}\n";
                text += "\t\t}\n";
            }

        }
        if(ui->LE_D_0_data_5->text()=="1"){
            text += "\t\tif (SD_DIGITAL_OUT_8 == 0){\n";
            text += "\t\t\ttool_out -1,0,0\n";
            text += "\t\t}\n";
            text += "\t\tif (SD_DIGITAL_OUT_8 == 1){\n";
            text += "\t\t\ttool_out -1,1,-1\n";
            text += "\t\t}\n";
        }
        text += "\t}\n";
        text +="}";

        return text;
    }

    if(ui->LE_D_0_data_0->text()=="1"){
        QString text;
        text += "\n";
        text += "nonstop_thread {\n";
        text += "\trepeat (-1 times) {\n";
        text += "\t\t" + Script_Wait_Time(0.5) + "\n";
        text += "\t\tif (wait_sig_flag) {\n";
        text += "\t\t\tdigital_sig_toggle_out 1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\n";
        text += "\t\t}\n";
        if(data_axis7 == 1 && data_axis8 == 0 && data_axis9 == 0){
            text += "\t\tif (btn_rh_sig_flag==0 && SD_DIGITAL_IN_7==True) {\n";
        }
        if(data_axis7 == 1 && data_axis8 == 1 && data_axis9 == 1){
            text += "\t\tif (btn_lh_sig_flag==0 && SD_DIGITAL_IN_7==True) {\n";
        }
        text += "\t\t\tscript {\n";
        if(data_axis7 == 1 && data_axis8 == 0 && data_axis9 == 0){
            text += "\t\t\t\tbtn_rh_sig_flag=1\n";
        }
        if(data_axis7 == 1 && data_axis8 == 1 && data_axis9 == 1){
            text += "\t\t\t\tbtn_lh_sig_flag=1\n";
        }
        text += "\t\t\t}\n";
        text += "\t\t\twait (0.3 sec)\n";
        text += "\t\t}\n";
        if(data_axis7 == 1 && data_axis8 == 0 && data_axis9 == 0){
            text += "\t\tif (btn_lh_sig_flag==0 && SD_DIGITAL_IN_10==True) {\n";
        }
        if(data_axis7 == 1 && data_axis8 == 1 && data_axis9 == 1){
            text += "\t\tif (btn_rh_sig_flag==0 && SD_DIGITAL_IN_10==True) {\n";
        }
        text += "\t\t\tscript {\n";
        if(data_axis7 == 1 && data_axis8 == 0 && data_axis9 == 0){
            text += "\t\t\t\tbtn_lh_sig_flag=1\n";
        }
        if(data_axis7 == 1 && data_axis8 == 1 && data_axis9 == 1){
            text += "\t\t\t\tbtn_rh_sig_flag=1\n";
        }
        text += "\t\t\t}\n";
        text += "\t\t\twait (0.3 sec)\n";
        text += "\t\t}\n";

        if(data_axis7 == 1 && data_axis8 == 0 && data_axis9 == 0){
            text += "\t\tif (btn_rh_sig_flag==1 && SD_DIGITAL_IN_7==True) {\n";
        }
        if(data_axis7 == 1 && data_axis8 == 1 && data_axis9 == 1){
            text += "\t\tif (btn_lh_sig_flag==1 && SD_DIGITAL_IN_7==True) {\n";
        }
        text += "\t\t\tscript {\n";
        if(data_axis7 == 1 && data_axis8 == 0 && data_axis9 == 0){
            text += "\t\t\t\tbtn_rh_sig_flag=3\n";
        }
        if(data_axis7 == 1 && data_axis8 == 1 && data_axis9 == 1){
            text += "\t\t\t\tbtn_lh_sig_flag=3\n";
        }
        text += "\t\t\t}\n";
        text += "\t\t\twait (0.3 sec)\n";
        text += "\t\t}\n";

        if(data_axis7 == 1 && data_axis8 == 0 && data_axis9 == 0){
            text += "\t\tif (btn_lh_sig_flag==1 && SD_DIGITAL_IN_10==True) {\n";
        }
        if(data_axis7 == 1 && data_axis8 == 1 && data_axis9 == 1){
            text += "\t\tif (btn_rh_sig_flag==1 && SD_DIGITAL_IN_10==True) {\n";
        }
        text += "\t\t\tscript {\n";
        if(data_axis7 == 1 && data_axis8 == 0 && data_axis9 == 0){
            text += "\t\t\t\tbtn_lh_sig_flag=3\n";
        }
        if(data_axis7 == 1 && data_axis8 == 1 && data_axis9 == 1){
            text += "\t\t\t\tbtn_rh_sig_flag=3\n";
        }
        text += "\t\t\t}\n";
        text += "\t\t\twait (0.3 sec)\n";
        text += "\t\t}\n";

        text += "\t\tif (btn_lh_sig_flag==1) {\n";
        if(data_axis7 == 1 && data_axis8 == 0 && data_axis9 == 0){
            text += "\t\t\tdigital_sig_toggle_out -1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\n";
            text += "\t\t\tdigital_out -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,-1,-1\n";
            text += "\t\t\twait (0.3 sec)\n";
            text += "\t\t\tdigital_out -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1\n";
        }
        if(data_axis7 == 1 && data_axis8 == 1 && data_axis9 == 1){
            text += "\t\t\tdigital_sig_toggle_out -1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\n";
            text += "\t\t\tdigital_out -1,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\n";
            text += "\t\t\twait (0.3 sec)\n";
            text += "\t\t\tdigital_out -1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\n";
        }
        text += "\t\t}\n";
        text += "\t\tif (btn_rh_sig_flag==1) {\n";
        if(data_axis7 == 1 && data_axis8 == 0 && data_axis9 == 0){
            text += "\t\t\tdigital_sig_toggle_out -1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\n";
            text += "\t\t\tdigital_out -1,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\n";
            text += "\t\t\twait (0.3 sec)\n";
            text += "\t\t\tdigital_out -1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\n";
        }
        if(data_axis7 == 1 && data_axis8 == 1 && data_axis9 == 1){
            text += "\t\t\tdigital_sig_toggle_out -1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\n";
            text += "\t\t\tdigital_out -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,-1,-1\n";
            text += "\t\t\twait (0.3 sec)\n";
            text += "\t\t\tdigital_out -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1\n";
        }
        text += "\t\t}\n";
        text += "\t\tif (btn_lh_sig_flag==3) {\n";
        if(data_axis7 == 1 && data_axis8 == 0 && data_axis9 == 0){
            text += "\t\t\tdigital_out -1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,1,-1,-1,-1\n";
            text += "\t\t\tscript {\n";
            text += "\t\t\t\tbtn_lh_sig_flag=0\n";
            text += "\t\t\t}\n";
            text += "\t\t\twait (0.3 sec)\n";
            text += "\t\t\tdigital_out -1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1\n";
        }
        if(data_axis7 == 1 && data_axis8 == 1 && data_axis9 == 1){
            text += "\t\t\tdigital_out -1,-1,0,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\n";
            text += "\t\t\tscript {\n";
            text += "\t\t\t\tbtn_lh_sig_flag=0\n";
            text += "\t\t\t}\n";
            text += "\t\t\twait (0.3 sec)\n";
            text += "\t\t\tdigital_out -1,-1,0,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\n";
        }
        text += "\t\t}\n";

        text += "\t\tif (btn_rh_sig_flag==3) {\n";
        if(data_axis7 == 1 && data_axis8 == 0 && data_axis9 == 0){
            text += "\t\t\tdigital_out -1,-1,0,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\n";
            text += "\t\t\tscript {\n";
            text += "\t\t\t\tbtn_rh_sig_flag=0\n";
            text += "\t\t\t}\n";
            text += "\t\t\twait (0.3 sec)\n";
            text += "\t\t\tdigital_out -1,-1,0,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\n";
        }
        if(data_axis7 == 1 && data_axis8 == 1 && data_axis9 == 1){
            text += "\t\t\tdigital_out -1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,1,-1,-1,-1\n";
            text += "\t\t\tscript {\n";
            text += "\t\t\t\tbtn_rh_sig_flag=0\n";
            text += "\t\t\t}\n";
            text += "\t\t\twait (0.3 sec)\n";
            text += "\t\t\tdigital_out -1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1\n";
        }
        text += "\t\t}\n";

        text += "\t}\n";
        text +="}";

        return text;
    }

    if(ui->LE_D_0_data_0->text()=="2"){
        QString text;
        text += "\n";
        text += "nonstop_thread {\n";
        text += "\trepeat (-1 times) {\n";
        text += "\t\t" + Script_Wait_Time(0.5) + "\n";
        text += "\t\tif (wait_sig_flag) {\n";
        text += "\t\t\tdigital_sig_toggle_out 1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\n";
        text += "\t\t}\n";
        //JIG1 = 0
        text += "\t\tif (btn_jig1_sig_flag==0 && SD_DIGITAL_IN_5==True) {\n";
        text += "\t\t\tscript {\n";
        text += "\t\t\t\tbtn_jig1_sig_flag=1\n";
        text += "\t\t\t}\n";
        text += "\t\t}\n";
        //JIG2 = 0
        text += "\t\tif (btn_jig2_sig_flag==0 && SD_DIGITAL_IN_9==True) {\n";
        text += "\t\t\tscript {\n";
        text += "\t\t\t\tbtn_jig2_sig_flag=1\n";
        text += "\t\t\t}\n";
        text += "\t\t}\n";
        //JIG3 = 0
        text += "\t\tif (btn_jig3_sig_flag==0 && SD_DIGITAL_IN_12==True) {\n";
        text += "\t\t\tscript {\n";
        text += "\t\t\t\tbtn_jig3_sig_flag=1\n";
        text += "\t\t\t}\n";
        text += "\t\t}\n";
        //JIG1 = 1
        text += "\t\tif (btn_jig1_sig_flag==1 && SD_DIGITAL_IN_6==True) {\n";
        text += "\t\t\tscript {\n";
        text += "\t\t\t\tbtn_jig1_sig_flag=3\n";
        text += "\t\t\t}\n";
        text += "\t\t}\n";
        //JIG2 = 1
        text += "\t\tif (btn_jig2_sig_flag==1 && SD_DIGITAL_IN_10==True) {\n";
        text += "\t\t\tscript {\n";
        text += "\t\t\t\tbtn_jig2_sig_flag=3\n";
        text += "\t\t\t}\n";
        text += "\t\t}\n";
        //JIG3 = 1
        text += "\t\tif (btn_jig3_sig_flag==1 && SD_DIGITAL_IN_13==True) {\n";
        text += "\t\t\tscript {\n";
        text += "\t\t\t\tbtn_jig3_sig_flag=3\n";
        text += "\t\t\t}\n";
        text += "\t\t}\n";


        text += "\t\tif (btn_jig1_sig_flag==1) {\n";
        text += "\t\t\tdigital_sig_toggle_out -1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\n";
        text += "\t\t}\n";

        text += "\t\tif (btn_jig2_sig_flag==1) {\n";
        text += "\t\t\tdigital_sig_toggle_out -1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\n";
        text += "\t\t}\n";

        text += "\t\tif (btn_jig3_sig_flag==1) {\n";
        text += "\t\t\tdigital_sig_toggle_out -1,-1,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1\n";
        text += "\t\t}\n";

        text += "\t\tif (btn_jig1_sig_flag==3) {\n";
        text += "\t\t\tscript {\n";
        text += "\t\t\t\tbtn_jig1_sig_flag=0\n";
        text += "\t\t\t}\n";
        text += "\t\t\tdigital_out -1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\n";
        text += "\t\t}\n";

        text += "\t\tif (btn_jig2_sig_flag==3) {\n";
        text += "\t\t\tscript {\n";
        text += "\t\t\t\tbtn_jig2_sig_flag=0\n";
        text += "\t\t\t}\n";
        text += "\t\t\tdigital_out -1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\n";
        text += "\t\t}\n";

        text += "\t\tif (btn_jig3_sig_flag==3) {\n";
        text += "\t\t\tscript {\n";
        text += "\t\t\t\tbtn_jig3_sig_flag=0\n";
        text += "\t\t\t}\n";
        text += "\t\t\tdigital_out -1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1\n";
        text += "\t\t}\n";


        text +="\t\tif (btn_jig1_sig_flag==2&&SD_DIGITAL_IN_6==1) {\n";
        text += "\t\t\tdigital_out -1,-1,-1,1,-1,1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1\n";
        text += "\t\t\tset rb_program_flow_control 1\n";
        text += "\t\t}\n";

        text +="\t\tif (btn_jig2_sig_flag==2&&SD_DIGITAL_IN_10==1) {\n";
        text += "\t\t\tdigital_out -1,-1,-1,1,-1,1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1\n";
        text += "\t\t\tset rb_program_flow_control 1\n";
        text += "\t\t}\n";

        text +="\t\tif (btn_jig3_sig_flag==2&&SD_DIGITAL_IN_13==1) {\n";
        text += "\t\t\tdigital_out -1,-1,-1,1,-1,1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1\n";
        text += "\t\t\tset rb_program_flow_control 1\n";
        text += "\t\t}\n";

        text +="\t\tif (SD_OP_STAT_SOFT_ESTOP_OCCUR==1&&SD_DIGITAL_IN_5) {\n";
        text += "\t\t\tdigital_out -1,-1,-1,0,-1,0,-1,0,-1,-1,-1,-1,-1,-1,-1,-1\n";
        text += "\t\t\tset rb_program_flow_control 2\n";
        text += "\t\t}\n";

        text +="\t\tif (SD_OP_STAT_SOFT_ESTOP_OCCUR==1&&SD_DIGITAL_IN_9) {\n";
        text += "\t\t\tdigital_out -1,-1,-1,0,-1,0,-1,0,-1,-1,-1,-1,-1,-1,-1,-1\n";
        text += "\t\t\tset rb_program_flow_control 2\n";
        text += "\t\t}\n";

        text +="\t\tif (SD_OP_STAT_SOFT_ESTOP_OCCUR==1&&SD_DIGITAL_IN_12) {\n";
        text += "\t\t\tdigital_out -1,-1,-1,0,-1,0,-1,0,-1,-1,-1,-1,-1,-1,-1,-1\n";
        text += "\t\t\tset rb_program_flow_control 2\n";
        text += "\t\t}\n";

        text += "\t}\n";
        text +="}";

        return text;
    }
       if(ui->LE_D_0_data_0->text()=="3"){
           QString text;
           text += "\n";
           text += "nonstop_thread {\n";
           text += "\trepeat (-1 times) {\n";
           text += "\t\t" + Script_Wait_Time(0.5) + "\n";
           text += "\t\tif (wait_sig_flag) {\n";
           text += "\t\t\tdigital_sig_toggle_out 1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\n";
           text += "\t\t}\n";

           text += "\t\tif (btn_lh_sig_flag==0 && SD_DIGITAL_IN_7==True) {\n";
           text += "\t\t\tscript {\n";
           text += "\t\t\t\tbtn_lh_sig_flag=1\n";

           text += "\t\t\t}\n";
           text += "\t\t\twait (0.3 sec)\n";
           text += "\t\t}\n";

           text += "\t\tif (btn_lh_sig_flag==1 && SD_DIGITAL_IN_7==True) {\n";

           text += "\t\t\tscript {\n";
           text += "\t\t\t\tbtn_lh_sig_flag=3\n";

           text += "\t\t\t}\n";
           text += "\t\t\twait (0.3 sec)\n";
           text += "\t\t}\n";

           text += "\t\tif (btn_lh_sig_flag==1) {\n";

           text += "\t\t\tdigital_sig_toggle_out -1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\n";
           text += "\t\t\tdigital_out -1,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\n";
           text += "\t\t\twait (0.3 sec)\n";
           text += "\t\t\tdigital_out -1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\n";
           text += "\t\t}\n";

           text += "\t\tif (btn_lh_sig_flag==3) {\n";

           text += "\t\t\tdigital_out -1,-1,0,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\n";
           text += "\t\t\tscript {\n";
           text += "\t\t\t\tbtn_lh_sig_flag=0\n";
           text += "\t\t\t}\n";
           text += "\t\t\twait (0.3 sec)\n";
           text += "\t\t\tdigital_out -1,-1,0,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1\n";

           text += "\t\t}\n";

           text += "\t}\n";
           text +="}";

           return text;
       }
}

QString MainWindow::Script_Post_Program(void){
    QString text;
    text += "\n";
    text += "PostProgram {\n";
    text += ("\t" + Script_Digital_Out(-1, 0) + "\n");
    text += "\ttool_out -1,0,0\n";
    text += "}";

    return text;
}

QString MainWindow::Script_Arc_On(float time_init, float vel, float acc, float weld_A, int weld_V_option, float weld_V, float time_wait, float time_end, int option1, int option2, int option_blind_wait){
    // 초기대기
    // 속도
    // 가속도
    // 용접전류
    // 용접전압 옵션 0 = 전류대비 offset 1 = 사용자정의
    // 용접전압
    // 아크발생대기시간 초과 (용접 타임아웃 대기)
    // 후속대기
    if(data_weld_type != 4)
    {
        QString text;
        text.sprintf("arc_welding_macro %d,0,%.2f,%.2f,%.2f,%.2f,%d,%.2f,%.2f,%.2f,%d,%d,%d,%d,%.2f", 1, time_init, vel, acc, weld_A, weld_V_option, weld_V, time_wait, time_end, option1, option2, option_blind_wait,setting_arc_retry_vel,setting_arc_retry_time);
        return text;
    }
    if(data_weld_type == 4)
    {
        float sync_volt = (((weld_V/10)-5)*4.2);
        if(sync_volt <= 10){
            sync_volt = 10;
        }
        if(sync_volt >= 42)
        {
            sync_volt = 42;
        }
        QString text;
        text.sprintf("arc_welding_macro %d,0,%.2f,%.2f,%.2f,%.2f,%d,%.2f,%.2f,%.2f,%d,%d,%d,%d,%.2f", 1, time_init, vel, acc, weld_A, weld_V_option, sync_volt, time_wait, time_end, option1, option2, option_blind_wait,setting_arc_retry_vel,setting_arc_retry_time);
        return text;
    }
}

QString MainWindow::Script_Arc_Off(float time_init, float weld_A, int weld_V_option, float weld_V, float time_wait, float time_end){
    // 초기대기
    // 용접전류
    // 용접전압 옵션 0 = 전류대비 offset 1 = 사용자정의
    // 용접전압
    // 중간대기
    // 후속대기
    if(data_weld_type != 4)
    {
        QString text;
        text.sprintf("arc_welding_macro %d,0,%.2f,%.2f,%.2f,%.2f,%d,%.2f,%.2f,%.2f,%d,%d,0,0,0", 2, time_init,   0.,   0., weld_A, weld_V_option, weld_V, time_wait, time_end,       0,       0);
        return text;
    }
    if(data_weld_type == 4)
    {
        float sync_volt = (((weld_V/10)-5)*4.2);
        if(sync_volt <= 10){
            sync_volt = 10;
        }
        if(sync_volt >= 42)
        {
            sync_volt = 42;
        }
        QString text;
        text.sprintf("arc_welding_macro %d,0,%.2f,%.2f,%.2f,%.2f,%d,%.2f,%.2f,%.2f,%d,%d,0,0,0", 2, time_init,   0.,   0., weld_A, weld_V_option, sync_volt, time_wait, time_end,       0,       0);
        return text;
    }

}

QString MainWindow::Script_Arc_Set(float vel, float acc, float weld_A, int weld_V_option, float weld_V){
    if(data_weld_type != 4)
    {
        QString text;
        text.sprintf("arc_welding_macro %d,0,%.2f,%.2f,%.2f,%.2f,%d,%.2f,%.2f,%.2f,%d,%d,%d,0,0", 3, 0., vel, acc, weld_A, weld_V_option, weld_V, 0., 0., 0, 0, 0);
        return text;
    }
    if(data_weld_type == 4)
    {
        float sync_volt = (((weld_V/10)-5)*4.2);
        if(sync_volt <= 10){
            sync_volt = 10;
        }
        if(sync_volt >= 42)
        {
            sync_volt = 42;
        }
        QString text;
        text.sprintf("arc_welding_macro %d,0,%.2f,%.2f,%.2f,%.2f,%d,%.2f,%.2f,%.2f,%d,%d,%d,0,0", 3, 0., vel, acc, weld_A, weld_V_option, sync_volt, 0., 0., 0, 0, 0);
        return text;
    }


}

QString MainWindow::Script_Weaving(int type, float L1, float L2, float V1, float V2, float T1, float T2, float T3, float T4, float bend, float offset, float scale, float set1x, float set1y, float set1z, float set1rx, float set1ry, float set1rz, float set2x, float set2y, float set2z, float set2rx, float set2ry, float set2rz, float swing){
    QString text;
    text.sprintf("weaving_motion (%d, %.2f, %.2f, %.2f, %.2f, %.2f, %.2f, %.2f, %.2f, %.2f, %.2f, %.2f, %.2f, %.2f, %.2f, %.2f, %.2f, %.2f, %.2f, %.2f, %.2f, %.2f, %.2f, %.2f, %.2f, 0, 0, 0, 0, 0)"
                 , type, L1, L2, V1, V2, T1, T2, T3, T4, bend, offset, scale, set1x, set1y, set1z, set2x, set2y, set2z, set1rx, set1ry, set1rz, set2rx, set2ry, set2rz, swing);
    return text;
}

QString MainWindow::Script_move_waypoint(int type,int pointtype,float robot_vel, float robot_acc, float axis_vel, float axis_acc,float J0, float J1, float J2, float J3, float J4, float J5,float X, float Y, float Z, float RX, float RY, float RZ,float Axis7,float Axis8,float Axis9){
    QString text;
    text.sprintf("move_waypoint %d,%d,100,0,0,0,0,%.2f,%.2f,1,%.2f,%.2f,0,1,PT_LAST_TCP,%.3f,%.3f,%.3f,%.3f,%.3f,%.3f,%.3f,%.3f,%.3f,%.3f,%.3f,%.3f,%.3f,%.3f,%.3f,0,0,0,0,0,0"
                 ,type,pointtype,robot_vel,robot_acc,axis_vel,axis_acc,J0,J1,J2,J3,J4,J5,X,Y,Z,RX,RY,RZ,Axis7,Axis8,Axis9);
    return text;
}

QString MainWindow::Script_aux_motor_move_multi(int use_a0,int use_a1,int use_a2,int use_a3,int use_a4,int use_a5,float a0_pos,float a1_pos,float a2_pos,float a3_pos,float a4_pos,float a5_pos,float a0_vel,float a1_vel,float a2_vel,float a3_vel,float a4_vel,float a5_vel,float a0_acc,float a1_acc,float a2_acc,float a3_acc,float a4_acc,float a5_acc,int finish){
    QString text;
    text.sprintf("aux_motor_move_multi %d,%d,%d,%d,%d,%d,%.3f,%.3f,%.3f,%.3f,%.3f,%.3f,%.3f,%.3f,%.3f,%.3f,%.3f,%.3f,%.3f,%.3f,%.3f,%.3f,%.3f,%.3f,0,0,0,0,0,0,0,%d,0,0,0,0,0,0,0,0"
                 ,use_a0,use_a1,use_a2,use_a3,use_a4,use_a5,a0_pos,a1_pos,a2_pos,a3_pos,a4_pos,a5_pos,a0_vel,a1_vel,a2_vel,a3_vel,a4_vel,a5_vel,a0_acc,a1_acc,a2_acc,a3_acc,a4_acc,a5_acc,finish);
    return text;
}

QString MainWindow::Script_rb_xyz_value_shift(float xx,float yy, float zz){
    QString text;
    text.sprintf("set rb_xyz_value_shift 0,%.3f,%.3f,%.3f,0",xx,yy,zz);
    return text;
}

QString MainWindow::Script_tcp_Weave_motion(int weavingtype, int TorchAxis, int Tilt, int Rotation, int Distortion, float L1, float L2, float V1, float V2, float T1, float T2, float T3, float T4, float scale, float offset, float bend, float swing, int plane, int Dragrate){
    QString text;
    text.sprintf("tcp_weave_motion (%d, %d, %d, %d, %d, 0, 0, 0, 0, %.2f, %.2f, %.2f, %.2f, %.2f, %.2f, %.2f, %.2f, %.2f, %.2f, %.2f, %.2f, %d, %d, 0, 0, 0, 0, 0, 0)"
                 , weavingtype, TorchAxis, Tilt, Rotation, Distortion, L1, L2, V1, V2, T1, T2, T3, T4, scale, offset, bend, swing, plane, Dragrate);
    return text;
}

#define FOLD_END___SCRIPT_PART    }
// ========================================================================================

// Socket Part=============================================================================
#define FOLD_START___SOCKET_PART  {
void MainWindow::onConnectionTimer(){
    if(sockCmd.state() == QAbstractSocket::UnconnectedState){
        QString robot_ip;
        robot_ip.sprintf("%d.%d.%d.%d", setting_rb_ip_address[0], setting_rb_ip_address[1], setting_rb_ip_address[2], setting_rb_ip_address[3]);
        sockCmd.connectToHost(robot_ip.toStdString().c_str(), 5000);
    }
    if(sockData.state() == QAbstractSocket::UnconnectedState){
        QString robot_ip;
        robot_ip.sprintf("%d.%d.%d.%d", setting_rb_ip_address[0], setting_rb_ip_address[1], setting_rb_ip_address[2], setting_rb_ip_address[3]);
        sockData.connectToHost(robot_ip.toStdString().c_str(), 5001);
    }
}

void MainWindow::onConnectedCmd(){
    sockConnectionStatusCmd = true;
    qDebug() << "sock command connected";
}
void MainWindow::onDisconnectedCmd(){
    sockConnectionStatusCmd = false;
    qDebug() << "sock command disconnected";
}
void MainWindow::onConnectedData(){
    sockConnectionStatusData = true;
    qDebug() << "sock data connected";
}
void MainWindow::onDisconnectedData(){
    sockConnectionStatusData = false;
    qDebug() << "sock data disconnected";
}
void MainWindow::onReadyReadCmd(){
    QByteArray datas = sockCmd.readAll();
    if(QString(datas.data()).compare("The command was executed\n") == 0){
        cmdConfirmFlag = true;
        if(moveCmdFlag == true){
            moveCmdCnt = 4;
            sys_status.sdata.robot_state = 3;
            moveCmdFlag = false;
        }
    }else{
        qDebug() << datas.data();
    }
}
void MainWindow::onReadyReadData(){
    QByteArray datas = sockData.readAll();
    recvBuf +=datas;

    while(recvBuf.length() > 4){
        if(uchar(recvBuf[0]) == '$'){
            uint size = uint(int(uchar(recvBuf[2])<<8) | int(uchar(recvBuf[1])));
            if(size <= uint(recvBuf.length())){
                int templen = (size>=sizeof(systemSTAT)) ? sizeof(systemSTAT) : size;
                if(uchar(recvBuf[3]) == 3){
                    if(moveCmdCnt > 0){
                        moveCmdCnt--;
                    }else{
                        memcpy(&sys_status, recvBuf.data(), sizeof(systemSTAT));
                    }
                    recvBuf.remove(0, templen);
                }else{
                    recvBuf.remove(0, size);
                }
            }
        }else{
            recvBuf.remove(0,1);
        }
    }
}
#define FOLD_END___SOCKET_PART    }
// ===========================================================
// File Save&Load Part=====================================================================
#define FOLD_START___DATA_SAVE  {
QDataStream &operator<<(QDataStream &stream, const QVector<ST_DATA> &data){
    stream << data.size();
    for(int i=0; i<data.size(); i++){
        stream << data[i].command_option << data[i].sub_option;
        for(int j=0; j<6; j++){
            stream << data[i].joint[j];
        }
        for(int j=0; j<6; j++){
            stream << data[i].tcp[j];
        }
        stream << data[i].vel;
        stream << data[i].acc;
        stream << data[i].current;
        stream << data[i].voltage;
        stream << data[i].wait_time;
        stream << data[i].w_persent;
        stream << data[i].xx;
        stream << data[i].yy;
        stream << data[i].zz;


        for(int j=0; j<6; j++){
            stream << data[i].arc_on_para[j];
        }
        for(int j=0; j<6; j++){
            stream << data[i].arc_off_para[j];
        }
        for(int j=0; j<3; j++){
            stream << data[i].wire_para[j];
        }
        for(int j=0; j<6; j++){
            stream << data[i].weaving_para[j];
        }
        for(int j=0; j<6; j++){
            stream << data[i].a_axis_para[j];
        }

    }
    return stream;
}

QDataStream &operator>>(QDataStream &stream, QVector<ST_DATA> &data){
    int size;
    stream >> size;
    for(int i=0; i<size; i++){
        ST_DATA temp_data;
        stream >> temp_data.command_option;
        stream >> temp_data.sub_option;
        for(int j=0; j<6; j++){
            stream >> temp_data.joint[j];
        }
        for(int j=0; j<6; j++){
            stream >> temp_data.tcp[j];
        }
        stream >> temp_data.vel;
        stream >> temp_data.acc;
        stream >> temp_data.current;
        stream >> temp_data.voltage;
        stream >> temp_data.wait_time;
        stream >> temp_data.w_persent;
        stream >> temp_data.xx;
        stream >> temp_data.yy;
        stream >> temp_data.zz;

        for(int j=0; j<6; j++){
            stream >> temp_data.arc_on_para[j];
        }
        for(int j=0; j<6; j++){
            stream >> temp_data.arc_off_para[j];
        }
        for(int j=0; j<3; j++){
            stream >> temp_data.wire_para[j];
        }
        for(int j=0; j<6; j++){
            stream >> temp_data.weaving_para[j];
        }
        for(int j=0; j<6; j++){
            stream >> temp_data.a_axis_para[j];
        }
        data.push_back(temp_data);
    }
}
#define FOLD_END___DATA_SAVE    }
void MainWindow::save_MessageBox()
{
    QMessageBox msgBox;
    msgBox.setText(save_type);
    msgBox.setInformativeText("저장 하시겠습니까?");
    msgBox.setStandardButtons(QMessageBox::Yes | QMessageBox::No);
    msgBox.setDefaultButton(QMessageBox::No);
    qDebug()<<"Show Popup";
    int ret = msgBox.exec();
    switch(ret){
    case QMessageBox::Yes:
        on_PB_B_2_Save_clicked();
        break;
    case QMessageBox::No:
        save_file_no = 0;
        break;
    default:
        save_file_no = 0;
        break;
    }
}

void MainWindow::load_MessageBox()
{
    QMessageBox msgBox;
    msgBox.setText(load_type);
    msgBox.setInformativeText("읽기 하시겠습니까?");
    msgBox.setStandardButtons(QMessageBox::Yes | QMessageBox::No);
    msgBox.setDefaultButton(QMessageBox::No);
    qDebug()<<"Show Popup";
    int ret = msgBox.exec();
    switch(ret){
    case QMessageBox::Yes:
        on_PB_C_0_Load_1_clicked();
        on_PB_C_0_Set_clicked();
        break;
    case QMessageBox::No:
        load_file_no = 0;
        break;
    default:
        load_file_no = 0;
        break;
    }
}
// ===========================================================
// ===========================================================
#define PB_A_1_PART_START   {
void MainWindow::on_PB_POWER_A0_clicked()   // 프로그램 종료
{
    if(robot_power == 0){
        QString text;
        text.sprintf("AvadaKedavra()");
        cmdConfirmFlag = false;
        sockCmd.write(text.toStdString().c_str(), text.toStdString().length());
    }
    on_PB_B_2_Stop_clicked();
    delete ui;

    close();
}

void MainWindow::on_PB_POWER_A1_clicked()   // 프로그램 종료
{
    if(robot_power == 0){
        QString text;
        text.sprintf("AvadaKedavra()");
        cmdConfirmFlag = false;
        sockCmd.write(text.toStdString().c_str(), text.toStdString().length());
    }
    on_PB_B_2_Stop_clicked();
    delete ui;

    close();
}

void MainWindow::on_PB_A_1_0_clicked()  // 용접선택
{
    play_move = 0;
    ui->SW_A->setCurrentIndex(2);
    if(ui->LE_D_0_data_0->text()=="0"){
        mode_type = 0;
        play_type = 0;
        ui->SW_B->setCurrentIndex(0);
        ui->SW_data_A->setCurrentIndex(0);
        ui->SW_B_0_L->setCurrentIndex(0);
        ui->SW_B_0_R->setCurrentIndex(0);
    }
    if(ui->LE_D_0_data_0->text()=="1"){     //한독
        mode_type = 0;
        play_type = 0;
        ui->SW_B->setCurrentIndex(3);
    }
    if(ui->LE_D_0_data_0->text()=="2"){     //JIG 1,2,3
        mode_type = 0;
        play_type = 0;
        ui->SW_B->setCurrentIndex(5);
    }
   if(ui->LE_D_0_data_0->text()=="3"){     //한독
       mode_type = 0;
       play_type = 0;
       ui->SW_B->setCurrentIndex(3);
   }

}

void MainWindow::on_PB_A_1_1_clicked()  // 프로그램선택
{
    ui->LE_C_0_Load_1->setText("");
    ui->LE_C_0_Load_2->setText("");
    ui->LE_C_0_Load_3->setText("");
    ui->LE_C_0_Load_4->setText("");
    ui->LE_C_0_Load_5->setText("");
    ui->LE_C_0_Load_6->setText("");
    ui->LE_C_0_Load_7->setText("");
    ui->LE_C_0_Load_8->setText("");
    ui->LE_C_0_Load_9->setText("");
    ui->LE_C_0_Load_10->setText("");
    file_load_no_1 = 0;
    file_load_no_2 = 0;
    file_load_no_3 = 0;
    file_load_no_4 = 0;
    file_load_no_5 = 0;
    file_load_no_6 = 0;
    file_load_no_7 = 0;
    file_load_no_8 = 0;
    file_load_no_9 = 0;
    file_load_no_10 = 0;

    mode_type = 0;
    play_type = 0;
    mode_type = 0;
    load_file_no = 0;
    ui->SW_A->setCurrentIndex(3);
    if(ui->LE_D_0_data_0->text()=="0"){
        ui->SW_C->setCurrentIndex(0);
        ui->SW_C_0_C->setCurrentIndex(0);
    }
    if(ui->LE_D_0_data_0->text()=="1" || ui->LE_D_0_data_0->text()=="2" || ui->LE_D_0_data_0->text()=="3"){ // 단독,라인
        ui->SW_A->setCurrentIndex(3);
        ui->SW_C->setCurrentIndex(1);
    }
}

void MainWindow::on_PB_A_1_2_clicked()  // 설정
{
    ui->SW_A->setCurrentIndex(4);
    ui->SW_D->setCurrentIndex(0);
    ui->SW_D_0_C->setCurrentIndex(0);
    ui->SW_D_0_C_0_L->setCurrentIndex(0);
    ui->SW_D_0_C_0_R->setCurrentIndex(0);
}

void MainWindow::on_PB_A_1_3_clicked()  // 지원 구매
{
    ui->SW_A->setCurrentIndex(5);
    ui->SW_E->setCurrentIndex(0);
    ui->SW_E0_T->setCurrentIndex(0);
    ui->SW_E0_R->setCurrentIndex(0);
    manual_M_PB = 0;
    manual_T5_PB = 0;
    manual_state = 0;
}

#define PB_A_1_PART_END }
// ===========================================================
#define PB_B_0_PART_START   {
void MainWindow::on_PB_B_0_0_clicked(){data_motion = 0;}    // 가접용접

void MainWindow::on_PB_B_0_1_clicked(){data_motion = 1;}    // 직선용접

void MainWindow::on_PB_B_0_2_clicked(){data_motion = 2;}    // 곡선용접

void MainWindow::on_PB_B_0_3_clicked(){data_motion = 3;}    // 전환곡선용접

void MainWindow::on_PB_B_0_4_clicked(){data_motion = 4;}    // 위빙직선용접

void MainWindow::on_PB_B_0_5_clicked(){data_motion = 5;}    // 대기

void MainWindow::on_PB_B_0_6_clicked(){data_motion = 6;}    // 자유이동

void MainWindow::on_PB_B_0_7_clicked(){data_motion = 7;}    // 직선이동

void MainWindow::on_PB_B_0_8_clicked(){data_motion = 9;}    // 대기시간


void MainWindow::on_PB_B_0_Add_clicked()    // 조건추가
{
    on_PB_B0R1_key_exit_clicked();
    setting_data_condition();
    command_data.clear();
    Update_TW_1_command_data();
    int insert_point;
    ST_DATA temp;
    temp.command_option = WEL_CMD_NONE;
    temp.sub_option = 0;
    for(int i=0; i<6; i++){
        temp.joint[i] = 99999;
        temp.tcp[i] = 99999;
        temp.a_axis_para[i] = 0;
    }

    temp.vel = ui->MEM_VALUE_2->text().toFloat();
    temp.acc = ui->MEM_VALUE_2->text().toFloat();
    temp.current = ui->MEM_VALUE_0->text().toFloat();
    temp.voltage = ui->MEM_VALUE_1->text().toFloat();
    temp.wait_time = ui->MEM_VALUE_3->text().toFloat();
    temp.arc_on_para[0] = ui->MEM_VALUE_7->text().toFloat(); //전류
    temp.arc_on_para[1] = ui->MEM_VALUE_8->text().toFloat(); //전압
    temp.arc_on_para[2] = ui->MEM_VALUE_9->text().toFloat(); //시간
    temp.arc_off_para[0] = ui->MEM_VALUE_10->text().toFloat();
    temp.arc_off_para[1] = ui->MEM_VALUE_11->text().toFloat();
    temp.arc_off_para[2] = ui->MEM_VALUE_12->text().toFloat();
    temp.w_persent = ui->MEM_VALUE_14->text().toFloat();
    if(setting_is_tig_welder){
        temp.wire_para[0] = ui->MEM_VALUE_13->text().toInt();
        qDebug()<<"temp.wire_para[0] : "<<temp.wire_para[0];
        qDebug()<<"d_wire : "<<data_wire;
        qDebug()<<"setting_is_wire : "<<setting_is_wire;
    }else{
        temp.wire_para[0] = 0;
    }
    temp.weaving_para[0] = ui->MEM_VALUE_4->text().toInt(); //위빙 No.
    temp.weaving_para[1] = ui->MEM_VALUE_5->text().toFloat(); //위빙 시간
    temp.weaving_para[2] = ui->MEM_VALUE_6->text().toFloat(); //진폭

    temp.xx = 0.0;
    temp.yy = 0.0;
    temp.yy = 0.0;

    if(data_motion == 0){ // 가접용접
        temp.command_option = WEL_CMD_GAJUB;
    }else if(data_motion == 1){ // 직선용접
        temp.command_option = WEL_CMD_MOVE_PRO_L;
    }else if(data_motion == 2){ // 곡선용접
        temp.command_option = WEL_CMD_MOVE_PRO_C;
    }else if(data_motion == 3){ // 전환곡선용접
        temp.command_option = WEL_CMD_MOVE_PRO_C_CONVERT;
    }else if(data_motion == 4){ // 위빙직선용접
        temp.command_option = WEL_CMD_WEAVING_L;
    }else if(data_motion == 5){ // 대기
        temp.command_option = WEL_CMD_WAIT_DIN;
    }else if(data_motion == 6){ // 자유이동
        temp.command_option = WEL_CMD_MOVE_J;
    }else if(data_motion == 7){ // 직선이동
        temp.command_option = WEL_CMD_MOVE_L;
    }else if(data_motion == 8){ // 1점용접
        temp.command_option = WEL_CMD_ONEPOINT_WELD;
    }else if(data_motion == 9){ // 대기시간
        temp.command_option = WEL_CMD_WAIT_TIME;
    }

    if(TW_1_cell == 0){
        insert_point = ui->TW_1->rowCount();
    }
    if(TW_1_cell == 1){
        if(ui->TW_1->currentRow()== -1){
            insert_point = ui->TW_1->rowCount();
        }
        if(ui->TW_1->currentRow()!= -1){
            insert_point = ui->TW_1->currentRow()+1;
        }
    }
    qDebug()<<"insert_point:"<<insert_point<<endl;
    command_data.insert(insert_point, temp);
    if(modify_mode == 1)
    {
        int modify_pos = 2;
        for(int i=0; i < command_data.size(); i++){
            ST_DATA temp_command = command_data.at(i);
            // --------------------------------------------
            // command data를 기반으로 modify_welding data 추가하기
            // --------------------------------------------
            if(i<insert_point){
                if(temp_command.command_option == WEL_CMD_WAIT_TIME){
                    modify_pos += 1;
                }else if(temp_command.command_option == WEL_CMD_WAIT_DIN){
                    modify_pos += 1;
                }else if(temp_command.command_option == WEL_CMD_MOVE_L){
                    modify_pos += 1;
                }else if(temp_command.command_option == WEL_CMD_MOVE_J){
                    modify_pos += 1;
                }else if(temp_command.command_option == WEL_CMD_GAJUB){
                    modify_pos += 1;
                }else if(temp_command.command_option == WEL_CMD_WEAVING_L){
                    modify_pos += 1;
                    modify_pos += 1;
                    modify_pos += 1;
                    modify_pos += 1;
                }else if(temp_command.command_option == WEL_CMD_MOVE_PRO_L || temp_command.command_option == WEL_CMD_MOVE_PRO_C || temp_command.command_option == WEL_CMD_MOVE_PRO_C_CONVERT){
                    int previous_command = 0;
                    if(i>0){
                       previous_command = command_data.at(i-1).command_option;
                    }
                    bool is_welding_continue = false;
                    if(previous_command == WEL_CMD_MOVE_PRO_L || previous_command == WEL_CMD_MOVE_PRO_C || previous_command == WEL_CMD_MOVE_PRO_C_CONVERT){
                        is_welding_continue = true;
                        qDebug()<<"is_welding_continue = true;"<<endl;
                    }

                    if(temp_command.command_option == WEL_CMD_MOVE_PRO_L){
                        if(!is_welding_continue){
                            // add 0 0
                            modify_pos += 1;
                            modify_pos += 1;
                        }else{
                            modify_pos += 1;
                        }
                    }else if(temp_command.command_option == WEL_CMD_MOVE_PRO_C){
                        if(!is_welding_continue){
                            // add 1 1 1
                            modify_pos += 1;
                            modify_pos += 1;
                            if(ui->LE_D_0_data_1->text()=="0"){
                                modify_pos += 1;
                            }

                        }else{
                            // add 1 1
                            modify_pos += 1;
                            if(ui->LE_D_0_data_1->text()=="0"){
                                modify_pos += 1;
                            }
                        }
                    }else if(temp_command.command_option == WEL_CMD_MOVE_PRO_C_CONVERT){
                        if(!is_welding_continue){
                            // add 1 1 0
                            modify_pos += 1;
                            modify_pos += 1;
                            if(ui->LE_D_0_data_1->text()=="0"){
                                modify_pos += 1;
                            }
                        }else{
                            // add 1 0
                            if(ui->LE_D_0_data_1->text()=="0"){
                                modify_pos += 1;
                            }
                            modify_pos += 1;
                        }
                    }

                }else if(temp_command.command_option == WEL_CMD_ONEPOINT_WELD){
                    int previous_command1 = 0;
                    if(i>0){
                       previous_command1 = command_data.at(i-1).command_option;
                    }
                    bool is_welding_continue1 = false;
                    if(previous_command1 == WEL_CMD_ONEPOINT_WELD){
                        is_welding_continue1 = true;
                    }
                    if(!is_welding_continue1){
                        // add 1 1
                    modify_pos += 1;
                    modify_pos += 1;
                    }else{
                        modify_pos += 1;
                    }

                }else{
                    qDebug()<<"정의되지 않은 형태 등장 !!!!!!!!!!!!!!!!";
                }
            }
        }
        qDebug()<<"modify_pos:"<<modify_pos<<endl;
        if(temp.command_option == WEL_CMD_WAIT_TIME){
            modify_welding_data.insert(modify_pos,temp);
        }else if(temp.command_option == WEL_CMD_WAIT_DIN){
            modify_welding_data.insert(modify_pos,temp);
        }else if(temp.command_option == WEL_CMD_MOVE_L){
            modify_welding_data.insert(modify_pos,temp);
        }else if(temp.command_option == WEL_CMD_MOVE_J){
            modify_welding_data.insert(modify_pos,temp);
        }else if(temp.command_option == WEL_CMD_GAJUB){
            modify_welding_data.insert(modify_pos,temp);
        }else if(temp.command_option == WEL_CMD_WEAVING_L){
            modify_welding_data.insert(modify_pos,temp);
            modify_welding_data.insert(modify_pos,temp);
            modify_welding_data.insert(modify_pos,temp);
            modify_welding_data.insert(modify_pos,temp);
        }else if(temp.command_option == WEL_CMD_MOVE_PRO_L || temp.command_option == WEL_CMD_MOVE_PRO_C || temp.command_option == WEL_CMD_MOVE_PRO_C_CONVERT){
            int previous_command = 0;
            if(insert_point != 0){
                previous_command = command_data.at(insert_point-1).command_option;
            }
            bool is_welding_continue = false;
            if(previous_command == WEL_CMD_MOVE_PRO_L || previous_command == WEL_CMD_MOVE_PRO_C || previous_command == WEL_CMD_MOVE_PRO_C_CONVERT){
                is_welding_continue = true;
            }
            if(temp.command_option == WEL_CMD_MOVE_PRO_L){
                if(!is_welding_continue){
                    // add 0 0
                    modify_welding_data.insert(modify_pos,temp);
                    modify_welding_data.insert(modify_pos,temp);
                }else{
                    // add 0
                    modify_welding_data.insert(modify_pos,temp);
                }
            }else if(temp.command_option == WEL_CMD_MOVE_PRO_C){
                if(!is_welding_continue){
                    // add 1 1 1
                    modify_welding_data.insert(modify_pos,temp);
                    modify_welding_data.insert(modify_pos,temp);
                    if(ui->LE_D_0_data_1->text()=="0"){
                        modify_welding_data.insert(modify_pos,temp);
                    }
                }else{
                    // add 1 1
                    modify_welding_data.insert(modify_pos,temp);
                    if(ui->LE_D_0_data_1->text()=="0"){
                        modify_welding_data.insert(modify_pos,temp);
                    }
                }
            }else if(temp.command_option == WEL_CMD_MOVE_PRO_C_CONVERT){
                if(!is_welding_continue){
                    // add 1 1 0
                    modify_welding_data.insert(modify_pos,temp);
                    modify_welding_data.insert(modify_pos,temp);
                    if(ui->LE_D_0_data_1->text()=="0"){
                        modify_welding_data.insert(modify_pos,temp);
                    }
                }else{
                    // add 1 0
                    if(ui->LE_D_0_data_1->text()=="0"){
                        modify_welding_data.insert(modify_pos,temp);
                    }
                    modify_welding_data.insert(modify_pos,temp);
                }
            }

        }else if(temp.command_option == WEL_CMD_ONEPOINT_WELD){
            int previous_command1 = 0;
            if(insert_point != 0){
                previous_command1 = command_data.at(insert_point-1).command_option;
            }
            bool is_welding_continue1 = false;
            if(previous_command1 == WEL_CMD_ONEPOINT_WELD){
                is_welding_continue1 = true;
            }
            if(!is_welding_continue1){
                // add 1 1
            modify_welding_data.insert(modify_pos,temp);
            modify_welding_data.insert(modify_pos,temp);
            }else{
                modify_welding_data.insert(modify_pos,temp);
            }

        }
    }
    qDebug()<<"추가 누름!!"<<endl;
    Update_TW_1();
}

void MainWindow::on_PB_B_0_Mod_clicked()    // 조건수정
{
    on_PB_B0R1_key_exit_clicked();
    setting_data_condition();
    int index = ui->TW_1->currentRow();
    ST_DATA temp;
    temp.command_option = WEL_CMD_NONE;
    temp.sub_option = 0;
    for(int i=0; i<6; i++){
        temp.joint[i] = 99999;
        temp.tcp[i] = 99999;
        temp.a_axis_para[i] = 0;
    }

    temp.vel = ui->MEM_VALUE_2->text().toFloat();
    temp.acc = ui->MEM_VALUE_2->text().toFloat();
    temp.current = ui->MEM_VALUE_0->text().toFloat();
    temp.voltage = ui->MEM_VALUE_1->text().toFloat();
    temp.wait_time = ui->MEM_VALUE_3->text().toFloat();
    temp.arc_on_para[0] = ui->MEM_VALUE_7->text().toFloat(); //전류
    temp.arc_on_para[1] = ui->MEM_VALUE_8->text().toFloat(); //전압
    temp.arc_on_para[2] = ui->MEM_VALUE_9->text().toFloat(); //시간
    temp.arc_off_para[0] = ui->MEM_VALUE_10->text().toFloat();
    temp.arc_off_para[1] = ui->MEM_VALUE_11->text().toFloat();
    temp.arc_off_para[2] = ui->MEM_VALUE_12->text().toFloat();
    temp.w_persent = ui->MEM_VALUE_14->text().toFloat();
    if(setting_is_tig_welder){
        temp.wire_para[0] = ui->MEM_VALUE_13->text().toInt();
        qDebug()<<"temp.wire_para[0] : "<<temp.wire_para[0];
        qDebug()<<"d_wire : "<<data_wire;
        qDebug()<<"setting_is_wire : "<<setting_is_wire;
    }else{
        temp.wire_para[0] = 0;
    }
    temp.weaving_para[0] = ui->MEM_VALUE_4->text().toInt(); //위빙 No.
    temp.weaving_para[1] = ui->MEM_VALUE_5->text().toFloat(); //위빙 시간
    temp.weaving_para[2] = ui->MEM_VALUE_6->text().toFloat(); //진폭

    temp.xx = 0.0;
    temp.yy = 0.0;
    temp.yy = 0.0;

    if(data_motion==0){ // 가접용접
        temp.command_option = WEL_CMD_GAJUB;
    }else if(data_motion==1){ // 직선용접
        temp.command_option = WEL_CMD_MOVE_PRO_L;
    }else if(data_motion==2){ // 곡선용접
        temp.command_option = WEL_CMD_MOVE_PRO_C;
    }else if(data_motion==3){ // 전환곡선용접
        temp.command_option = WEL_CMD_MOVE_PRO_C_CONVERT;
    }else if(data_motion==4){ // 위빙직선용접
        temp.command_option = WEL_CMD_WEAVING_L;
    }else if(data_motion==5){ // 대기
        temp.command_option = WEL_CMD_WAIT_DIN;
    }else if(data_motion==6){ // 자유이동
        temp.command_option = WEL_CMD_MOVE_J;
    }else if(data_motion==7){ // 직선이동
        temp.command_option = WEL_CMD_MOVE_L;
    }else if(data_motion==8){ // 1점용접
        temp.command_option = WEL_CMD_ONEPOINT_WELD;
    }else if(data_motion==9){ // 1점용접
        temp.command_option = WEL_CMD_WAIT_TIME;
    }
    if(command_data.isEmpty() || index<0){
        return;
    }
    qDebug()<<"index:"<<index<<endl;
    command_data[index] = temp;

    if(modify_mode == 1)
    {
        if(ui->TW_1->item(ui->TW_1->currentRow(),0)->text() != motion_text)
        {
            int modify_pos = 2;
            for(int i=0; i < command_data.size(); i++){
                ST_DATA temp_command = command_data.at(i);
                // --------------------------------------------
                // command data를 기반으로 modify_welding data 수정하기
                // --------------------------------------------
                if(i<index){
                    if(temp_command.command_option == WEL_CMD_WAIT_TIME){
                        modify_pos += 1;
                    }else if(temp_command.command_option == WEL_CMD_WAIT_DIN){
                        modify_pos += 1;
                    }else if(temp_command.command_option == WEL_CMD_MOVE_L){
                        modify_pos += 1;
                    }else if(temp_command.command_option == WEL_CMD_MOVE_J){
                        modify_pos += 1;
                    }else if(temp_command.command_option == WEL_CMD_GAJUB){
                        modify_pos += 1;
                    }else if(temp_command.command_option == WEL_CMD_WEAVING_L){
                        modify_pos += 1;
                        modify_pos += 1;
                        modify_pos += 1;
                        modify_pos += 1;
                    }else if(temp_command.command_option == WEL_CMD_MOVE_PRO_L || temp_command.command_option == WEL_CMD_MOVE_PRO_C || temp_command.command_option == WEL_CMD_MOVE_PRO_C_CONVERT){
                        int previous_command = 0;
                        if(i>0){
                           previous_command = command_data.at(i-1).command_option;
                        }
                        bool is_welding_continue = false;
                        if(previous_command == WEL_CMD_MOVE_PRO_L || previous_command == WEL_CMD_MOVE_PRO_C || previous_command == WEL_CMD_MOVE_PRO_C_CONVERT){
                            is_welding_continue = true;
                            qDebug()<<"is_welding_continue = true;"<<endl;
                        }

                        if(temp_command.command_option == WEL_CMD_MOVE_PRO_L){
                            if(!is_welding_continue){
                                // add 0 0
                                modify_pos += 1;
                                modify_pos += 1;
                            }else{
                                modify_pos += 1;
                            }
                        }else if(temp_command.command_option == WEL_CMD_MOVE_PRO_C){
                            if(!is_welding_continue){
                                // add 1 1 1
                                modify_pos += 1;
                                modify_pos += 1;
                                if(ui->LE_D_0_data_1->text()=="0"){
                                    modify_pos += 1;
                                }
                            }else{
                                // add 1 1
                                modify_pos += 1;
                                if(ui->LE_D_0_data_1->text()=="0"){
                                    modify_pos += 1;
                                }
                            }
                        }else if(temp_command.command_option == WEL_CMD_MOVE_PRO_C_CONVERT){
                            if(!is_welding_continue){
                                // add 1 1 0
                                modify_pos += 1;
                                modify_pos += 1;
                                if(ui->LE_D_0_data_1->text()=="0"){
                                    modify_pos += 1;
                                }
                            }else{
                                // add 1 0
                                if(ui->LE_D_0_data_1->text()=="0"){
                                    modify_pos += 1;
                                }
                                modify_pos += 1;
                            }
                        }

                    }else if(temp_command.command_option == WEL_CMD_ONEPOINT_WELD){
                        int previous_command1 = 0;
                        if(i>0){
                           previous_command1 = command_data.at(i-1).command_option;
                        }
                        bool is_welding_continue1 = false;
                        if(previous_command1 == WEL_CMD_ONEPOINT_WELD){
                            is_welding_continue1 = true;
                        }
                        if(!is_welding_continue1){
                            // add 1 1
                        modify_pos += 1;
                        modify_pos += 1;
                        }else{
                            modify_pos += 1;
                        }

                    }else{
                        qDebug()<<"정의되지 않은 형태 등장 !!!!!!!!!!!!!!!!";
                    }
                }
            }
            qDebug()<<"modify_pos:"<<modify_pos<<endl;
            //
            //
            //======수정 여기서부터=====
            /*
            if(command_data[index].command_option == WEL_CMD_WAIT_TIME){
                modify_welding_data.remove(modify_pos);
            }else if(command_data[index].command_option == WEL_CMD_WAIT_DIN){
                modify_welding_data.remove(modify_pos);
            }else if(command_data[index].command_option == WEL_CMD_MOVE_L){
                modify_welding_data.remove(modify_pos);
            }else if(command_data[index].command_option == WEL_CMD_MOVE_J){
                modify_welding_data.remove(modify_pos);
            }else if(command_data[index].command_option == WEL_CMD_GAJUB){
                modify_welding_data.remove(modify_pos);
            }else if(command_data[index].command_option == WEL_CMD_WEAVING_L){
                modify_welding_data.remove(modify_pos);
                modify_welding_data.remove(modify_pos);
                modify_welding_data.remove(modify_pos);
                modify_welding_data.remove(modify_pos);
            }else if(command_data[index].command_option == WEL_CMD_MOVE_PRO_L || command_data[index].command_option == WEL_CMD_MOVE_PRO_C || command_data[index].command_option == WEL_CMD_MOVE_PRO_C_CONVERT){
                int previous_command = 0;
                if(index != 0){
                    previous_command = command_data.at(index-1).command_option;
                }
                bool is_welding_continue = false;
                if(previous_command == WEL_CMD_MOVE_PRO_L || previous_command == WEL_CMD_MOVE_PRO_C || previous_command == WEL_CMD_MOVE_PRO_C_CONVERT){
                    is_welding_continue = true;
                }

                if(command_data[index].command_option == WEL_CMD_MOVE_PRO_L){
                    if(!is_welding_continue){
                        // add 0 0
                        modify_welding_data.remove(modify_pos);
                        modify_welding_data.remove(modify_pos);
                    }else{
                        // add 0
                        modify_welding_data.remove(modify_pos);
                    }
                }else if(command_data[index].command_option == WEL_CMD_MOVE_PRO_C){
                    if(!is_welding_continue){
                        // add 1 1 1
                        modify_welding_data.remove(modify_pos);
                        modify_welding_data.remove(modify_pos);
                        if(ui->LE_D_0_data_1->text()=="0"){
                            modify_welding_data.remove(modify_pos);
                        }
                    }else{
                        // add 1 1
                        modify_welding_data.remove(modify_pos);
                        if(ui->LE_D_0_data_1->text()=="0"){
                            modify_welding_data.remove(modify_pos);
                        }
                    }
                }else if(command_data[index].command_option == WEL_CMD_MOVE_PRO_C_CONVERT){
                    if(!is_welding_continue){
                        // add 1 1 0
                        modify_welding_data.remove(modify_pos);
                        modify_welding_data.remove(modify_pos);
                        if(ui->LE_D_0_data_1->text()=="0"){
                            modify_welding_data.remove(modify_pos);
                        }
                    }else{
                        // add 1 0
                        if(ui->LE_D_0_data_1->text()=="0"){
                            modify_welding_data.remove(modify_pos);
                            }
                        modify_welding_data.remove(modify_pos);
                    }
                }

            }else if(command_data[index].command_option == WEL_CMD_ONEPOINT_WELD){
                int previous_command1 = 0;
                if(index != 0){
                    previous_command1 = command_data.at(index-1).command_option;
                }
                bool is_welding_continue1 = false;
                if(previous_command1 == WEL_CMD_ONEPOINT_WELD){
                    is_welding_continue1 = true;
                }
                if(!is_welding_continue1){
                    // add 1 1
                modify_welding_data.remove(modify_pos);
                modify_welding_data.remove(modify_pos);
                }else{
                    modify_welding_data.remove(modify_pos);
                }

            }*/
        }
    }

    qDebug()<<"수정 누름!!"<<endl;
    Update_TW_1();
}

void MainWindow::on_PB_B_0_Del_clicked()    // 조건삭제
{
    on_PB_B0R1_key_exit_clicked();
    int index = ui->TW_1->currentRow();
    if(index >= ui->TW_1->rowCount() || index < 0){
        return;
    }
    qDebug()<<"index:"<<index<<endl;
    if(modify_mode == 1)
    {
        int modify_pos = 2;
        for(int i=0; i < command_data.size(); i++){
            ST_DATA temp_command = command_data.at(i);
            // --------------------------------------------
            // command data를 기반으로 modify_welding data 삭제하기
            // --------------------------------------------
            if(i<index){
                if(temp_command.command_option == WEL_CMD_WAIT_TIME){
                    modify_pos += 1;
                }else if(temp_command.command_option == WEL_CMD_WAIT_DIN){
                    modify_pos += 1;
                }else if(temp_command.command_option == WEL_CMD_MOVE_L){
                    modify_pos += 1;
                }else if(temp_command.command_option == WEL_CMD_MOVE_J){
                    modify_pos += 1;
                }else if(temp_command.command_option == WEL_CMD_GAJUB){
                    modify_pos += 1;
                }else if(temp_command.command_option == WEL_CMD_WEAVING_L){
                    modify_pos += 1;
                    modify_pos += 1;
                    modify_pos += 1;
                    modify_pos += 1;
                }else if(temp_command.command_option == WEL_CMD_MOVE_PRO_L || temp_command.command_option == WEL_CMD_MOVE_PRO_C || temp_command.command_option == WEL_CMD_MOVE_PRO_C_CONVERT){
                    int previous_command = 0;
                    if(i>0){
                       previous_command = command_data.at(i-1).command_option;
                    }
                    bool is_welding_continue = false;
                    if(previous_command == WEL_CMD_MOVE_PRO_L || previous_command == WEL_CMD_MOVE_PRO_C || previous_command == WEL_CMD_MOVE_PRO_C_CONVERT){
                        is_welding_continue = true;
                        qDebug()<<"is_welding_continue = true;"<<endl;
                    }

                    if(temp_command.command_option == WEL_CMD_MOVE_PRO_L){
                        if(!is_welding_continue){
                            // add 0 0
                            modify_pos += 1;
                            modify_pos += 1;
                        }else{
                            modify_pos += 1;
                        }
                    }else if(temp_command.command_option == WEL_CMD_MOVE_PRO_C){
                        if(!is_welding_continue){
                            // add 1 1 1
                            modify_pos += 1;
                            modify_pos += 1;
                            if(ui->LE_D_0_data_1->text()=="0"){
                                modify_pos += 1;
                            }
                        }else{
                            // add 1 1
                            modify_pos += 1;
                            if(ui->LE_D_0_data_1->text()=="0"){
                                modify_pos += 1;
                            }
                        }
                    }else if(temp_command.command_option == WEL_CMD_MOVE_PRO_C_CONVERT){
                        if(!is_welding_continue){
                            // add 1 1 0
                            modify_pos += 1;
                            modify_pos += 1;
                            if(ui->LE_D_0_data_1->text()=="0"){
                                modify_pos += 1;
                            }
                        }else{
                            // add 1 0
                            if(ui->LE_D_0_data_1->text()=="0"){
                                modify_pos += 1;
                            }
                            modify_pos += 1;
                        }
                    }

                }else if(temp_command.command_option == WEL_CMD_ONEPOINT_WELD){
                    int previous_command1 = 0;
                    if(i>0){
                       previous_command1 = command_data.at(i-1).command_option;
                    }
                    bool is_welding_continue1 = false;
                    if(previous_command1 == WEL_CMD_ONEPOINT_WELD){
                        is_welding_continue1 = true;
                    }
                    if(!is_welding_continue1){
                        // add 1 1
                    modify_pos += 1;
                    modify_pos += 1;
                    }else{
                        modify_pos += 1;
                    }

                }else{
                    qDebug()<<"정의되지 않은 형태 등장 !!!!!!!!!!!!!!!!";
                }
            }
        }
        qDebug()<<"modify_pos:"<<modify_pos<<endl;
        if(command_data[index].command_option == WEL_CMD_WAIT_TIME){
            modify_welding_data.remove(modify_pos);
        }else if(command_data[index].command_option == WEL_CMD_WAIT_DIN){
            modify_welding_data.remove(modify_pos);
        }else if(command_data[index].command_option == WEL_CMD_MOVE_L){
            modify_welding_data.remove(modify_pos);
        }else if(command_data[index].command_option == WEL_CMD_MOVE_J){
            modify_welding_data.remove(modify_pos);
        }else if(command_data[index].command_option == WEL_CMD_GAJUB){
            modify_welding_data.remove(modify_pos);
        }else if(command_data[index].command_option == WEL_CMD_WEAVING_L){
            modify_welding_data.remove(modify_pos);
            modify_welding_data.remove(modify_pos);
            modify_welding_data.remove(modify_pos);
            modify_welding_data.remove(modify_pos);
        }else if(command_data[index].command_option == WEL_CMD_MOVE_PRO_L || command_data[index].command_option == WEL_CMD_MOVE_PRO_C || command_data[index].command_option == WEL_CMD_MOVE_PRO_C_CONVERT){
            int previous_command = 0;
            if(index != 0){
                previous_command = command_data.at(index-1).command_option;
            }
            bool is_welding_continue = false;
            if(previous_command == WEL_CMD_MOVE_PRO_L || previous_command == WEL_CMD_MOVE_PRO_C || previous_command == WEL_CMD_MOVE_PRO_C_CONVERT){
                is_welding_continue = true;
            }

            if(command_data[index].command_option == WEL_CMD_MOVE_PRO_L){
                if(!is_welding_continue){
                    // add 0 0
                    modify_welding_data.remove(modify_pos);
                    modify_welding_data.remove(modify_pos);
                }else{
                    // add 0
                    modify_welding_data.remove(modify_pos);
                }
            }else if(command_data[index].command_option == WEL_CMD_MOVE_PRO_C){
                if(!is_welding_continue){
                    // add 1 1 1
                    modify_welding_data.remove(modify_pos);
                    modify_welding_data.remove(modify_pos);
                    if(ui->LE_D_0_data_1->text()=="0"){
                        modify_welding_data.remove(modify_pos);
                    }
                }else{
                    // add 1 1
                    modify_welding_data.remove(modify_pos);
                    if(ui->LE_D_0_data_1->text()=="0"){
                        modify_welding_data.remove(modify_pos);
                    }
                }
            }else if(command_data[index].command_option == WEL_CMD_MOVE_PRO_C_CONVERT){
                if(!is_welding_continue){
                    // add 1 1 0
                    modify_welding_data.remove(modify_pos);
                    modify_welding_data.remove(modify_pos);
                    if(ui->LE_D_0_data_1->text()=="0"){
                        modify_welding_data.remove(modify_pos);
                    }
                }else{
                    // add 1 0
                    if(ui->LE_D_0_data_1->text()=="0"){
                    modify_welding_data.remove(modify_pos);
                    }
                    modify_welding_data.remove(modify_pos);
                }
            }

        }else if(command_data[index].command_option == WEL_CMD_ONEPOINT_WELD){
            int previous_command1 = 0;
            if(index != 0){
                previous_command1 = command_data.at(index-1).command_option;
            }
            bool is_welding_continue1 = false;
            if(previous_command1 == WEL_CMD_ONEPOINT_WELD){
                is_welding_continue1 = true;
            }
            if(!is_welding_continue1){
                // add 1 1
            modify_welding_data.remove(modify_pos);
            modify_welding_data.remove(modify_pos);
            }else{
                modify_welding_data.remove(modify_pos);
            }

        }
    }
    qDebug()<<"index:"<<index<<endl;
    command_data.remove(index);

    qDebug()<<"삭제 누름!!"<<endl;
    Update_TW_1();
}

void MainWindow::on_PB_B_0_Set_clicked()    // 조건설정완료
{
    if(ui->TW_1->rowCount()>=1)
    {
        command_data.clear();
        ui->TW_10->setRowCount(0);
        Update_TW_1_command_data();
        //================================
        //================================
        // --------------------------------------------
        // 앞에 두 줄 추가
        // --------------------------------------------
        welding_data.clear();
        ST_DATA temp_starting;
        temp_starting.sub_option = 0;
        for(int i=0; i<6; i++){
            temp_starting.joint[i] = 99999;
            temp_starting.tcp[i] = 99999;
        }
        temp_starting.vel = ui->LE_D_0_Movj_Vel ->text().toFloat();
        temp_starting.acc = ui->LE_D_0_Movj_Acc ->text().toFloat();

        temp_starting.current = 175.0;
        temp_starting.voltage = 19.0;

        temp_starting.wait_time = 0;

        temp_starting.arc_on_para[0] = 175.0;
        temp_starting.arc_on_para[1] = 19.0;
        temp_starting.arc_on_para[2] = 0.0;
        temp_starting.arc_on_para[3] = 0;
        temp_starting.arc_on_para[4] = 0;
        temp_starting.arc_on_para[5] = 0;

        temp_starting.arc_off_para[0] = 175.0;
        temp_starting.arc_off_para[1] = 19.0;
        temp_starting.arc_off_para[2] = 0.0;
        temp_starting.arc_off_para[3] = 0;
        temp_starting.arc_off_para[4] = 0;
        temp_starting.arc_off_para[5] = 0;

        temp_starting.wire_para[0] = 0;
        temp_starting.wire_para[1] = 0;
        temp_starting.wire_para[2] = 0;

        temp_starting.weaving_para[0] = 0;
        temp_starting.weaving_para[1] = 0;
        temp_starting.weaving_para[2] = 0;
        temp_starting.weaving_para[3] = 0;
        temp_starting.weaving_para[4] = 0;
        temp_starting.weaving_para[5] = 0;

        for(int i=0; i<6; i++){
            temp_starting.a_axis_para[i] = 0;
        }
        temp_starting.w_persent = 100;
        temp_starting.xx = 0.0;
        temp_starting.yy = 0.0;
        temp_starting.zz = 0.0;

        temp_starting.command_option = WEL_CMD_INIT_J;
        temp_starting.sub_option = WEL_CMD_INIT_J;
        welding_data.push_back(temp_starting);

        temp_starting.command_option = WEL_CMD_INIT_L;
        temp_starting.sub_option = WEL_CMD_INIT_L;
        temp_starting.vel = ui->LE_D_0_Movl_Vel ->text().toFloat();
        temp_starting.acc = ui->LE_D_0_Movl_Acc ->text().toFloat();
        welding_data.push_back(temp_starting);
        // --------------------------------------------
        // command data를 기반으로 welding data 추가하기
        // --------------------------------------------
        for(int i=0; i < command_data.size(); i++){
            ST_DATA temp_command = command_data.at(i);

            if(temp_command.command_option == WEL_CMD_WAIT_TIME){
                for(int k=0; k<6; k++){
                    temp_command.joint[k] = sys_status.sdata.jnt_ref[k];
                    temp_command.tcp[k] = sys_status.sdata.tcp_ref[k];
                }
                welding_data.push_back(temp_command);
            }else if(temp_command.command_option == WEL_CMD_WAIT_DIN){
                for(int k=0; k<6; k++){
                    temp_command.joint[k] = sys_status.sdata.jnt_ref[k];
                    temp_command.tcp[k] = sys_status.sdata.tcp_ref[k];
                }
                welding_data.push_back(temp_command);
            }else if(temp_command.command_option == WEL_CMD_MOVE_L){
                welding_data.push_back(temp_command);
            }else if(temp_command.command_option == WEL_CMD_MOVE_J){
                welding_data.push_back(temp_command);
            }else if(temp_command.command_option == WEL_CMD_GAJUB){
                welding_data.push_back(temp_command);
            }else if(temp_command.command_option == WEL_CMD_WEAVING_L){
                ST_DATA temp_weld = temp_command;
                temp_weld.sub_option = WEL_CMD_WEAVING_L;
                temp_weld.command_option = WEL_CMD_MOVE_L;
                welding_data.push_back(temp_weld);

                // 참고 2 개
                temp_weld.sub_option = WEL_CMD_WEAVING_L;
                temp_weld.command_option = WEL_CMD_WEAVING_L_REF_1;
                welding_data.push_back(temp_weld);
                temp_weld.sub_option = WEL_CMD_WEAVING_L;
                temp_weld.command_option = WEL_CMD_WEAVING_L_REF_2;
                welding_data.push_back(temp_weld);

                temp_weld.sub_option = WEL_CMD_WEAVING_L;
                temp_weld.command_option = WEL_CMD_WEAVING_L;
                welding_data.push_back(temp_weld);
            }else if(temp_command.command_option == WEL_CMD_MOVE_PRO_L || temp_command.command_option == WEL_CMD_MOVE_PRO_C || temp_command.command_option == WEL_CMD_MOVE_PRO_C_CONVERT){
                int previous_command = welding_data.at(welding_data.size()-1).command_option;
                bool is_welding_continue = false;
                if(previous_command == WEL_CMD_MOVE_PRO_L || previous_command == WEL_CMD_MOVE_PRO_C || previous_command == WEL_CMD_MOVE_PRO_C_CONVERT){
                    is_welding_continue = true;
                }

                if(temp_command.command_option == WEL_CMD_MOVE_PRO_L){
                    if(!is_welding_continue){
                        // add 0 0
                        ST_DATA temp_weld = temp_command;
                        temp_weld.sub_option = WEL_CMD_MOVE_PRO_L;
                        temp_weld.command_option = WEL_CMD_MOVE_L;
                        welding_data.push_back(temp_weld);
                        temp_weld.sub_option = WEL_CMD_MOVE_PRO_L;
                        temp_weld.command_option = WEL_CMD_MOVE_PRO_L;
                        welding_data.push_back(temp_weld);
                    }else{
                        // add 0
                        ST_DATA temp_weld = temp_command;
                        temp_weld.sub_option = WEL_CMD_MOVE_PRO_L;
                        temp_weld.command_option = WEL_CMD_MOVE_PRO_L;
                        welding_data.push_back(temp_weld);
                    }
                }else if(temp_command.command_option == WEL_CMD_MOVE_PRO_C){
                    if(!is_welding_continue){
                        // add 1 1 1
                        ST_DATA temp_weld = temp_command;
                        temp_weld.sub_option = WEL_CMD_MOVE_PRO_C;
                        temp_weld.command_option = WEL_CMD_MOVE_L;
                        welding_data.push_back(temp_weld);
                        temp_weld.sub_option = WEL_CMD_MOVE_PRO_C;
                        temp_weld.command_option = WEL_CMD_MOVE_PRO_C;
                        welding_data.push_back(temp_weld);
                        if(ui->LE_D_0_data_1->text()=="0"){
                            temp_weld.sub_option = WEL_CMD_MOVE_PRO_C;
                            temp_weld.command_option = WEL_CMD_MOVE_PRO_C;
                            welding_data.push_back(temp_weld);
                        }
                    }else{
                        // add 1 1
                        ST_DATA temp_weld = temp_command;
                        temp_weld.sub_option = WEL_CMD_MOVE_PRO_C;
                        temp_weld.command_option = WEL_CMD_MOVE_PRO_C;
                        welding_data.push_back(temp_weld);
                        if(ui->LE_D_0_data_1->text()=="0"){
                            temp_weld.sub_option = WEL_CMD_MOVE_PRO_C;
                            temp_weld.command_option = WEL_CMD_MOVE_PRO_C;
                            welding_data.push_back(temp_weld);
                        }
                    }
                }else if(temp_command.command_option == WEL_CMD_MOVE_PRO_C_CONVERT){
                    if(!is_welding_continue){
                        // add 1 1 0
                        ST_DATA temp_weld = temp_command;
                        temp_weld.sub_option = WEL_CMD_MOVE_PRO_C_CONVERT;
                        temp_weld.command_option = WEL_CMD_MOVE_L;
                        welding_data.push_back(temp_weld);
                        temp_weld.sub_option = WEL_CMD_MOVE_PRO_C_CONVERT;
                        temp_weld.command_option = WEL_CMD_MOVE_PRO_C;
                        welding_data.push_back(temp_weld);
                        if(ui->LE_D_0_data_1->text()=="0"){
                            temp_weld.sub_option = WEL_CMD_MOVE_PRO_C_CONVERT;
                            temp_weld.command_option = WEL_CMD_MOVE_PRO_L;
                            welding_data.push_back(temp_weld);
                        }
                    }else{
                        // add 1 0
                        ST_DATA temp_weld = temp_command;
                        if(ui->LE_D_0_data_1->text()=="0"){
                            temp_weld.sub_option = WEL_CMD_MOVE_PRO_C_CONVERT;
                            temp_weld.command_option = WEL_CMD_MOVE_PRO_C;
                            welding_data.push_back(temp_weld);
                        }
                        temp_weld.sub_option = WEL_CMD_MOVE_PRO_C_CONVERT;
                        temp_weld.command_option = WEL_CMD_MOVE_PRO_L;
                        welding_data.push_back(temp_weld);
                    }
                }

            }else if(temp_command.command_option == WEL_CMD_ONEPOINT_WELD){
                int previous_command1 = welding_data.at(welding_data.size()-1).command_option;
                bool is_welding_continue1 = false;
                if(previous_command1 == WEL_CMD_ONEPOINT_WELD){
                    is_welding_continue1 = true;
                }
                if(!is_welding_continue1){
                    // add 1 1
                welding_data.push_back(temp_command);
                welding_data.push_back(temp_command);
                }else{
                    welding_data.push_back(temp_command);
                }

            }else{
                qDebug()<<"정의되지 않은 형태 등장 !!!!!!!!!!!!!!!!";
            }
        }
        // --------------------------------------------
        // 뒤에 두 줄 추가
        // --------------------------------------------
        ST_DATA temp_ending;
        temp_ending.sub_option = 0;
        for(int i=0; i<6; i++){
            temp_ending.joint[i] = 99999;
            temp_ending.tcp[i] = 99999;
        }
        temp_ending.vel = ui->LE_D_0_Movl_Vel ->text().toFloat();
        temp_ending.acc = ui->LE_D_0_Movl_Acc ->text().toFloat();

        temp_ending.current = 175.0;
        temp_ending.voltage = 19.0;

        temp_ending.wait_time = 0;

        temp_ending.arc_on_para[0] = 175.0;
        temp_ending.arc_on_para[1] = 19.0;
        temp_ending.arc_on_para[2] = 0.0;
        temp_ending.arc_on_para[3] = 0;
        temp_ending.arc_on_para[4] = 0;
        temp_ending.arc_on_para[5] = 0;

        temp_ending.arc_off_para[0] = 175.0;
        temp_ending.arc_off_para[1] = 19.0;
        temp_ending.arc_off_para[2] = 0.0;
        temp_ending.arc_off_para[3] = 0;
        temp_ending.arc_off_para[4] = 0;
        temp_ending.arc_off_para[5] = 0;

        temp_ending.wire_para[0] = 0;
        temp_ending.wire_para[1] = 0;
        temp_ending.wire_para[2] = 0;

        temp_ending.weaving_para[0] = 0;
        temp_ending.weaving_para[1] = 0;
        temp_ending.weaving_para[2] = 0;
        temp_ending.weaving_para[3] = 0;
        temp_ending.weaving_para[4] = 0;
        temp_ending.weaving_para[5] = 0;

        for(int i=0; i<6; i++){
            temp_ending.a_axis_para[i] = 0;
        }
        temp_ending.w_persent = 100;
        temp_ending.xx = 0.0;
        temp_ending.yy = 0.0;
        temp_ending.zz = 0.0;

        temp_ending.command_option = WEL_CMD_FINAL_L;
        welding_data.push_back(temp_ending);

        temp_ending.command_option = WEL_CMD_FINAL_J;
        temp_ending.vel = ui->LE_D_0_Movj_Vel ->text().toFloat();
        temp_ending.acc = ui->LE_D_0_Movj_Acc ->text().toFloat();
        welding_data.push_back(temp_ending);

        for(int i=0; i<welding_data.size(); i++){
            if(modify_mode == 1 && i<modify_welding_data.size()){
                for(int j=0; j<6; j++){
                    welding_data[i].joint[j] = modify_welding_data[i].joint[j];
                    welding_data[i].tcp[j] = modify_welding_data[i].tcp[j];
                    welding_data[i].a_axis_para[j] = modify_welding_data[i].a_axis_para[j];
                }
                welding_data[i].xx = modify_welding_data[i].xx;
                welding_data[i].yy = modify_welding_data[i].yy;
                welding_data[i].zz = modify_welding_data[i].zz;
            }
                welding_data[i].lv = 0;
        }

        //================================
        //================================
        Update_TW_10();
        ui->SW_B->setCurrentIndex(1);
        ui->SW_B_1_L->setCurrentIndex(0);
        if(data_jog_type == 0){
            ui->SW_B1R0_C->setCurrentIndex(0);
        }
        if(data_jog_type == 1){
            ui->SW_B1R0_C->setCurrentIndex(1);
        }
        if(data_jog_type == 2){
            ui->SW_B1R0_C->setCurrentIndex(2);
        }
        if(modify_mode == 0){
            ui->SW_B_1_R->setCurrentIndex(0);
        }
        if(modify_mode == 1){
            ui->SW_B_1_R->setCurrentIndex(0);
        }

        ment = 0;
        data_lv = 0;
        motion_scrollbar = 0;
        play_move = 0;
    }
}

void MainWindow::on_PB_B_0_Back_clicked()   // 조건나가기
{
    modify_mode = 0;
    data_start = 0;
    REFRESH_clicked();
    ui->SW_A->setCurrentIndex(1);
}

void MainWindow::on_PB_B0_1_clicked()
{
    data_condition = 0;
}

void MainWindow::on_PB_B0_2_clicked()
{
    data_condition = 1;
}

void MainWindow::on_PB_B0_3_clicked()
{
    data_condition = 2;
}

void MainWindow::on_PB_B0_4_clicked()
{
    data_condition = 3;
}

void MainWindow::on_PB_B0_5_clicked()
{
    data_condition = 4;
}

void MainWindow::on_PB_B0_6_clicked()
{
    data_condition = 5;
}

void MainWindow::on_PB_B0_7_clicked()
{
    data_condition = 6;
}

void MainWindow::on_PB_B0_8_clicked()
{
    data_condition = 7;
}

void MainWindow::on_PB_B0_9_clicked()
{
    data_condition = 8;
}

void MainWindow::on_PB_B0_10_clicked()
{
    data_condition = 9;
}

void MainWindow::on_PB_B0_11_clicked()
{
    data_condition = 10;
}

void MainWindow::B0R1_key_view()
{
    ui->LE_B0R1_key->setText("");
    ui->SW_B_0_R->setCurrentIndex(1);
    switch (data_B0R1_key_view) {
    case 1:
        ui->LE_B0R1_key->setText(ui->LE_B0_A_11->text());
        break;
    case 2:
        ui->LE_B0R1_key->setText(ui->LE_B0_V_11->text());
        break;
    case 3:
        ui->LE_B0R1_key->setText(ui->LE_B0_S_11->text());
        break;
    case 4:
        ui->LE_B0R1_key->setText(ui->LE_B0_T_11->text());
        break;
    case 5:
        ui->LE_B0R1_key->setText(ui->LE_B0_W_11->text());
        break;
    case 6:
        ui->LE_B0R1_key->setText(ui->LE_B0_WT_11->text());
        break;
    case 7:
        ui->LE_B0R1_key->setText(ui->LE_B0_L_11->text());
        break;
    case 8:
        ui->LE_B0R1_key->setText(ui->LE_B0_ONA_11->text());
        break;
    case 9:
        ui->LE_B0R1_key->setText(ui->LE_B0_ONV_11->text());
        break;
    case 10:
        ui->LE_B0R1_key->setText(ui->LE_B0_ONT_11->text());
        break;
    case 11:
        ui->LE_B0R1_key->setText(ui->LE_B0_OFA_11->text());
        break;
    case 12:
        ui->LE_B0R1_key->setText(ui->LE_B0_OFV_11->text());
        break;
    case 13:
        ui->LE_B0R1_key->setText(ui->LE_B0_OFT_11->text());
        break;
    case 14:
        ui->LE_B0R1_key->setText(ui->LE_B0_WU_11->text());
        break;
    case 15:
        ui->LE_B0R1_key->setText(ui->LE_B0_Per_11->text());
        break;
    case 99:
        ui->LE_B0R1_key->setText(ui->TW_1->item(data_TW_1_row,data_TW_1_column)->text());
        break;

    default:
        break;
    }
}

void MainWindow::B0R1_key_clicked_number(QString number)
{
    B0R1_input += number;
    ui->LE_B0R1_key->setText(B0R1_input);
}

void MainWindow::on_PB_B0R1_key_0_clicked(){ B0R1_key_clicked_number("0"); }
void MainWindow::on_PB_B0R1_key_1_clicked(){ B0R1_key_clicked_number("1"); }
void MainWindow::on_PB_B0R1_key_2_clicked(){ B0R1_key_clicked_number("2"); }
void MainWindow::on_PB_B0R1_key_3_clicked(){ B0R1_key_clicked_number("3"); }
void MainWindow::on_PB_B0R1_key_4_clicked(){ B0R1_key_clicked_number("4"); }
void MainWindow::on_PB_B0R1_key_5_clicked(){ B0R1_key_clicked_number("5"); }
void MainWindow::on_PB_B0R1_key_6_clicked(){ B0R1_key_clicked_number("6"); }
void MainWindow::on_PB_B0R1_key_7_clicked(){ B0R1_key_clicked_number("7"); }
void MainWindow::on_PB_B0R1_key_8_clicked(){ B0R1_key_clicked_number("8"); }
void MainWindow::on_PB_B0R1_key_9_clicked(){ B0R1_key_clicked_number("9"); }
void MainWindow::on_PB_B0R1_key_minus_clicked(){ B0R1_key_clicked_number("-"); }

void MainWindow::on_PB_B0R1_key_back_clicked()
{
    //! 현재입력된 값의 글자수가 1보다 클때
    if(B0R1_input.length() > 1) {
        //! 가장 마지막값 1개를 지움
        B0R1_input.resize(B0R1_input.length()-1);
        ui->LE_B0R1_key->setText(B0R1_input);
    } else {
        B0R1_input = "";
        ui->LE_B0R1_key->setText(B0R1_input);
    }
}

void MainWindow::on_PB_B0R1_key_dot_clicked()
{
    //! 현재입력값에 '.' 이 포함되어 있다면
    if(B0R1_input.contains(".")) {
        B0R1_key_clicked_number(".");
        on_PB_B0R1_key_back_clicked();
    } else {
        B0R1_key_clicked_number(".");
    }
}

void MainWindow::on_PB_B0R1_key_enter_clicked()
{
    switch (data_B0R1_key_view) {
    case 1:
        ui->LE_B0_A_11->setText(ui->LE_B0R1_key->text());
        break;
    case 2:
        if(data_weld_type ==4 && ui->LE_B0R1_key->text().toFloat() <= 50)
        {
            ui->LE_B0R1_key->setText("50");
        }
        if(data_weld_type ==4 && ui->LE_B0R1_key->text().toFloat() >= 150)
        {
            ui->LE_B0R1_key->setText("150");
        }
        ui->LE_B0_V_11->setText(ui->LE_B0R1_key->text());
        break;
    case 3:
        ui->LE_B0_S_11->setText(ui->LE_B0R1_key->text());
        break;
    case 4:
        ui->LE_B0_T_11->setText(ui->LE_B0R1_key->text());
        break;
    case 5:
        ui->LE_B0_W_11->setText(ui->LE_B0R1_key->text());
        break;
    case 6:
        ui->LE_B0_WT_11->setText(ui->LE_B0R1_key->text());
        break;
    case 7:
        ui->LE_B0_L_11->setText(ui->LE_B0R1_key->text());
        break;
    case 8:
        ui->LE_B0_ONA_11->setText(ui->LE_B0R1_key->text());
        break;
    case 9:
        if(data_weld_type ==4 && ui->LE_B0R1_key->text().toFloat() <= 50)
        {
            ui->LE_B0R1_key->setText("50");
        }
        if(data_weld_type ==4 && ui->LE_B0R1_key->text().toFloat() >= 150)
        {
            ui->LE_B0R1_key->setText("150");
        }
        ui->LE_B0_ONV_11->setText(ui->LE_B0R1_key->text());
        break;
    case 10:
        ui->LE_B0_ONT_11->setText(ui->LE_B0R1_key->text());
        break;
    case 11:
        ui->LE_B0_OFA_11->setText(ui->LE_B0R1_key->text());
        break;
    case 12:
        if(data_weld_type ==4 && ui->LE_B0R1_key->text().toFloat() <= 50)
        {
            ui->LE_B0R1_key->setText("50");
        }
        if(data_weld_type ==4 && ui->LE_B0R1_key->text().toFloat() >= 150)
        {
            ui->LE_B0R1_key->setText("150");
        }
        ui->LE_B0_OFV_11->setText(ui->LE_B0R1_key->text());
        break;
    case 13:
        ui->LE_B0_OFT_11->setText(ui->LE_B0R1_key->text());
        break;
    case 14:
        ui->LE_B0_WU_11->setText(ui->LE_B0R1_key->text());
        break;
    case 15:
        ui->LE_B0_Per_11->setText(ui->LE_B0R1_key->text());
        break;
    case 99:
        ui->TW_1->item(data_TW_1_row,data_TW_1_column)->setText(ui->LE_B0R1_key->text());
        break;
    default:

        break;
    }
    data_B0R1_key_view = 0;
    ui->SW_B_0_R->setCurrentIndex(0);
    on_PB_B0_11_clicked();
}

void MainWindow::on_PB_B0R1_key_exit_clicked()
{
   data_B0R1_key_view = 0;
   ui->SW_B_0_R->setCurrentIndex(0);
}

void MainWindow::on_LE_B0_A_11_cursorPositionChanged(int arg1, int arg2)
{
    data_B0R1_key_view = 1;
    B0R1_input = "";
    B0R1_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_B0_V_11_cursorPositionChanged(int arg1, int arg2)
{
    data_B0R1_key_view = 2;
    B0R1_input = "";
    B0R1_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_B0_S_11_cursorPositionChanged(int arg1, int arg2)
{
    data_B0R1_key_view = 3;
    B0R1_input = "";
    B0R1_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_B0_T_11_cursorPositionChanged(int arg1, int arg2)
{
    data_B0R1_key_view = 4;
    B0R1_input = "";
    B0R1_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_B0_W_11_cursorPositionChanged(int arg1, int arg2)
{
    data_B0R1_key_view = 5;
    B0R1_input = "";
    B0R1_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_B0_WT_11_cursorPositionChanged(int arg1, int arg2)
{
    data_B0R1_key_view = 6;
    B0R1_input = "";
    B0R1_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_B0_L_11_cursorPositionChanged(int arg1, int arg2)
{
    data_B0R1_key_view = 7;
    B0R1_input = "";
    B0R1_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_B0_ONA_11_cursorPositionChanged(int arg1, int arg2)
{
    data_B0R1_key_view = 8;
    B0R1_input = "";
    B0R1_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_B0_ONV_11_cursorPositionChanged(int arg1, int arg2)
{
    data_B0R1_key_view = 9;
    B0R1_input = "";
    B0R1_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_B0_ONT_11_cursorPositionChanged(int arg1, int arg2)
{
    data_B0R1_key_view = 10;
    B0R1_input = "";
    B0R1_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_B0_OFA_11_cursorPositionChanged(int arg1, int arg2)
{
    data_B0R1_key_view = 11;
    B0R1_input = "";
    B0R1_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_B0_OFV_11_cursorPositionChanged(int arg1, int arg2)
{
    data_B0R1_key_view = 12;
    B0R1_input = "";
    B0R1_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_B0_OFT_11_cursorPositionChanged(int arg1, int arg2)
{
    data_B0R1_key_view = 13;
    B0R1_input = "";
    B0R1_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_B0_WU_11_cursorPositionChanged(int arg1, int arg2)
{
    data_B0R1_key_view = 14;
    B0R1_input = "";
    B0R1_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_B0_Per_11_cursorPositionChanged(int arg1, int arg2)
{
    data_B0R1_key_view = 15;
    B0R1_input = "";
    B0R1_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_B0_A_11_selectionChanged()
{
    if(ui->LE_B0_A_11->text()==""){
        on_LE_B0_A_11_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_LE_B0_V_11_selectionChanged()
{
    if(ui->LE_B0_V_11->text()==""){
        on_LE_B0_V_11_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_LE_B0_S_11_selectionChanged()
{
    if(ui->LE_B0_S_11->text()==""){
        on_LE_B0_S_11_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_LE_B0_T_11_selectionChanged()
{
    if(ui->LE_B0_T_11->text()==""){
        on_LE_B0_T_11_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_LE_B0_W_11_selectionChanged()
{
    if(ui->LE_B0_W_11->text()==""){
        on_LE_B0_W_11_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_LE_B0_WT_11_selectionChanged()
{
    if(ui->LE_B0_WT_11->text()==""){
        on_LE_B0_WT_11_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_LE_B0_L_11_selectionChanged()
{
    if(ui->LE_B0_L_11->text()==""){
        on_LE_B0_L_11_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_LE_B0_ONA_11_selectionChanged()
{
    if(ui->LE_B0_ONA_11->text()==""){
        on_LE_B0_ONA_11_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_LE_B0_ONV_11_selectionChanged()
{
    if(ui->LE_B0_ONV_11->text()==""){
        on_LE_B0_ONV_11_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_LE_B0_ONT_11_selectionChanged()
{
    if(ui->LE_B0_ONT_11->text()==""){
        on_LE_B0_ONT_11_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_LE_B0_OFA_11_selectionChanged()
{
    if(ui->LE_B0_OFA_11->text()==""){
        on_LE_B0_OFA_11_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_LE_B0_OFV_11_selectionChanged()
{
    if(ui->LE_B0_OFV_11->text()==""){
        on_LE_B0_OFV_11_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_LE_B0_OFT_11_selectionChanged()
{
    if(ui->LE_B0_OFT_11->text()==""){
        on_LE_B0_OFT_11_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_LE_B0_WU_11_selectionChanged()
{
    if(ui->LE_B0_WU_11->text()==""){
        on_LE_B0_WU_11_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_LE_B0_Per_11_selectionChanged()
{
    if(ui->LE_B0_Per_11->text()==""){
        on_LE_B0_Per_11_cursorPositionChanged(0,0);
    }
}
void MainWindow::on_TW_1_cellDoubleClicked(int row, int column)
{
    if(column>0){
    data_B0R1_key_view = 99;
    data_TW_1_row = row;
    data_TW_1_column = column;
    B0R1_input = "";
    B0R1_key_view();
    }
    qDebug()<<"on_TW_1_cellDoubleClicked:"<<row<<","<<column<<endl;
}

#define PB_B_0_PART_END }
// ===========================================================
#define PB_B_1_PART_START   {
void MainWindow::on_PB_B_1_Back_clicked()   // 교시뒤로가기
{
    on_PB_B1R1_key_exit_clicked();
    if(ui->TW_10->item(0, 1)->text() != "교시중"){
        motion_scrollbar = motion_scrollbar-2;
        ui->TW_10->verticalScrollBar()->setSliderPosition(motion_scrollbar);
        motion_scrollbar = motion_scrollbar+1;

    for(int i = (welding_data.size()-1); i>=0 ; i--){
        Update_TW_10_welding_data();
            welding_data[i].lv = 0;
                if(teach_mode == 0){
                    ST_DATA temp_line = welding_data.at(i);
                    if(temp_line.command_option != WEL_CMD_WAIT_TIME && temp_line.command_option != WEL_CMD_WAIT_DIN && ui->TW_10->item(i, 1)->text() != "설정 안됨"&& ui->TW_10->item(i, 1)->text() != "교시중"){
                        /*for(int j=0; j<6; j++){
                            welding_data[i].joint[j] = 99999;
                            welding_data[i].tcp[j] = 99999;
                            welding_data[i].a_axis_para[j] = 0;
                        }*/
                        data_lv = i;
                        Update_TW_10();
                        return;
                    }
                }
                if(teach_mode == 1){
                    ST_DATA temp_line = welding_data.at(i);
                    if(temp_line.command_option != WEL_CMD_WAIT_TIME && temp_line.command_option != WEL_CMD_WAIT_DIN && ui->TW_10->item(i, 1)->text() != "설정 안됨"&& ui->TW_10->item(i, 1)->text() != "교시중"){
                        for(int j=0; j<6; j++){
                            welding_data[i].joint[j] = welding_data[i].joint[j];
                            welding_data[i].tcp[j] = welding_data[i].tcp[j];
                            welding_data[i].a_axis_para[j] = welding_data[i].a_axis_para[j];
                        }
                        welding_data[i].xx = welding_data[i].xx;
                        welding_data[i].yy = welding_data[i].yy;
                        welding_data[i].zz = welding_data[i].zz;
                        data_lv = i;
                        Update_TW_10();
                        return;
                    }
                }
    }

    Update_TW_10();

    }else{
        //뒤로가기
        if(data_robotfree == 1 && sys_status.sdata.is_freedrive_mode == 1)
        {
            QString text;
            text.sprintf("freedrive_teach_off()");
            cmdConfirmFlag = false;
            sockCmd.write(text.toStdString().c_str(), text.toStdString().length());
        }
        ui->SW_B->setCurrentIndex(0);
        if(ui->LE_D_0_data_0->text()=="0"){
        ui->SW_data_A->setCurrentIndex(0);
        }
        if(ui->LE_D_0_data_0->text()=="1"){
        ui->SW_data_A->setCurrentIndex(1);
        }
        if(ui->LE_D_0_data_0->text()=="2"){
        ui->SW_data_A->setCurrentIndex(2);
        }
        if(ui->LE_D_0_data_0->text()=="3"){
        ui->SW_data_A->setCurrentIndex(1);
        }
        mMediaPlayer->stop();
    }
}

void MainWindow::on_PB_B_1_GAS_pressed()
{
    QString text;
    text.sprintf("digital_out -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1");
    cmdConfirmFlag = false;
    sockCmd.write(text.toStdString().c_str(), text.toStdString().length());
}

void MainWindow::on_PB_B_1_GAS_released()
{
    QString text;
    text.sprintf("digital_out -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1, -1, -1, -1, -1");
    cmdConfirmFlag = false;
    sockCmd.write(text.toStdString().c_str(), text.toStdString().length());
}

void MainWindow::on_PB_B_1_Fwd_pressed()
{
    QString text;
    text.sprintf("digital_out -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1");
    cmdConfirmFlag = false;
    sockCmd.write(text.toStdString().c_str(), text.toStdString().length());
}

void MainWindow::on_PB_B_1_Fwd_released()
{
    QString text;
    text.sprintf("digital_out -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1, -1, -1, -1");
    cmdConfirmFlag = false;
    sockCmd.write(text.toStdString().c_str(), text.toStdString().length());
}

void MainWindow::on_PB_B_1_Bwd_pressed()
{
    QString text;
    text.sprintf("digital_out -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1");
    cmdConfirmFlag = false;
    sockCmd.write(text.toStdString().c_str(), text.toStdString().length());
}

void MainWindow::on_PB_B_1_Bwd_released()
{
    QString text;
    text.sprintf("digital_out -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1, -1, -1");
    cmdConfirmFlag = false;
    sockCmd.write(text.toStdString().c_str(), text.toStdString().length());
}
void MainWindow::on_PB_B_1_Set_clicked()    // 교시완료
{
    on_PB_B1R1_key_exit_clicked();
    if(ui->TW_10->item(ui->TW_10->rowCount()-1, 1)->text() != "설정 완료"){
        data_next = 0;
        ui->TW_10->verticalScrollBar()->setSliderPosition(motion_scrollbar);
        motion_scrollbar = motion_scrollbar+1;

        for(int i=0; i<welding_data.size(); i++){

            Update_TW_10_welding_data();
            welding_data[i].lv = 1;
            if(teach_mode == 0){
                if(ui->TW_10->item(i, 1)->text() != "설정 완료"){
                    for(int j=0; j<6; j++){
                        welding_data[i].joint[j] = sys_status.sdata.jnt_ref[j];
                        welding_data[i].tcp[j] = sys_status.sdata.tcp_ref[j];
                        welding_data[i].a_axis_para[j] = sys_status.sdata.aa_joint_ref[j];
                    }
                    data_lv = i;
                    Update_TW_10();

                    return;
                    }
            }
            if(teach_mode == 1){
                    if(ui->TW_10->item(i, 1)->text() != "설정 완료"){
                        Update_TW_10_welding_data();
                        for(int j=0; j<6; j++){
                            welding_data[i].joint[j] = welding_data[i].joint[j];
                            welding_data[i].tcp[j] = welding_data[i].tcp[j];
                            welding_data[i].a_axis_para[j] = welding_data[i].a_axis_para[j];
                        }
                        data_lv = i;
                        Update_TW_10();
                        return;
                    }
            }
        }
    }else{
        bool check_fail = false;
                for(int i=0; i<welding_data.size(); i++){
                    for(int k=0; k<6; k++){
                        if(welding_data[i].command_option == WEL_CMD_INIT_J || welding_data[i].command_option == WEL_CMD_MOVE_J || welding_data[i].command_option == WEL_CMD_FINAL_J){
                            if(welding_data[i].joint[k] > 360. || welding_data[i].joint[k] < -360.){
                                check_fail = true;
                            }

                        }
                        if(welding_data[i].command_option != WEL_CMD_INIT_J && welding_data[i].command_option != WEL_CMD_MOVE_J && welding_data[i].command_option != WEL_CMD_FINAL_J){
                            if(welding_data[i].tcp[k] > 2000. || welding_data[i].tcp[k] < -2000.){
                                check_fail = true;
                            }
                        }

                    }
                }
                if(check_fail){
                    qDebug()<<"교시되지 않은 지점이 존재합니다.";
                    QMessageBox::warning(this, MSG_JCT_TITLE, MSG_UN_TEACHED_INFORMATION);
                    return;
                }
    //실행
    data_next = 1;
    modify_mode = 0;
    ui->LE_B_2_Save->setText("Play");
    }
}

void MainWindow::B1R1_key_view()
{
    ui->LE_B1R1_key->setText("");
    ui->SW_B_1_R->setCurrentIndex(1);
    switch (data_B1R1_key_view) {
    case 1:
        ui->LE_B1R1_key->setText(ui->LE_B1R0_mm->text());
        break;
    case 2:
        ui->LE_B1R1_key->setText(ui->LE_B1R0_deg->text());
        break;
    case 99:
        ui->LE_B1R1_key->setText(ui->TW_10->item(data_TW_10_row,data_TW_10_column)->text());
        break;

    default:
        break;
    }
}

void MainWindow::B1R1_key_clicked_number(QString number)
{
    B1R1_input += number;
    ui->LE_B1R1_key->setText(B1R1_input);
}

void MainWindow::on_PB_B1R1_key_0_clicked(){ B1R1_key_clicked_number("0"); }
void MainWindow::on_PB_B1R1_key_1_clicked(){ B1R1_key_clicked_number("1"); }
void MainWindow::on_PB_B1R1_key_2_clicked(){ B1R1_key_clicked_number("2"); }
void MainWindow::on_PB_B1R1_key_3_clicked(){ B1R1_key_clicked_number("3"); }
void MainWindow::on_PB_B1R1_key_4_clicked(){ B1R1_key_clicked_number("4"); }
void MainWindow::on_PB_B1R1_key_5_clicked(){ B1R1_key_clicked_number("5"); }
void MainWindow::on_PB_B1R1_key_6_clicked(){ B1R1_key_clicked_number("6"); }
void MainWindow::on_PB_B1R1_key_7_clicked(){ B1R1_key_clicked_number("7"); }
void MainWindow::on_PB_B1R1_key_8_clicked(){ B1R1_key_clicked_number("8"); }
void MainWindow::on_PB_B1R1_key_9_clicked(){ B1R1_key_clicked_number("9"); }
void MainWindow::on_PB_B1R1_key_minus_clicked(){ B1R1_key_clicked_number("-"); }

void MainWindow::on_PB_B1R1_key_back_clicked()
{
    //! 현재입력된 값의 글자수가 1보다 클때
    if(B1R1_input.length() > 1) {
        //! 가장 마지막값 1개를 지움
        B1R1_input.resize(B1R1_input.length()-1);
        ui->LE_B1R1_key->setText(B1R1_input);
    } else {
        B1R1_input = "";
        ui->LE_B1R1_key->setText(B1R1_input);
    }
}

void MainWindow::on_PB_B1R1_key_dot_clicked()
{
    //! 현재입력값에 '.' 이 포함되어 있다면
    if(B1R1_input.contains(".")) {
        B1R1_key_clicked_number(".");
        on_PB_B1R1_key_back_clicked();
    } else {
        B1R1_key_clicked_number(".");
    }
}

void MainWindow::on_PB_B1R1_key_enter_clicked()
{
    switch (data_B1R1_key_view) {
    case 1:
        ui->LE_B1R0_mm->setText(ui->LE_B1R1_key->text());
        break;
    case 2:
        ui->LE_B1R0_deg->setText(ui->LE_B1R1_key->text());
        break;
    case 99:
        ui->TW_10->item(data_TW_10_row,data_TW_10_column)->setText(ui->LE_B1R1_key->text());
        break;
    default:

        break;
    }
    data_B1R1_key_view = 0;
    if(modify_mode == 0){
        ui->SW_B_1_R->setCurrentIndex(0);
    }
    if(modify_mode == 1){
        ui->SW_B_1_R->setCurrentIndex(0);
    }
}

void MainWindow::on_PB_B1R1_key_exit_clicked()
{
   data_B1R1_key_view = 0;
   if(modify_mode == 0){
       ui->SW_B_1_R->setCurrentIndex(0);
   }
   if(modify_mode == 1){
       ui->SW_B_1_R->setCurrentIndex(0);
   }
}

void MainWindow::on_TW_10_cellDoubleClicked(int row, int column)
{
    if(column>1){
    data_B1R1_key_view = 99;
    data_TW_10_row = row;
    data_TW_10_column = column;
    B1R1_input = "";
    B1R1_key_view();
    }
    qDebug()<<"on_TW_10_cellDoubleClicked:"<<row<<","<<column<<endl;
}
#define PB_B_1_PART_END }
// ===========================================================
#define PB_B_2_PART_START   {
void MainWindow::on_PB_B_2_0_clicked() // 저장모드
{
    if(ui->LE_D_0_data_0->text()=="0"){
        ui->SW_B_2_C->setCurrentIndex(2);
    }
    if(ui->LE_D_0_data_0->text()=="1"){     //한독
        ui->SW_B_2_C->setCurrentIndex(3);
    }
    if(ui->LE_D_0_data_0->text()=="2"){     //두이엔지
        ui->SW_B_2_C->setCurrentIndex(4);
    }
    if(ui->LE_D_0_data_0->text()=="3"){     //한독
        ui->SW_B_2_C->setCurrentIndex(3);
    }

}

void MainWindow::on_PB_B_2_Back_clicked()   // 나가기
{
    play_move = 0;
    modify_mode = 0;
    data_start = 0;
    on_PB_B_2_Stop_clicked();
    REFRESH_clicked();
    ui->SW_A->setCurrentIndex(1);
    mMediaPlayer->stop();
}

void MainWindow::on_PB_B_2_Mod_clicked()    // 수정
{
    play_move = 0;
    data_start = 0;
    modify_mode = 1;
    on_PB_B_2_Stop_clicked();
    Update_modify_data();
    ui->SW_A->setCurrentIndex(2);
    ui->SW_B->setCurrentIndex(0);
    if(ui->LE_D_0_data_0->text()=="0" || ui->LE_D_0_data_0->text()=="2"){
    ui->SW_data_A->setCurrentIndex(0);
    }
    if(ui->LE_D_0_data_0->text()=="1"){
    ui->SW_data_A->setCurrentIndex(1);
    }
    if(ui->LE_D_0_data_0->text()=="3"){
    ui->SW_data_A->setCurrentIndex(1);
    }
    mMediaPlayer->stop();

}

void MainWindow::on_PB_B_2_Play_clicked()   // 실행
{
    play_move = 0;
    play_type = 0;
    make_and_run(0);
}
void MainWindow::make_and_run(unsigned int index_num){
    if(sys_status.sdata.op_stat_soft_estop_occur!=1){
     ui->PB_B_2_Play->setStyleSheet("QPushButton{border-image: url(:/a/image/실행눌-274x287.png)}");
     ui->PB_C_7_Play->setStyleSheet("QPushButton{border-image: url(:/a/image/실행눌-274x287.png)}");
        // 사이즈 검사
        qDebug()<<"프로그램 welding data 사이즈: "<<welding_data.size();
        if(welding_data.size() < 4){
            qDebug()<<"정보가 부족합니다 ... !!!";
            QMessageBox::warning(this, MSG_JCT_TITLE, MSG_WELDING_DATA_SIZE_SMALL2);
            return;
        }
        // 작업 내용 검사
        bool check_fail = false;
        for(int i=0; i<welding_data.size(); i++){
            for(int k=0; k<6; k++){
                if(welding_data[i].command_option == WEL_CMD_INIT_J || welding_data[i].command_option == WEL_CMD_MOVE_J || welding_data[i].command_option == WEL_CMD_FINAL_J){
                    if(welding_data[i].joint[k] > 360. || welding_data[i].joint[k] < -360.){
                        check_fail = true;
                    }

                }
                if(welding_data[i].command_option != WEL_CMD_INIT_J && welding_data[i].command_option != WEL_CMD_MOVE_J && welding_data[i].command_option != WEL_CMD_FINAL_J){
                    if(welding_data[i].tcp[k] > 2000. || welding_data[i].tcp[k] < -2000.){
                        check_fail = true;
                    }
                }

            }
        }
        if(check_fail){
            qDebug()<<"교시되지 않은 지점이 존재합니다.";
            QMessageBox::warning(this, MSG_JCT_TITLE, MSG_UN_TEACHED_INFORMATION);
            return;
        }
        // 작업 파일 생성
        if(play_type == 0){
            Script_Maker("my_jct_program", index_num);
        }
        if(play_type == 1){
            if(mode_type == 0){
            Script_Maker("my_jct_program", index_num);
            qDebug()<<"base_load_2"<<endl;
            }
            if(mode_type == 1){
            Script_Maker("my_jct_program_LH", index_num);
            qDebug()<<"LH_load_2"<<endl;
            }
            if(mode_type == 2){
            Script_Maker("my_jct_program_RH", index_num);
            qDebug()<<"RH_load_2"<<endl;
            }
            if(mode_type == 3){
            Script_Maker("my_jct_program_HOME", index_num);
            qDebug()<<"HOME_load_2"<<endl;
            }
        }
        if(play_type == 2){
            if(mode_type == 0){
            Script_Maker("my_jct_program", index_num);
            qDebug()<<"base_load_2"<<endl;
            }
            if(mode_type == 11){
            Script_Maker("my_jct_program_JIG1", index_num);
            qDebug()<<"JIG1_load_2"<<endl;
            }
            if(mode_type == 12){
            Script_Maker("my_jct_program_JIG2", index_num);
            qDebug()<<"JIG2_load_2"<<endl;
            }
            if(mode_type == 13){
            Script_Maker("my_jct_program_JIG3", index_num);
            qDebug()<<"JIG3_load_2"<<endl;
            }
            if(mode_type == 3){
            Script_Maker("my_jct_program_HOME", index_num);
            qDebug()<<"HOME_load_2"<<endl;
            }
        }
        if(play_type == 3){
            if(mode_type == 100){
            Script_Maker("jct_master", index_num);
            qDebug()<<"jct_master"<<endl;
            }
            if(mode_type == 101){
            Script_Maker("jct_file1", index_num);
            qDebug()<<"jct_file1"<<endl;
            }
            if(mode_type == 102){
            Script_Maker("jct_file2", index_num);
            qDebug()<<"jct_file2"<<endl;
            }
            if(mode_type == 103){
            Script_Maker("jct_file3", index_num);
            qDebug()<<"jct_file3"<<endl;
            }
            if(mode_type == 104){
            Script_Maker("jct_file4", index_num);
            qDebug()<<"jct_file4"<<endl;
            }
            if(mode_type == 105){
            Script_Maker("jct_file5", index_num);
            qDebug()<<"jct_file5"<<endl;
            }
            if(mode_type == 106){
            Script_Maker("jct_file6", index_num);
            qDebug()<<"jct_file6"<<endl;
            }
            if(mode_type == 107){
            Script_Maker("jct_file7", index_num);
            qDebug()<<"jct_file7"<<endl;
            }
            if(mode_type == 108){
            Script_Maker("jct_file8", index_num);
            qDebug()<<"jct_file8"<<endl;
            }
            if(mode_type == 109){
            Script_Maker("jct_file9", index_num);
            qDebug()<<"jct_file9"<<endl;
            }
            if(mode_type == 110){
            Script_Maker("jct_file10", index_num);
            qDebug()<<"jct_file10"<<endl;
            }
        }
        //
        // 작업 파일 전송>로드>재생 프로세스 시작
        if(sockConnectionStatusCmd && sockConnectionStatusData){
            if(sys_status.sdata.task_state == 1){
                qDebug()<<"[TLR] step 1"<<endl;
                TLR_step = 1;
            }else{
                qDebug()<<"다른 프로그램이 재생 중 입니다.";
                QMessageBox::warning(this, MSG_JCT_TITLE, MSG_OTHER_PROGRAM_IS_RUN);
            }
        }else{
            qDebug()<<"통신이 연결되어 있지 않습니다";
            QMessageBox::warning(this, MSG_JCT_TITLE, MSG_NO_CONNECTION);

        }
    }
    if(sys_status.sdata.op_stat_soft_estop_occur==1){

        PROGRAM_RESUME();
        ui->PB_B_2_Play->setStyleSheet("QPushButton{border-image: url(:/a/image/실행눌-274x287.png)}");
        ui->PB_C_3_Play->setStyleSheet("QPushButton{border-image: url(:/a/image/실행눌-274x287.png)}");
        ui->PB_C_5_Play->setStyleSheet("QPushButton{border-image: url(:/a/image/실행눌-274x287.png)}");

    }
}
void MainWindow::on_PB_B_2_Pause_clicked()  // 일시정지
{
    if(sockConnectionStatusCmd && sockConnectionStatusData){
        sockCmd.write("task pause ");
    }else{
        qDebug()<<"on_PB_B_2_Pause_clicked"<<endl;
        QMessageBox::warning(this, MSG_JCT_TITLE, MSG_NO_CONNECTION);
    }
    ui->PB_B_2_Play->setStyleSheet("QPushButton{border-image: url(:/a/image/실행-274x287.png)}");
    data_start = 0;
}

void MainWindow::PROGRAM_RESUME()
{
    if(sockConnectionStatusCmd && sockConnectionStatusData){
        sockCmd.write("task resume_a ");
    }else{
        qDebug()<<"PROGRAM_RESUME"<<endl;
        QMessageBox::warning(this, MSG_JCT_TITLE, MSG_NO_CONNECTION);
    }
}

void MainWindow::on_PB_B_2_Stop_clicked()   // 정지
{
    if(sockConnectionStatusCmd == true && sockConnectionStatusData == true){
        if(sockConnectionStatusCmd && sockConnectionStatusData){
            sockCmd.write("task stop ");
        }else{
            qDebug()<<"on_PB_B_2_Stop_clicked"<<endl;
            QMessageBox::warning(this, MSG_JCT_TITLE, MSG_NO_CONNECTION);
        }
        ui->PB_B_2_Play->setStyleSheet("QPushButton{border-image: url(:/a/image/실행-274x287.png)}");
        ui->PB_C_3_Play->setStyleSheet("QPushButton{border-image: url(:/a/image/실행-274x287.png)}");
        ui->PB_C_5_Play->setStyleSheet("QPushButton{border-image: url(:/a/image/실행-274x287.png)}");
        ui->PB_C_7_Play->setStyleSheet("QPushButton{border-image: url(:/a/image/실행-274x287.png)}");

        data_start = 0;
    }

}

void MainWindow::on_PB_B_2_nPlay_clicked()  // 중도실행
{
    int target_line = ui->LE_B_2_nPlay->text().toInt();
    if(target_line >=1 && target_line<=welding_data.size()){
        make_and_run(target_line-1);
    }else{
        QMessageBox::warning(this, MSG_JCT_TITLE, MSG_WRONG_PROGRAM_LINE_NUMBER);
    }
}

void MainWindow::on_PB_B_2_Save_clicked()   // 저장
{
    // 작업 내용 검사
    if(welding_data.size()<4){
        qDebug()<<"불완전한 데이터 저장을 시도합니다. 저장 실패";
        QMessageBox::warning(this, MSG_JCT_TITLE, MSG_WELDING_DATA_SIZE_SMALL);
        return;
    }

    bool check_fail = false;
    for(int i=0; i<welding_data.size(); i++){
        for(int k=0; k<6; k++){
            if(welding_data[i].joint[k] > 360. || welding_data[i].joint[k] < -360.){
                check_fail = true;
            }
            if(welding_data[i].tcp[k] > 2000. || welding_data[i].tcp[k] < -2000.){
                check_fail = true;
            }
        }
    }
    if(check_fail){
        qDebug()<<"교시되지 않은 지점이 존재합니다.";
        QMessageBox::warning(this, MSG_JCT_TITLE, MSG_UN_TEACHED_INFORMATION);
        return;
    }
    QString filename;
    if(save_file_no==0){
        save_type = ui->LE_B_2_Save->text();
        filename = QFileDialog::getSaveFileName(this, "JCT 용접 파일 저장", save_type, "JCT File (*.jct);; All Files (*)");
    }else{
        filename = QApplication::applicationDirPath() + "/data/" + save_type + ".jct";
    }

    qDebug()<<filename;
    if(filename.isEmpty())
        return;

    QFile file(filename);
    if(!file.open(QIODevice::WriteOnly)){
        QMessageBox::warning(this, "파일 저장 실패", file.errorString());
        return;
    }

    QDataStream out(&file);
    out << welding_data;
    out << command_data;

    save_file_no = 0;
}

void MainWindow::B2C01_key_view()
{
    ui->LE_B2C01_key->setText("");
    ui->SW_B2C0->setCurrentIndex(1);
    switch (data_B2C01_key_view) {
    case 1:
        ui->LE_B2C01_key->setText(ui->LE_B_2_nPlay->text());
        break;
    case 2:
        ui->LE_B2C01_key->setText(ui->LE_icv_sec->text());
        break;
    case 3:
        ui->LE_B2C01_key->setText(ui->LE_icv_x->text());
        break;
    case 4:
        ui->LE_B2C01_key->setText(ui->LE_icv_y->text());
        break;
    case 5:
        ui->LE_B2C01_key->setText(ui->LE_icv_z->text());
        break;
    case 6:
        ui->LE_B2C01_key->setText(ui->LE_arc_set_A_2->text());
        break;
    case 7:
        ui->LE_B2C01_key->setText(ui->LE_arc_set_V_2->text());
        break;
    default:
        break;
    }
}

void MainWindow::B2C01_key_clicked_number(QString number)
{
    B2C01_input += number;
    ui->LE_B2C01_key->setText(B2C01_input);
}
void MainWindow::on_PB_B2C01_key_dot_clicked(){ B2C01_key_clicked_number("."); }
void MainWindow::on_PB_B2C01_key_0_clicked(){ B2C01_key_clicked_number("0"); }
void MainWindow::on_PB_B2C01_key_1_clicked(){ B2C01_key_clicked_number("1"); }
void MainWindow::on_PB_B2C01_key_2_clicked(){ B2C01_key_clicked_number("2"); }
void MainWindow::on_PB_B2C01_key_3_clicked(){ B2C01_key_clicked_number("3"); }
void MainWindow::on_PB_B2C01_key_4_clicked(){ B2C01_key_clicked_number("4"); }
void MainWindow::on_PB_B2C01_key_5_clicked(){ B2C01_key_clicked_number("5"); }
void MainWindow::on_PB_B2C01_key_6_clicked(){ B2C01_key_clicked_number("6"); }
void MainWindow::on_PB_B2C01_key_7_clicked(){ B2C01_key_clicked_number("7"); }
void MainWindow::on_PB_B2C01_key_8_clicked(){ B2C01_key_clicked_number("8"); }
void MainWindow::on_PB_B2C01_key_9_clicked(){ B2C01_key_clicked_number("9"); }
void MainWindow::on_PB_B2C01_key_minus_clicked(){ B2C01_key_clicked_number("-"); }

void MainWindow::on_PB_B2C01_key_back_clicked()
{
    //! 현재입력된 값의 글자수가 1보다 클때
    if(B2C01_input.length() > 1) {
        //! 가장 마지막값 1개를 지움
        B2C01_input.resize(B2C01_input.length()-1);
        ui->LE_B2C01_key->setText(B2C01_input);
    } else {
        B2C01_input = "";
        ui->LE_B2C01_key->setText(B2C01_input);
    }
}

void MainWindow::on_PB_B2C01_key_enter_clicked()
{
    switch (data_B2C01_key_view) {
    case 1:
        ui->LE_B_2_nPlay->setText(ui->LE_B2C01_key->text());
        break;
    case 2:
        ui->LE_icv_sec->setText(ui->LE_B2C01_key->text());
        icv_sec = ui->LE_icv_sec->text().toFloat();
        break;
    case 3:
        ui->LE_icv_x->setText(ui->LE_B2C01_key->text());
        icv_x = ui->LE_icv_x->text().toFloat();
        break;
    case 4:
        ui->LE_icv_y->setText(ui->LE_B2C01_key->text());
        icv_y = ui->LE_icv_y->text().toFloat();
        break;
    case 5:
        ui->LE_icv_z->setText(ui->LE_B2C01_key->text());
        icv_z = ui->LE_icv_z->text().toFloat();
        break;
    case 6:
        ui->LE_arc_set_A_2->setText(ui->LE_B2C01_key->text());
        break;
    case 7:
        ui->LE_arc_set_V_2->setText(ui->LE_B2C01_key->text());
        break;
    default:
        break;
    }
    data_B2C01_key_view = 0;
    if(data_weld_play==0){
        ui->SW_B2C0->setCurrentIndex(0);
        ui->SW_C7C0->setCurrentIndex(0);
    }
    if(data_weld_play==1){
        ui->SW_B2C0->setCurrentIndex(2);
        ui->SW_C7C0->setCurrentIndex(2);
    }
    if(ui->LE_D_0_data_0->text()=="0"){
        ui->SW_data_B->setCurrentIndex(0);
    }
    if(ui->LE_D_0_data_0->text()=="1"){
        ui->SW_data_B->setCurrentIndex(1);
    }
    if(ui->LE_D_0_data_0->text()=="2"){
        ui->SW_data_B->setCurrentIndex(2);
    }
    if(ui->LE_D_0_data_0->text()=="3"){
        ui->SW_data_B->setCurrentIndex(1);
    }

}

void MainWindow::on_PB_B2C01_key_exit_clicked()
{
    data_B2C01_key_view = 0;
    if(data_weld_play==0){
        ui->SW_B2C0->setCurrentIndex(0);
        ui->SW_C7C0->setCurrentIndex(0);
    }
    if(data_weld_play==1){
        ui->SW_B2C0->setCurrentIndex(2);
        ui->SW_C7C0->setCurrentIndex(2);
    }
    if(ui->LE_D_0_data_0->text()=="0"){
        ui->SW_data_B->setCurrentIndex(0);
    }
    if(ui->LE_D_0_data_0->text()=="1"){
        ui->SW_data_B->setCurrentIndex(1);
    }
    if(ui->LE_D_0_data_0->text()=="2"){
        ui->SW_data_B->setCurrentIndex(2);
    }
    if(ui->LE_D_0_data_0->text()=="3"){
        ui->SW_data_B->setCurrentIndex(1);
    }
}

void MainWindow::on_LE_B_2_nPlay_cursorPositionChanged(int arg1, int arg2)
{
    data_B2C01_key_view = 1;
    B2C01_input = "";
    B2C01_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_B_2_nPlay_selectionChanged()
{
    if(ui->LE_B_2_nPlay->text()==""){
        on_LE_B_2_nPlay_cursorPositionChanged(0,0);
    }
}

void MainWindow::B2C1_key_view()
{
    ui->LE_B2C1_key->setText("");
    ui->SW_B_2_C->setCurrentIndex(1);
    switch (data_B2C1_key_view) {
    case 1:
        ui->LE_B2C1_key->setText(ui->LE_B_2_Save->text());
        break;
    default:
        break;
    }
}

void MainWindow::B2C1_key_clicked_number(QString number)
{
    B2C1_input += number;
    ui->LE_B2C1_key->setText(B2C1_input);
}

void MainWindow::on_PB_B2C1_key_0_clicked(){ B2C1_key_clicked_number("0"); }
void MainWindow::on_PB_B2C1_key_1_clicked(){ B2C1_key_clicked_number("1"); }
void MainWindow::on_PB_B2C1_key_2_clicked(){ B2C1_key_clicked_number("2"); }
void MainWindow::on_PB_B2C1_key_3_clicked(){ B2C1_key_clicked_number("3"); }
void MainWindow::on_PB_B2C1_key_4_clicked(){ B2C1_key_clicked_number("4"); }
void MainWindow::on_PB_B2C1_key_5_clicked(){ B2C1_key_clicked_number("5"); }
void MainWindow::on_PB_B2C1_key_6_clicked(){ B2C1_key_clicked_number("6"); }
void MainWindow::on_PB_B2C1_key_7_clicked(){ B2C1_key_clicked_number("7"); }
void MainWindow::on_PB_B2C1_key_8_clicked(){ B2C1_key_clicked_number("8"); }
void MainWindow::on_PB_B2C1_key_9_clicked(){ B2C1_key_clicked_number("9"); }
void MainWindow::on_PB_B2C1_key_q_clicked(){ B2C1_key_clicked_number("q"); }
void MainWindow::on_PB_B2C1_key_w_clicked(){ B2C1_key_clicked_number("w"); }
void MainWindow::on_PB_B2C1_key_e_clicked(){ B2C1_key_clicked_number("e"); }
void MainWindow::on_PB_B2C1_key_r_clicked(){ B2C1_key_clicked_number("r"); }
void MainWindow::on_PB_B2C1_key_t_clicked(){ B2C1_key_clicked_number("t"); }
void MainWindow::on_PB_B2C1_key_y_clicked(){ B2C1_key_clicked_number("y"); }
void MainWindow::on_PB_B2C1_key_u_clicked(){ B2C1_key_clicked_number("u"); }
void MainWindow::on_PB_B2C1_key_i_clicked(){ B2C1_key_clicked_number("i"); }
void MainWindow::on_PB_B2C1_key_o_clicked(){ B2C1_key_clicked_number("o"); }
void MainWindow::on_PB_B2C1_key_p_clicked(){ B2C1_key_clicked_number("p"); }
void MainWindow::on_PB_B2C1_key_a_clicked(){ B2C1_key_clicked_number("a"); }
void MainWindow::on_PB_B2C1_key_s_clicked(){ B2C1_key_clicked_number("s"); }
void MainWindow::on_PB_B2C1_key_d_clicked(){ B2C1_key_clicked_number("d"); }
void MainWindow::on_PB_B2C1_key_f_clicked(){ B2C1_key_clicked_number("f"); }
void MainWindow::on_PB_B2C1_key_g_clicked(){ B2C1_key_clicked_number("g"); }
void MainWindow::on_PB_B2C1_key_h_clicked(){ B2C1_key_clicked_number("h"); }
void MainWindow::on_PB_B2C1_key_j_clicked(){ B2C1_key_clicked_number("j"); }
void MainWindow::on_PB_B2C1_key_k_clicked(){ B2C1_key_clicked_number("k"); }
void MainWindow::on_PB_B2C1_key_l_clicked(){ B2C1_key_clicked_number("l"); }
void MainWindow::on_PB_B2C1_key_z_clicked(){ B2C1_key_clicked_number("z"); }
void MainWindow::on_PB_B2C1_key_x_clicked(){ B2C1_key_clicked_number("x"); }
void MainWindow::on_PB_B2C1_key_c_clicked(){ B2C1_key_clicked_number("c"); }
void MainWindow::on_PB_B2C1_key_v_clicked(){ B2C1_key_clicked_number("v"); }
void MainWindow::on_PB_B2C1_key_b_clicked(){ B2C1_key_clicked_number("b"); }
void MainWindow::on_PB_B2C1_key_n_clicked(){ B2C1_key_clicked_number("n"); }
void MainWindow::on_PB_B2C1_key_m_clicked(){ B2C1_key_clicked_number("m"); }
void MainWindow::on_PB_B2C1_key_minus_clicked(){ B2C1_key_clicked_number("-"); }

void MainWindow::on_PB_B2C1_key_back_clicked()
{
    //! 현재입력된 값의 글자수가 1보다 클때
    if(B2C1_input.length() > 1) {
        //! 가장 마지막값 1개를 지움
        B2C1_input.resize(B2C1_input.length()-1);
        ui->LE_B2C1_key->setText(B2C1_input);
    } else {
        B0R1_input = "";
        ui->LE_B2C1_key->setText(B2C1_input);
    }
}

void MainWindow::on_PB_B2C1_key_enter_clicked()
{
    switch (data_B2C1_key_view) {
    case 1:
        ui->LE_B_2_Save->setText(ui->LE_B2C1_key->text());
        break;
    default:
        break;
    }
    data_B2C1_key_view = 0;
    ui->SW_B_2_C->setCurrentIndex(0);
}

void MainWindow::on_PB_B2C1_key_exit_clicked()
{
    data_B2C1_key_view = 0;
    ui->SW_B_2_C->setCurrentIndex(0);
}

void MainWindow::on_LE_B_2_Save_cursorPositionChanged(int arg1, int arg2)
{
    data_B2C1_key_view = 1;
    B2C1_input = "";
    B2C1_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_B_2_Save_selectionChanged()
{
    if(ui->LE_B_2_Save->text()==""){
        on_LE_B_2_Save_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_PB_B2C2_1_clicked()
{
    save_file_no = 1;
    save_type = ui->PB_B2C2_1->text();
    save_MessageBox();
}

void MainWindow::on_PB_B2C2_2_clicked()
{
    save_file_no = 2;
    save_type = ui->PB_B2C2_2->text();
    save_MessageBox();
}

void MainWindow::on_PB_B2C2_3_clicked()
{
    save_file_no = 3;
    save_type = ui->PB_B2C2_3->text();
    save_MessageBox();
}

void MainWindow::on_PB_B2C2_4_clicked()
{
    save_file_no = 4;
    save_type = ui->PB_B2C2_4->text();
    save_MessageBox();
}

void MainWindow::on_PB_B2C2_5_clicked()
{
    save_file_no = 5;
    save_type = ui->PB_B2C2_5->text();
    save_MessageBox();
}

void MainWindow::on_PB_B2C2_6_clicked()
{
    save_file_no = 6;
    save_type = ui->PB_B2C2_6->text();
    save_MessageBox();
}

void MainWindow::on_PB_B2C2_7_clicked()
{
    save_file_no = 7;
    save_type = ui->PB_B2C2_7->text();
    save_MessageBox();
}

void MainWindow::on_PB_B2C2_8_clicked()
{
    save_file_no = 8;
    save_type = ui->PB_B2C2_8->text();
    save_MessageBox();
}

void MainWindow::on_PB_B2C2_9_clicked()
{
    save_file_no = 9;
    save_type = ui->PB_B2C2_9->text();
    save_MessageBox();
}

void MainWindow::on_PB_B2C2_10_clicked()
{
    save_file_no = 10;
    save_type = ui->PB_B2C2_10->text();
    save_MessageBox();
}

void MainWindow::on_PB_B2C2_11_clicked()
{
    save_file_no = 11;
    save_type = ui->PB_B2C2_11->text();
    save_MessageBox();
}

void MainWindow::on_PB_B2C2_12_clicked()
{
    save_file_no = 12;
    save_type = ui->PB_B2C2_12->text();
    save_MessageBox();
}

void MainWindow::on_PB_B2C2_13_clicked()
{
    save_file_no = 13;
    save_type = ui->PB_B2C2_13->text();
    save_MessageBox();
}

void MainWindow::on_PB_B2C2_14_clicked()
{
    save_file_no = 14;
    save_type = ui->PB_B2C2_14->text();
    save_MessageBox();
}

void MainWindow::on_PB_B2C2_15_clicked()
{
    save_file_no = 15;
    save_type = ui->PB_B2C2_15->text();
    save_MessageBox();
}

void MainWindow::on_PB_B2C2_16_clicked()
{
    save_file_no = 16;
    save_type = ui->PB_B2C2_16->text();
    save_MessageBox();
}

void MainWindow::on_PB_B2C2_17_clicked()
{
    save_file_no = 17;
    save_type = ui->PB_B2C2_17->text();
    save_MessageBox();
}

void MainWindow::on_PB_B2C2_18_clicked()
{
    save_file_no = 18;
    save_type = ui->PB_B2C2_18->text();
    save_MessageBox();
}

void MainWindow::on_PB_B2C2_19_clicked()
{
    save_file_no = 19;
    save_type = ui->PB_B2C2_19->text();
    save_MessageBox();
}

void MainWindow::on_PB_B2C2_20_clicked()
{
    save_file_no = 20;
    save_type = ui->PB_B2C2_20->text();
    save_MessageBox();
}

void MainWindow::on_PB_B2C2_21_clicked()
{
    save_file_no = 21;
    save_type = ui->PB_B2C2_21->text();
    save_MessageBox();
}

void MainWindow::on_PB_B2C2_22_clicked()
{
    save_file_no = 22;
    save_type = ui->PB_B2C2_22->text();
    save_MessageBox();
}

void MainWindow::on_PB_B2C2_23_clicked()
{
    save_file_no = 23;
    save_type = ui->PB_B2C2_23->text();
    save_MessageBox();
}

void MainWindow::on_PB_B2C2_24_clicked()
{
    save_file_no = 24;
    save_type = ui->PB_B2C2_24->text();
    save_MessageBox();
}

void MainWindow::on_PB_B2C2_25_clicked()
{
    save_file_no = 25;
    save_type = ui->PB_B2C2_25->text();
    save_MessageBox();
}

void MainWindow::on_PB_B2C2_26_clicked()
{
    save_file_no = 26;
    save_type = ui->PB_B2C2_26->text();
    save_MessageBox();
}

void MainWindow::on_PB_B2C2_27_clicked()
{
    save_file_no = 27;
    save_type = ui->PB_B2C2_27->text();
    save_MessageBox();
}

void MainWindow::on_PB_B2C2_28_clicked()
{
    save_file_no = 28;
    save_type = ui->PB_B2C2_28->text();
    save_MessageBox();
}

void MainWindow::on_PB_B2C2_29_clicked()
{
    save_file_no = 29;
    save_type = ui->PB_B2C2_29->text();
    save_MessageBox();
}

void MainWindow::on_PB_B2C2_30_clicked()
{
    save_file_no = 30;
    save_type = ui->PB_B2C2_30->text();
    save_MessageBox();
}

void MainWindow::on_PB_B2C2_31_clicked()
{
    save_file_no = 31;
    save_type = ui->PB_B2C2_31->text();
    save_MessageBox();
}

void MainWindow::on_PB_B2C2_32_clicked()
{
    save_file_no = 32;
    save_type = ui->PB_B2C2_32->text();
    save_MessageBox();
}

void MainWindow::on_PB_B2C2_33_clicked()
{
    save_file_no = 33;
    save_type = ui->PB_B2C2_33->text();
    save_MessageBox();
}

void MainWindow::on_PB_B2C2_34_clicked()
{
    save_file_no = 34;
    save_type = ui->PB_B2C2_34->text();
    save_MessageBox();
}

void MainWindow::on_PB_B2C2_35_clicked()
{
    save_file_no = 35;
    save_type = ui->PB_B2C2_35->text();
    save_MessageBox();
}

void MainWindow::on_PB_B2C2_36_clicked()
{
    save_file_no = 36;
    save_type = ui->PB_B2C2_36->text();
    save_MessageBox();
}

void MainWindow::on_PB_B2C2_37_clicked()
{
    save_file_no = 37;
    save_type = ui->PB_B2C2_37->text();
    save_MessageBox();
}

void MainWindow::on_PB_B2C2_38_clicked()
{
    save_file_no = 38;
    save_type = ui->PB_B2C2_38->text();
    save_MessageBox();
}

void MainWindow::on_PB_B2C2_39_clicked()
{
    save_file_no = 39;
    save_type = ui->PB_B2C2_39->text();
    save_MessageBox();
}

void MainWindow::on_PB_B2C2_40_clicked()
{
    save_file_no = 40;
    save_type = ui->PB_B2C2_40->text();
    save_MessageBox();
}

void MainWindow::on_PB_B2C2_41_clicked()
{
    save_file_no = 41;
    save_type = ui->PB_B2C2_41->text();
    save_MessageBox();
}

void MainWindow::on_PB_B2C2_42_clicked()
{
    save_file_no = 42;
    save_type = ui->PB_B2C2_42->text();
    save_MessageBox();
}

void MainWindow::on_PB_B2C2_43_clicked()
{
    save_file_no = 43;
    save_type = ui->PB_B2C2_43->text();
    save_MessageBox();
}

void MainWindow::on_PB_B2C2_44_clicked()
{
    save_file_no = 44;
    save_type = ui->PB_B2C2_44->text();
    save_MessageBox();
}

void MainWindow::on_PB_B2C2_45_clicked()
{
    save_file_no = 45;
    save_type = ui->PB_B2C2_45->text();
    save_MessageBox();
}

void MainWindow::on_PB_B2C2_46_clicked()
{
    save_file_no = 46;
    save_type = ui->PB_B2C2_46->text();
    save_MessageBox();
}

void MainWindow::on_PB_B2C2_47_clicked()
{
    save_file_no = 47;
    save_type = ui->PB_B2C2_47->text();
    save_MessageBox();
}

void MainWindow::on_PB_B2C2_48_clicked()
{
    save_file_no = 48;
    save_type = ui->PB_B2C2_48->text();
    save_MessageBox();
}

void MainWindow::on_PB_B2C2_49_clicked()
{
    save_file_no = 49;
    save_type = ui->PB_B2C2_49->text();
    save_MessageBox();
}

void MainWindow::on_PB_B2C2_50_clicked()
{
    save_file_no = 50;
    save_type = ui->PB_B2C2_50->text();
    save_MessageBox();
}

void MainWindow::on_PB_B2C2_back_clicked()
{
    ui->SW_B_2_C->setCurrentIndex(0);
    save_file_no = 0;
}
#define PB_B_2_PART_END }
// ===========================================================
#define PB_C_0_PART_START   {
void MainWindow::on_PB_C_0_0_clicked()
{
    ui->SW_C_0_C->setCurrentIndex(1);
}

void MainWindow::on_PB_C_0_Back_clicked()   // 프로그램선택나가기
{
    ui->SW_A->setCurrentIndex(1);
}

void MainWindow::on_PB_C_0_Load_1_clicked()   // 프로그램파일열기
{
    QString filename;
    if(load_file_no == 0){
        load_type = ui->LE_C_0_Load_1->text();
        filename = QFileDialog::getOpenFileName(this, "JCT 용접 파일 로드", QDir::currentPath()+"/data", "JCT File (*.jct);; All Files (*)");
    }else{
        filename = QApplication::applicationDirPath() + "/data/" + load_type + ".jct";
    }

    qDebug()<<filename;
    if(filename.isEmpty())
        return;
    QFile file(filename);
    ui->LE_C_0_Load_1->setText(filename);
    QString text_list = ui->LE_C_0_Load_1->text();
    text_list.chop(4);
    ui->LE_B_2_Save->setText(text_list.section("/",-1));
    ui->LE_C_7_Play_1->setText(text_list.section("/",-1));
    file_load_no_1 = 1;

    if(!file.open(QIODevice::ReadOnly)){
        QMessageBox::warning(this, "파일 로드 실패", file.errorString());
        ui->LE_C_0_Load_1->setText("");
        file_load_no_1 = 0;
        return;
    }

    QDataStream in(&file);
    welding_data.clear();
    in >> welding_data;
    Update_TW_10();
    command_data.clear();
    in >> command_data;
    Update_TW_1();
    data_load = 1;
}

void MainWindow::on_PB_C_0_Load_2_clicked()
{
    QString filename;
    if(load_file_no == 0){
        load_type = ui->LE_C_0_Load_2->text();
        filename = QFileDialog::getOpenFileName(this, "JCT 용접 파일 로드", QDir::currentPath()+"/data", "JCT File (*.jct);; All Files (*)");
    }else{
        filename = QApplication::applicationDirPath() + "/data/" + load_type + ".jct";
    }

    qDebug()<<filename;
    if(filename.isEmpty())
        return;
    QFile file(filename);
    ui->LE_C_0_Load_2->setText(filename);
    QString text_list = ui->LE_C_0_Load_2->text();
    text_list.chop(4);
    ui->LE_C_7_Play_2->setText(text_list.section("/",-1));
    file_load_no_2 = 1;

    if(!file.open(QIODevice::ReadOnly)){
        QMessageBox::warning(this, "파일 로드 실패", file.errorString());
        ui->LE_C_0_Load_2->setText("");
        file_load_no_2 = 0;
        return;
    }
}

void MainWindow::on_PB_C_0_Load_3_clicked()
{
    QString filename;
    if(load_file_no == 0){
        load_type = ui->LE_C_0_Load_3->text();
        filename = QFileDialog::getOpenFileName(this, "JCT 용접 파일 로드", QDir::currentPath()+"/data", "JCT File (*.jct);; All Files (*)");
    }else{
        filename = QApplication::applicationDirPath() + "/data/" + load_type + ".jct";
    }

    qDebug()<<filename;
    if(filename.isEmpty())
        return;
    QFile file(filename);
    ui->LE_C_0_Load_3->setText(filename);
    QString text_list = ui->LE_C_0_Load_3->text();
    text_list.chop(4);
    ui->LE_C_7_Play_3->setText(text_list.section("/",-1));
    file_load_no_3 = 1;

    if(!file.open(QIODevice::ReadOnly)){
        QMessageBox::warning(this, "파일 로드 실패", file.errorString());
        ui->LE_C_0_Load_3->setText("");
        file_load_no_3 = 0;
        return;
    }
}

void MainWindow::on_PB_C_0_Load_4_clicked()
{
    QString filename;
    if(load_file_no == 0){
        load_type = ui->LE_C_0_Load_4->text();
        filename = QFileDialog::getOpenFileName(this, "JCT 용접 파일 로드", QDir::currentPath()+"/data", "JCT File (*.jct);; All Files (*)");
    }else{
        filename = QApplication::applicationDirPath() + "/data/" + load_type + ".jct";
    }

    qDebug()<<filename;
    if(filename.isEmpty())
        return;
    QFile file(filename);
    ui->LE_C_0_Load_4->setText(filename);
    QString text_list = ui->LE_C_0_Load_4->text();
    text_list.chop(4);
    ui->LE_C_7_Play_4->setText(text_list.section("/",-1));
    file_load_no_4 = 1;

    if(!file.open(QIODevice::ReadOnly)){
        QMessageBox::warning(this, "파일 로드 실패", file.errorString());
        ui->LE_C_0_Load_4->setText("");
        file_load_no_4 = 0;
        return;
    }
}

void MainWindow::on_PB_C_0_Load_5_clicked()
{
    QString filename;
    if(load_file_no == 0){
        load_type = ui->LE_C_0_Load_5->text();
        filename = QFileDialog::getOpenFileName(this, "JCT 용접 파일 로드", QDir::currentPath()+"/data", "JCT File (*.jct);; All Files (*)");
    }else{
        filename = QApplication::applicationDirPath() + "/data/" + load_type + ".jct";
    }

    qDebug()<<filename;
    if(filename.isEmpty())
        return;
    QFile file(filename);
    ui->LE_C_0_Load_5->setText(filename);
    QString text_list = ui->LE_C_0_Load_5->text();
    text_list.chop(4);
    ui->LE_C_7_Play_5->setText(text_list.section("/",-1));
    file_load_no_5 = 1;

    if(!file.open(QIODevice::ReadOnly)){
        QMessageBox::warning(this, "파일 로드 실패", file.errorString());
        ui->LE_C_0_Load_5->setText("");
        file_load_no_5 = 0;
        return;
    }
}

void MainWindow::on_PB_C_0_Load_6_clicked()
{
    QString filename;
    if(load_file_no == 0){
        load_type = ui->LE_C_0_Load_6->text();
        filename = QFileDialog::getOpenFileName(this, "JCT 용접 파일 로드", QDir::currentPath()+"/data", "JCT File (*.jct);; All Files (*)");
    }else{
        filename = QApplication::applicationDirPath() + "/data/" + load_type + ".jct";
    }

    qDebug()<<filename;
    if(filename.isEmpty())
        return;
    QFile file(filename);
    ui->LE_C_0_Load_6->setText(filename);
    QString text_list = ui->LE_C_0_Load_6->text();
    text_list.chop(4);
    ui->LE_C_7_Play_6->setText(text_list.section("/",-1));
    file_load_no_6 = 1;

    if(!file.open(QIODevice::ReadOnly)){
        QMessageBox::warning(this, "파일 로드 실패", file.errorString());
        ui->LE_C_0_Load_6->setText("");
        file_load_no_6 = 0;
        return;
    }
}

void MainWindow::on_PB_C_0_Load_7_clicked()
{
    QString filename;
    if(load_file_no == 0){
        load_type = ui->LE_C_0_Load_7->text();
        filename = QFileDialog::getOpenFileName(this, "JCT 용접 파일 로드", QDir::currentPath()+"/data", "JCT File (*.jct);; All Files (*)");
    }else{
        filename = QApplication::applicationDirPath() + "/data/" + load_type + ".jct";
    }

    qDebug()<<filename;
    if(filename.isEmpty())
        return;
    QFile file(filename);
    ui->LE_C_0_Load_7->setText(filename);
    QString text_list = ui->LE_C_0_Load_7->text();
    text_list.chop(4);
    ui->LE_C_7_Play_7->setText(text_list.section("/",-1));
    file_load_no_7 = 1;

    if(!file.open(QIODevice::ReadOnly)){
        QMessageBox::warning(this, "파일 로드 실패", file.errorString());
        ui->LE_C_0_Load_7->setText("");
        file_load_no_7 = 0;
        return;
    }
}

void MainWindow::on_PB_C_0_Load_8_clicked()
{
    QString filename;
    if(load_file_no == 0){
        load_type = ui->LE_C_0_Load_8->text();
        filename = QFileDialog::getOpenFileName(this, "JCT 용접 파일 로드", QDir::currentPath()+"/data", "JCT File (*.jct);; All Files (*)");
    }else{
        filename = QApplication::applicationDirPath() + "/data/" + load_type + ".jct";
    }

    qDebug()<<filename;
    if(filename.isEmpty())
        return;
    QFile file(filename);
    ui->LE_C_0_Load_8->setText(filename);
    QString text_list = ui->LE_C_0_Load_8->text();
    text_list.chop(4);
    ui->LE_C_7_Play_8->setText(text_list.section("/",-1));
    file_load_no_8 = 1;

    if(!file.open(QIODevice::ReadOnly)){
        QMessageBox::warning(this, "파일 로드 실패", file.errorString());
        ui->LE_C_0_Load_8->setText("");
        file_load_no_8 = 0;
        return;
    }
}

void MainWindow::on_PB_C_0_Load_9_clicked()
{
    QString filename;
    if(load_file_no == 0){
        load_type = ui->LE_C_0_Load_9->text();
        filename = QFileDialog::getOpenFileName(this, "JCT 용접 파일 로드", QDir::currentPath()+"/data", "JCT File (*.jct);; All Files (*)");
    }else{
        filename = QApplication::applicationDirPath() + "/data/" + load_type + ".jct";
    }

    qDebug()<<filename;
    if(filename.isEmpty())
        return;
    QFile file(filename);
    ui->LE_C_0_Load_9->setText(filename);
    QString text_list = ui->LE_C_0_Load_9->text();
    text_list.chop(4);
    ui->LE_C_7_Play_9->setText(text_list.section("/",-1));
    file_load_no_9 = 1;

    if(!file.open(QIODevice::ReadOnly)){
        QMessageBox::warning(this, "파일 로드 실패", file.errorString());
        ui->LE_C_0_Load_9->setText("");
        file_load_no_9 = 0;
        return;
    }
}

void MainWindow::on_PB_C_0_Load_10_clicked()
{
    QString filename;
    if(load_file_no == 0){
        load_type = ui->LE_C_0_Load_10->text();
        filename = QFileDialog::getOpenFileName(this, "JCT 용접 파일 로드", QDir::currentPath()+"/data", "JCT File (*.jct);; All Files (*)");
    }else{
        filename = QApplication::applicationDirPath() + "/data/" + load_type + ".jct";
    }

    qDebug()<<filename;
    if(filename.isEmpty())
        return;
    QFile file(filename);
    ui->LE_C_0_Load_10->setText(filename);
    QString text_list = ui->LE_C_0_Load_10->text();
    text_list.chop(4);
    ui->LE_C_7_Play_10->setText(text_list.section("/",-1));
    file_load_no_10 = 1;

    if(!file.open(QIODevice::ReadOnly)){
        QMessageBox::warning(this, "파일 로드 실패", file.errorString());
        ui->LE_C_0_Load_10->setText("");
        file_load_no_10 = 0;
        return;
    }
}
void MainWindow::on_PB_C_0_Set_clicked()    // 프로그램선택완료
{
    if(ui->LE_C_0_Load_1->text() !="" && data_load == 1 && file_load_no_1 == 1 && file_load_no_2 == 0){
        Update_TW_10_welding_data();
        ui->SW_A->setCurrentIndex(2);
        ui->SW_B->setCurrentIndex(2);
        ui->SW_B_2_C->setCurrentIndex(0);
        if(data_weld_play==0){
            ui->SW_B2C0->setCurrentIndex(0);
            ui->SW_C7C0->setCurrentIndex(0);
        }
        if(data_weld_play==1){
            ui->SW_B2C0->setCurrentIndex(2);
            ui->SW_C7C0->setCurrentIndex(2);
        }
        if(ui->LE_D_0_data_0->text()=="0"){
            ui->SW_data_B->setCurrentIndex(0);
        }
        if(ui->LE_D_0_data_0->text()=="1"){
            ui->SW_data_B->setCurrentIndex(1);
        }
        if(ui->LE_D_0_data_0->text()=="2"){
            ui->SW_data_B->setCurrentIndex(2);
        }
        if(ui->LE_D_0_data_0->text()=="3"){
            ui->SW_data_B->setCurrentIndex(1);
        }
        data_load = 0;
    }
    if(ui->LE_C_0_Load_1->text() !="" && data_load == 1 && file_load_no_1 == 1 && file_load_no_2 == 1){
        ui->SW_A->setCurrentIndex(3);
        ui->SW_C->setCurrentIndex(7);
    }


}

void MainWindow::on_PB_C0C1_1_clicked()
{
    load_file_no = 1;
    load_type = ui->PB_C0C1_1->text();
    load_MessageBox();
}

void MainWindow::on_PB_C0C1_2_clicked()
{
    load_file_no = 2;
    load_type = ui->PB_C0C1_2->text();
    load_MessageBox();
}

void MainWindow::on_PB_C0C1_3_clicked()
{
    load_file_no = 3;
    load_type = ui->PB_C0C1_3->text();
    load_MessageBox();
}

void MainWindow::on_PB_C0C1_4_clicked()
{
    load_file_no = 4;
    load_type = ui->PB_C0C1_4->text();
    load_MessageBox();
}

void MainWindow::on_PB_C0C1_5_clicked()
{
    load_file_no = 5;
    load_type = ui->PB_C0C1_5->text();
    load_MessageBox();
}

void MainWindow::on_PB_C0C1_6_clicked()
{
    load_file_no = 6;
    load_type = ui->PB_C0C1_6->text();
    load_MessageBox();
}

void MainWindow::on_PB_C0C1_7_clicked()
{
    load_file_no = 7;
    load_type = ui->PB_C0C1_7->text();
    load_MessageBox();
}

void MainWindow::on_PB_C0C1_8_clicked()
{
    load_file_no = 8;
    load_type = ui->PB_C0C1_8->text();
    load_MessageBox();
}

void MainWindow::on_PB_C0C1_9_clicked()
{
    load_file_no = 9;
    load_type = ui->PB_C0C1_9->text();
    load_MessageBox();
}

void MainWindow::on_PB_C0C1_10_clicked()
{
    load_file_no = 10;
    load_type = ui->PB_C0C1_10->text();
    load_MessageBox();
}

void MainWindow::on_PB_C0C1_11_clicked()
{
    load_file_no = 11;
    load_type = ui->PB_C0C1_11->text();
    load_MessageBox();
}

void MainWindow::on_PB_C0C1_12_clicked()
{
    load_file_no = 12;
    load_type = ui->PB_C0C1_12->text();
    load_MessageBox();
}

void MainWindow::on_PB_C0C1_13_clicked()
{
    load_file_no = 13;
    load_type = ui->PB_C0C1_13->text();
    load_MessageBox();
}

void MainWindow::on_PB_C0C1_14_clicked()
{
    load_file_no = 14;
    load_type = ui->PB_C0C1_14->text();
    load_MessageBox();
}

void MainWindow::on_PB_C0C1_15_clicked()
{
    load_file_no = 15;
    load_type = ui->PB_C0C1_15->text();
    load_MessageBox();
}

void MainWindow::on_PB_C0C1_16_clicked()
{
    load_file_no = 16;
    load_type = ui->PB_C0C1_16->text();
    load_MessageBox();
}

void MainWindow::on_PB_C0C1_17_clicked()
{
    load_file_no = 17;
    load_type = ui->PB_C0C1_17->text();
    load_MessageBox();
}

void MainWindow::on_PB_C0C1_18_clicked()
{
    load_file_no = 18;
    load_type = ui->PB_C0C1_18->text();
    load_MessageBox();
}

void MainWindow::on_PB_C0C1_19_clicked()
{
    load_file_no = 19;
    load_type = ui->PB_C0C1_19->text();
    load_MessageBox();
}

void MainWindow::on_PB_C0C1_20_clicked()
{
    load_file_no = 20;
    load_type = ui->PB_C0C1_20->text();
    load_MessageBox();
}

void MainWindow::on_PB_C0C1_21_clicked()
{
    load_file_no = 21;
    load_type = ui->PB_C0C1_21->text();
    load_MessageBox();
}

void MainWindow::on_PB_C0C1_22_clicked()
{
    load_file_no = 22;
    load_type = ui->PB_C0C1_22->text();
    load_MessageBox();
}

void MainWindow::on_PB_C0C1_23_clicked()
{
    load_file_no = 23;
    load_type = ui->PB_C0C1_23->text();
    load_MessageBox();
}

void MainWindow::on_PB_C0C1_24_clicked()
{
    load_file_no = 24;
    load_type = ui->PB_C0C1_24->text();
    load_MessageBox();
}

void MainWindow::on_PB_C0C1_25_clicked()
{
    load_file_no = 25;
    load_type = ui->PB_C0C1_25->text();
    load_MessageBox();
}

void MainWindow::on_PB_C0C1_26_clicked()
{
    load_file_no = 26;
    load_type = ui->PB_C0C1_26->text();
    load_MessageBox();
}

void MainWindow::on_PB_C0C1_27_clicked()
{
    load_file_no = 27;
    load_type = ui->PB_C0C1_27->text();
    load_MessageBox();
}

void MainWindow::on_PB_C0C1_28_clicked()
{
    load_file_no = 28;
    load_type = ui->PB_C0C1_28->text();
    load_MessageBox();
}

void MainWindow::on_PB_C0C1_29_clicked()
{
    load_file_no = 29;
    load_type = ui->PB_C0C1_29->text();
    load_MessageBox();
}

void MainWindow::on_PB_C0C1_30_clicked()
{
    load_file_no = 30;
    load_type = ui->PB_C0C1_30->text();
    load_MessageBox();
}

void MainWindow::on_PB_C0C1_31_clicked()
{
    load_file_no = 31;
    load_type = ui->PB_C0C1_31->text();
    load_MessageBox();
}

void MainWindow::on_PB_C0C1_32_clicked()
{
    load_file_no = 32;
    load_type = ui->PB_C0C1_32->text();
    load_MessageBox();
}

void MainWindow::on_PB_C0C1_33_clicked()
{
    load_file_no = 33;
    load_type = ui->PB_C0C1_33->text();
    load_MessageBox();
}

void MainWindow::on_PB_C0C1_34_clicked()
{
    load_file_no = 34;
    load_type = ui->PB_C0C1_34->text();
    load_MessageBox();
}

void MainWindow::on_PB_C0C1_35_clicked()
{
    load_file_no = 35;
    load_type = ui->PB_C0C1_35->text();
    load_MessageBox();
}

void MainWindow::on_PB_C0C1_36_clicked()
{
    load_file_no = 36;
    load_type = ui->PB_C0C1_36->text();
    load_MessageBox();
}

void MainWindow::on_PB_C0C1_37_clicked()
{
    load_file_no = 37;
    load_type = ui->PB_C0C1_37->text();
    load_MessageBox();
}

void MainWindow::on_PB_C0C1_38_clicked()
{
    load_file_no = 38;
    load_type = ui->PB_C0C1_38->text();
    load_MessageBox();
}

void MainWindow::on_PB_C0C1_39_clicked()
{
    load_file_no = 39;
    load_type = ui->PB_C0C1_39->text();
    load_MessageBox();
}

void MainWindow::on_PB_C0C1_40_clicked()
{
    load_file_no = 40;
    load_type = ui->PB_C0C1_40->text();
    load_MessageBox();
}

void MainWindow::on_PB_C0C1_41_clicked()
{
    load_file_no = 41;
    load_type = ui->PB_C0C1_41->text();
    load_MessageBox();
}

void MainWindow::on_PB_C0C1_42_clicked()
{
    load_file_no = 42;
    load_type = ui->PB_C0C1_42->text();
    load_MessageBox();
}

void MainWindow::on_PB_C0C1_43_clicked()
{
    load_file_no = 43;
    load_type = ui->PB_C0C1_43->text();
    load_MessageBox();
}

void MainWindow::on_PB_C0C1_44_clicked()
{
    load_file_no = 44;
    load_type = ui->PB_C0C1_44->text();
    load_MessageBox();
}

void MainWindow::on_PB_C0C1_45_clicked()
{
    load_file_no = 45;
    load_type = ui->PB_C0C1_45->text();
    load_MessageBox();
}

void MainWindow::on_PB_C0C1_46_clicked()
{
    load_file_no = 46;
    load_type = ui->PB_C0C1_46->text();
    load_MessageBox();
}

void MainWindow::on_PB_C0C1_47_clicked()
{
    load_file_no = 47;
    load_type = ui->PB_C0C1_47->text();
    load_MessageBox();
}

void MainWindow::on_PB_C0C1_48_clicked()
{
    load_file_no = 48;
    load_type = ui->PB_C0C1_48->text();
    load_MessageBox();
}

void MainWindow::on_PB_C0C1_49_clicked()
{
    load_file_no = 49;
    load_type = ui->PB_C0C1_49->text();
    load_MessageBox();
}

void MainWindow::on_PB_C0C1_50_clicked()
{
    load_file_no = 50;
    load_type = ui->PB_C0C1_50->text();
    load_MessageBox();
}

void MainWindow::on_PB_C0C1_back_clicked()
{
    ui->SW_C_0_C->setCurrentIndex(0);
    load_file_no = 0;
}
#define PB_C_0_PART_END }
// ===========================================================
#define PB_D_0_PART_START   {
void MainWindow::on_PB_D_0_Back_clicked()   // 나가기
{
    ui->SW_A->setCurrentIndex(1);
}

void MainWindow::on_PB_D_0_Set_clicked()    // 설정완료
{
    setting_Memory_Save_after();
}

void MainWindow::on_PB_D_0_0_clicked()  // 용접조건설정
{
    ui->SW_D_0_C->setCurrentIndex(0);
    ui->SW_D_0_C_0_L->setCurrentIndex(0);
    ui->SW_D_0_C_0_R->setCurrentIndex(0);
}

void MainWindow::on_PB_D_0_1_clicked()  // 기능설정
{
    ui->SW_D_0_C->setCurrentIndex(1);
    ui->SW_D_0_C_1_L->setCurrentIndex(0);
    ui->SW_D_0_C_1_R->setCurrentIndex(0);
}

void MainWindow::on_PB_D_0_2_clicked()  // 용접기설정
{
    ui->SW_D_0_C->setCurrentIndex(2);
}

void MainWindow::on_PB_D_0_Use_Axis7_clicked(){data_axis7 = 1;}  // 부가축 1 사용

void MainWindow::on_PB_D_0_Unuse_Axis7_clicked(){data_axis7 = 0;}    // 부가축 1 미사용

void MainWindow::on_PB_D_0_Use_Axis8_clicked(){data_axis8 = 1;}  // 부가축 2 사용

void MainWindow::on_PB_D_0_Unuse_Axis8_clicked(){data_axis8 = 0;}    // 부가축 2 미사용

void MainWindow::on_PB_D_0_Use_Axis9_clicked(){data_axis9 = 1;}  // 부가축 3 사용

void MainWindow::on_PB_D_0_Unuse_Axis9_clicked(){data_axis9 = 0;}    // 부가축 3 미사용

void MainWindow::on_PB_D_0_Use_Sound_clicked(){data_sound = 1;}  // 사운드 사용

void MainWindow::on_PB_D_0_Unuse_Sound_clicked(){data_sound = 0;}   // 사운드 미사용

void MainWindow::on_PB_D_0_Use_Tig_clicked(){data_tig = 1;}    // TIG 사용

void MainWindow::on_PB_D_0_Unuse_Tig_clicked(){data_tig = 0;}  // TIG 미사용

void MainWindow::on_PB_D_0_Use_Wire_clicked(){data_wire = 1;}   // Wire 사용

void MainWindow::on_PB_D_0_Unuse_Wire_clicked(){data_wire = 0;} // Wire 미사용

void MainWindow::on_PB_D_0_Use_Foot_clicked(){data_foot = 1;} // Foot 사용

void MainWindow::on_PB_D_0_Unuse_Foot_clicked(){data_foot = 0;} // Foot 미사용

void MainWindow::D0C0R1_key_view()
{
    ui->LE_D0C0R1_key->setText("");
    ui->SW_D_0_C_0_R->setCurrentIndex(1);
    switch (data_D0C0R1_key_view) {
    case 1:
        ui->LE_D0C0R1_key->setText(ui->LE_D_0_A1->text());
        break;
    case 2:
        ui->LE_D0C0R1_key->setText(ui->LE_D_0_A2->text());
        break;
    case 3:
        ui->LE_D0C0R1_key->setText(ui->LE_D_0_A3->text());
        break;
    case 4:
        ui->LE_D0C0R1_key->setText(ui->LE_D_0_A4->text());
        break;
    case 5:
        ui->LE_D0C0R1_key->setText(ui->LE_D_0_A5->text());
        break;
    case 6:
        ui->LE_D0C0R1_key->setText(ui->LE_D_0_A6->text());
        break;
    case 7:
        ui->LE_D0C0R1_key->setText(ui->LE_D_0_A7->text());
        break;
    case 8:
        ui->LE_D0C0R1_key->setText(ui->LE_D_0_A8->text());
        break;
    case 9:
        ui->LE_D0C0R1_key->setText(ui->LE_D_0_A9->text());
        break;
    case 10:
        ui->LE_D0C0R1_key->setText(ui->LE_D_0_A10->text());
        break;
    case 11:
        ui->LE_D0C0R1_key->setText(ui->LE_D_0_V1->text());
        break;
    case 12:
        ui->LE_D0C0R1_key->setText(ui->LE_D_0_V2->text());
        break;
    case 13:
        ui->LE_D0C0R1_key->setText(ui->LE_D_0_V3->text());
        break;
    case 14:
        ui->LE_D0C0R1_key->setText(ui->LE_D_0_V4->text());
        break;
    case 15:
        ui->LE_D0C0R1_key->setText(ui->LE_D_0_V5->text());
        break;
    case 16:
        ui->LE_D0C0R1_key->setText(ui->LE_D_0_V6->text());
        break;
    case 17:
        ui->LE_D0C0R1_key->setText(ui->LE_D_0_V7->text());
        break;
    case 18:
        ui->LE_D0C0R1_key->setText(ui->LE_D_0_V8->text());
        break;
    case 19:
        ui->LE_D0C0R1_key->setText(ui->LE_D_0_V9->text());
        break;
    case 20:
        ui->LE_D0C0R1_key->setText(ui->LE_D_0_V10->text());
        break;
    case 21:
        ui->LE_D0C0R1_key->setText(ui->LE_D_0_S1->text());
        break;
    case 22:
        ui->LE_D0C0R1_key->setText(ui->LE_D_0_S2->text());
        break;
    case 23:
        ui->LE_D0C0R1_key->setText(ui->LE_D_0_S3->text());
        break;
    case 24:
        ui->LE_D0C0R1_key->setText(ui->LE_D_0_S4->text());
        break;
    case 25:
        ui->LE_D0C0R1_key->setText(ui->LE_D_0_S5->text());
        break;
    case 26:
        ui->LE_D0C0R1_key->setText(ui->LE_D_0_S6->text());
        break;
    case 27:
        ui->LE_D0C0R1_key->setText(ui->LE_D_0_S7->text());
        break;
    case 28:
        ui->LE_D0C0R1_key->setText(ui->LE_D_0_S8->text());
        break;
    case 29:
        ui->LE_D0C0R1_key->setText(ui->LE_D_0_S9->text());
        break;
    case 30:
        ui->LE_D0C0R1_key->setText(ui->LE_D_0_S10->text());
        break;
    case 31:
        ui->LE_D0C0R1_key->setText(ui->LE_D_0_ONA1->text());
        break;
    case 32:
        ui->LE_D0C0R1_key->setText(ui->LE_D_0_ONA2->text());
        break;
    case 33:
        ui->LE_D0C0R1_key->setText(ui->LE_D_0_ONA3->text());
        break;
    case 34:
        ui->LE_D0C0R1_key->setText(ui->LE_D_0_ONA4->text());
        break;
    case 35:
        ui->LE_D0C0R1_key->setText(ui->LE_D_0_ONA5->text());
        break;
    case 36:
        ui->LE_D0C0R1_key->setText(ui->LE_D_0_ONA6->text());
        break;
    case 37:
        ui->LE_D0C0R1_key->setText(ui->LE_D_0_ONA7->text());
        break;
    case 38:
        ui->LE_D0C0R1_key->setText(ui->LE_D_0_ONA8->text());
        break;
    case 39:
        ui->LE_D0C0R1_key->setText(ui->LE_D_0_ONA9->text());
        break;
    case 40:
        ui->LE_D0C0R1_key->setText(ui->LE_D_0_ONA10->text());
        break;
    default:
        break;
    }
}

void MainWindow::D0C0R1_key_clicked_number(QString number)
{
    D0C0R1_input += number;
    ui->LE_D0C0R1_key->setText(D0C0R1_input);
}

void MainWindow::on_PB_D0C0R1_key_0_clicked(){ D0C0R1_key_clicked_number("0"); }
void MainWindow::on_PB_D0C0R1_key_1_clicked(){ D0C0R1_key_clicked_number("1"); }
void MainWindow::on_PB_D0C0R1_key_2_clicked(){ D0C0R1_key_clicked_number("2"); }
void MainWindow::on_PB_D0C0R1_key_3_clicked(){ D0C0R1_key_clicked_number("3"); }
void MainWindow::on_PB_D0C0R1_key_4_clicked(){ D0C0R1_key_clicked_number("4"); }
void MainWindow::on_PB_D0C0R1_key_5_clicked(){ D0C0R1_key_clicked_number("5"); }
void MainWindow::on_PB_D0C0R1_key_6_clicked(){ D0C0R1_key_clicked_number("6"); }
void MainWindow::on_PB_D0C0R1_key_7_clicked(){ D0C0R1_key_clicked_number("7"); }
void MainWindow::on_PB_D0C0R1_key_8_clicked(){ D0C0R1_key_clicked_number("8"); }
void MainWindow::on_PB_D0C0R1_key_9_clicked(){ D0C0R1_key_clicked_number("9"); }
void MainWindow::on_PB_D0C0R1_key_minus_clicked(){ D0C0R1_key_clicked_number("-"); }

void MainWindow::on_PB_D0C0R1_key_back_clicked()
{
    //! 현재입력된 값의 글자수가 1보다 클때
    if(D0C0R1_input.length() > 1) {
        //! 가장 마지막값 1개를 지움
        D0C0R1_input.resize(D0C0R1_input.length()-1);
        ui->LE_D0C0R1_key->setText(D0C0R1_input);
    } else {
        D0C0R1_input = "";
        ui->LE_D0C0R1_key->setText(D0C0R1_input);
    }
}

void MainWindow::on_PB_D0C0R1_key_dot_clicked()
{
    //! 현재입력값에 '.' 이 포함되어 있다면
    if(D0C0R1_input.contains(".")) {
        D0C0R1_key_clicked_number(".");
        on_PB_D0C0R1_key_back_clicked();
    } else {
        D0C0R1_key_clicked_number(".");
    }
}

void MainWindow::on_PB_D0C0R1_key_enter_clicked()
{
    switch (data_D0C0R1_key_view) {
    case 1:
        ui->LE_D_0_A1->setText(ui->LE_D0C0R1_key->text());
        break;
    case 2:
        ui->LE_D_0_A2->setText(ui->LE_D0C0R1_key->text());
        break;
    case 3:
        ui->LE_D_0_A3->setText(ui->LE_D0C0R1_key->text());
        break;
    case 4:
        ui->LE_D_0_A4->setText(ui->LE_D0C0R1_key->text());
        break;
    case 5:
        ui->LE_D_0_A5->setText(ui->LE_D0C0R1_key->text());
        break;
    case 6:
        ui->LE_D_0_A6->setText(ui->LE_D0C0R1_key->text());
        break;
    case 7:
        ui->LE_D_0_A7->setText(ui->LE_D0C0R1_key->text());
        break;
    case 8:
        ui->LE_D_0_A8->setText(ui->LE_D0C0R1_key->text());
        break;
    case 9:
        ui->LE_D_0_A9->setText(ui->LE_D0C0R1_key->text());
        break;
    case 10:
        ui->LE_D_0_A10->setText(ui->LE_D0C0R1_key->text());
        break;
    case 11:
        if(data_weld_type ==4 && ui->LE_D0C0R1_key->text().toFloat() <= 50)
        {
            ui->LE_D0C0R1_key->setText("50");
        }
        if(data_weld_type ==4 && ui->LE_D0C0R1_key->text().toFloat() >= 150)
        {
            ui->LE_D0C0R1_key->setText("150");
        }
        ui->LE_D_0_V1->setText(ui->LE_D0C0R1_key->text());
        break;
    case 12:
        if(data_weld_type ==4 && ui->LE_D0C0R1_key->text().toFloat() <= 50)
        {
            ui->LE_D0C0R1_key->setText("50");
        }
        if(data_weld_type ==4 && ui->LE_D0C0R1_key->text().toFloat() >= 150)
        {
            ui->LE_D0C0R1_key->setText("150");
        }
        ui->LE_D_0_V2->setText(ui->LE_D0C0R1_key->text());
        break;
    case 13:
        if(data_weld_type ==4 && ui->LE_D0C0R1_key->text().toFloat() <= 50)
        {
            ui->LE_D0C0R1_key->setText("50");
        }
        if(data_weld_type ==4 && ui->LE_D0C0R1_key->text().toFloat() >= 150)
        {
            ui->LE_D0C0R1_key->setText("150");
        }
        ui->LE_D_0_V3->setText(ui->LE_D0C0R1_key->text());
        break;
    case 14:
        if(data_weld_type ==4 && ui->LE_D0C0R1_key->text().toFloat() <= 50)
        {
            ui->LE_D0C0R1_key->setText("50");
        }
        if(data_weld_type ==4 && ui->LE_D0C0R1_key->text().toFloat() >= 150)
        {
            ui->LE_D0C0R1_key->setText("150");
        }
        ui->LE_D_0_V4->setText(ui->LE_D0C0R1_key->text());
        break;
    case 15:
        if(data_weld_type ==4 && ui->LE_D0C0R1_key->text().toFloat() <= 50)
        {
            ui->LE_D0C0R1_key->setText("50");
        }
        if(data_weld_type ==4 && ui->LE_D0C0R1_key->text().toFloat() >= 150)
        {
            ui->LE_D0C0R1_key->setText("150");
        }
        ui->LE_D_0_V5->setText(ui->LE_D0C0R1_key->text());
        break;
    case 16:
        if(data_weld_type ==4 && ui->LE_D0C0R1_key->text().toFloat() <= 50)
        {
            ui->LE_D0C0R1_key->setText("50");
        }
        if(data_weld_type ==4 && ui->LE_D0C0R1_key->text().toFloat() >= 150)
        {
            ui->LE_D0C0R1_key->setText("150");
        }
        ui->LE_D_0_V6->setText(ui->LE_D0C0R1_key->text());
        break;
    case 17:
        if(data_weld_type ==4 && ui->LE_D0C0R1_key->text().toFloat() <= 50)
        {
            ui->LE_D0C0R1_key->setText("50");
        }
        if(data_weld_type ==4 && ui->LE_D0C0R1_key->text().toFloat() >= 150)
        {
            ui->LE_D0C0R1_key->setText("150");
        }
        ui->LE_D_0_V7->setText(ui->LE_D0C0R1_key->text());
        break;
    case 18:
        if(data_weld_type ==4 && ui->LE_D0C0R1_key->text().toFloat() <= 50)
        {
            ui->LE_D0C0R1_key->setText("50");
        }
        if(data_weld_type ==4 && ui->LE_D0C0R1_key->text().toFloat() >= 150)
        {
            ui->LE_D0C0R1_key->setText("150");
        }
        ui->LE_D_0_V8->setText(ui->LE_D0C0R1_key->text());
        break;
    case 19:
        if(data_weld_type ==4 && ui->LE_D0C0R1_key->text().toFloat() <= 50)
        {
            ui->LE_D0C0R1_key->setText("50");
        }
        if(data_weld_type ==4 && ui->LE_D0C0R1_key->text().toFloat() >= 150)
        {
            ui->LE_D0C0R1_key->setText("150");
        }
        ui->LE_D_0_V9->setText(ui->LE_D0C0R1_key->text());
        break;
    case 20:
        if(data_weld_type ==4 && ui->LE_D0C0R1_key->text().toFloat() <= 50)
        {
            ui->LE_D0C0R1_key->setText("50");
        }
        if(data_weld_type ==4 && ui->LE_D0C0R1_key->text().toFloat() >= 150)
        {
            ui->LE_D0C0R1_key->setText("150");
        }
        ui->LE_D_0_V10->setText(ui->LE_D0C0R1_key->text());
        break;
    case 21:
        ui->LE_D_0_S1->setText(ui->LE_D0C0R1_key->text());
        break;
    case 22:
        ui->LE_D_0_S2->setText(ui->LE_D0C0R1_key->text());
        break;
    case 23:
        ui->LE_D_0_S3->setText(ui->LE_D0C0R1_key->text());
        break;
    case 24:
        ui->LE_D_0_S4->setText(ui->LE_D0C0R1_key->text());
        break;
    case 25:
        ui->LE_D_0_S5->setText(ui->LE_D0C0R1_key->text());
        break;
    case 26:
        ui->LE_D_0_S6->setText(ui->LE_D0C0R1_key->text());
        break;
    case 27:
        ui->LE_D_0_S7->setText(ui->LE_D0C0R1_key->text());
        break;
    case 28:
        ui->LE_D_0_S8->setText(ui->LE_D0C0R1_key->text());
        break;
    case 29:
        ui->LE_D_0_S9->setText(ui->LE_D0C0R1_key->text());
        break;
    case 30:
        ui->LE_D_0_S10->setText(ui->LE_D0C0R1_key->text());
        break;
    case 31:
        ui->LE_D_0_ONA1->setText(ui->LE_D0C0R1_key->text());
        break;
    case 32:
        ui->LE_D_0_ONA2->setText(ui->LE_D0C0R1_key->text());
        break;
    case 33:
        ui->LE_D_0_ONA3->setText(ui->LE_D0C0R1_key->text());
        break;
    case 34:
        ui->LE_D_0_ONA4->setText(ui->LE_D0C0R1_key->text());
        break;
    case 35:
        ui->LE_D_0_ONA5->setText(ui->LE_D0C0R1_key->text());
        break;
    case 36:
        ui->LE_D_0_ONA6->setText(ui->LE_D0C0R1_key->text());
        break;
    case 37:
        ui->LE_D_0_ONA7->setText(ui->LE_D0C0R1_key->text());
        break;
    case 38:
        ui->LE_D_0_ONA8->setText(ui->LE_D0C0R1_key->text());
        break;
    case 39:
        ui->LE_D_0_ONA9->setText(ui->LE_D0C0R1_key->text());
        break;
    case 40:
        ui->LE_D_0_ONA10->setText(ui->LE_D0C0R1_key->text());
        break;
    default:
        break;
    }
    data_D0C0R1_key_view = 0;
    ui->SW_D_0_C_0_R->setCurrentIndex(0);
}

void MainWindow::on_PB_D0C0R1_key_exit_clicked()
{
   data_D0C0R1_key_view = 0;
   ui->SW_D_0_C_0_R->setCurrentIndex(0);
}

void MainWindow::on_LE_D_0_A1_cursorPositionChanged(int arg1, int arg2)
{
    data_D0C0R1_key_view = 1;
    D0C0R1_input = "";
    D0C0R1_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_D_0_A2_cursorPositionChanged(int arg1, int arg2)
{
    data_D0C0R1_key_view = 2;
    D0C0R1_input = "";
    D0C0R1_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_D_0_A3_cursorPositionChanged(int arg1, int arg2)
{
    data_D0C0R1_key_view = 3;
    D0C0R1_input = "";
    D0C0R1_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_D_0_A4_cursorPositionChanged(int arg1, int arg2)
{
    data_D0C0R1_key_view = 4;
    D0C0R1_input = "";
    D0C0R1_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_D_0_A5_cursorPositionChanged(int arg1, int arg2)
{
    data_D0C0R1_key_view = 5;
    D0C0R1_input = "";
    D0C0R1_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_D_0_A6_cursorPositionChanged(int arg1, int arg2)
{
    data_D0C0R1_key_view = 6;
    D0C0R1_input = "";
    D0C0R1_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_D_0_A7_cursorPositionChanged(int arg1, int arg2)
{
    data_D0C0R1_key_view = 7;
    D0C0R1_input = "";
    D0C0R1_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_D_0_A8_cursorPositionChanged(int arg1, int arg2)
{
    data_D0C0R1_key_view = 8;
    D0C0R1_input = "";
    D0C0R1_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_D_0_A9_cursorPositionChanged(int arg1, int arg2)
{
    data_D0C0R1_key_view = 9;
    D0C0R1_input = "";
    D0C0R1_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_D_0_A10_cursorPositionChanged(int arg1, int arg2)
{
    data_D0C0R1_key_view = 10;
    D0C0R1_input = "";
    D0C0R1_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_D_0_V1_cursorPositionChanged(int arg1, int arg2)
{
    data_D0C0R1_key_view = 11;
    D0C0R1_input = "";
    D0C0R1_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_D_0_V2_cursorPositionChanged(int arg1, int arg2)
{
    data_D0C0R1_key_view = 12;
    D0C0R1_input = "";
    D0C0R1_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_D_0_V3_cursorPositionChanged(int arg1, int arg2)
{
    data_D0C0R1_key_view = 13;
    D0C0R1_input = "";
    D0C0R1_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_D_0_V4_cursorPositionChanged(int arg1, int arg2)
{
    data_D0C0R1_key_view = 14;
    D0C0R1_input = "";
    D0C0R1_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_D_0_V5_cursorPositionChanged(int arg1, int arg2)
{
    data_D0C0R1_key_view = 15;
    D0C0R1_input = "";
    D0C0R1_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_D_0_V6_cursorPositionChanged(int arg1, int arg2)
{
    data_D0C0R1_key_view = 16;
    D0C0R1_input = "";
    D0C0R1_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_D_0_V7_cursorPositionChanged(int arg1, int arg2)
{
    data_D0C0R1_key_view = 17;
    D0C0R1_input = "";
    D0C0R1_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_D_0_V8_cursorPositionChanged(int arg1, int arg2)
{
    data_D0C0R1_key_view = 18;
    D0C0R1_input = "";
    D0C0R1_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_D_0_V9_cursorPositionChanged(int arg1, int arg2)
{
    data_D0C0R1_key_view = 19;
    D0C0R1_input = "";
    D0C0R1_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_D_0_V10_cursorPositionChanged(int arg1, int arg2)
{
    data_D0C0R1_key_view = 20;
    D0C0R1_input = "";
    D0C0R1_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_D_0_S1_cursorPositionChanged(int arg1, int arg2)
{
    data_D0C0R1_key_view = 21;
    D0C0R1_input = "";
    D0C0R1_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_D_0_S2_cursorPositionChanged(int arg1, int arg2)
{
    data_D0C0R1_key_view = 22;
    D0C0R1_input = "";
    D0C0R1_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_D_0_S3_cursorPositionChanged(int arg1, int arg2)
{
    data_D0C0R1_key_view = 23;
    D0C0R1_input = "";
    D0C0R1_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_D_0_S4_cursorPositionChanged(int arg1, int arg2)
{
    data_D0C0R1_key_view = 24;
    D0C0R1_input = "";
    D0C0R1_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_D_0_S5_cursorPositionChanged(int arg1, int arg2)
{
    data_D0C0R1_key_view = 25;
    D0C0R1_input = "";
    D0C0R1_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_D_0_S6_cursorPositionChanged(int arg1, int arg2)
{
    data_D0C0R1_key_view = 26;
    D0C0R1_input = "";
    D0C0R1_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_D_0_S7_cursorPositionChanged(int arg1, int arg2)
{
    data_D0C0R1_key_view = 27;
    D0C0R1_input = "";
    D0C0R1_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_D_0_S8_cursorPositionChanged(int arg1, int arg2)
{
    data_D0C0R1_key_view = 28;
    D0C0R1_input = "";
    D0C0R1_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_D_0_S9_cursorPositionChanged(int arg1, int arg2)
{
    data_D0C0R1_key_view = 29;
    D0C0R1_input = "";
    D0C0R1_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_D_0_S10_cursorPositionChanged(int arg1, int arg2)
{
    data_D0C0R1_key_view = 30;
    D0C0R1_input = "";
    D0C0R1_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_D_0_ONA1_cursorPositionChanged(int arg1, int arg2)
{
    data_D0C0R1_key_view = 31;
    D0C0R1_input = "";
    D0C0R1_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_D_0_ONA2_cursorPositionChanged(int arg1, int arg2)
{
    data_D0C0R1_key_view = 32;
    D0C0R1_input = "";
    D0C0R1_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_D_0_ONA3_cursorPositionChanged(int arg1, int arg2)
{
    data_D0C0R1_key_view = 33;
    D0C0R1_input = "";
    D0C0R1_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_D_0_ONA4_cursorPositionChanged(int arg1, int arg2)
{
    data_D0C0R1_key_view = 34;
    D0C0R1_input = "";
    D0C0R1_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_D_0_ONA5_cursorPositionChanged(int arg1, int arg2)
{
    data_D0C0R1_key_view = 35;
    D0C0R1_input = "";
    D0C0R1_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_D_0_ONA6_cursorPositionChanged(int arg1, int arg2)
{
    data_D0C0R1_key_view = 36;
    D0C0R1_input = "";
    D0C0R1_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_D_0_ONA7_cursorPositionChanged(int arg1, int arg2)
{
    data_D0C0R1_key_view = 37;
    D0C0R1_input = "";
    D0C0R1_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_D_0_ONA8_cursorPositionChanged(int arg1, int arg2)
{
    data_D0C0R1_key_view = 38;
    D0C0R1_input = "";
    D0C0R1_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_D_0_ONA9_cursorPositionChanged(int arg1, int arg2)
{
    data_D0C0R1_key_view = 39;
    D0C0R1_input = "";
    D0C0R1_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_D_0_ONA10_cursorPositionChanged(int arg1, int arg2)
{
    data_D0C0R1_key_view = 40;
    D0C0R1_input = "";
    D0C0R1_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_D_0_A1_selectionChanged()
{
    if(ui->LE_D_0_A1->text()==""){
        on_LE_D_0_A1_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_LE_D_0_A2_selectionChanged()
{
    if(ui->LE_D_0_A2->text()==""){
        on_LE_D_0_A2_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_LE_D_0_A3_selectionChanged()
{
    if(ui->LE_D_0_A3->text()==""){
        on_LE_D_0_A3_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_LE_D_0_A4_selectionChanged()
{
    if(ui->LE_D_0_A4->text()==""){
        on_LE_D_0_A4_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_LE_D_0_A5_selectionChanged()
{
    if(ui->LE_D_0_A5->text()==""){
        on_LE_D_0_A5_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_LE_D_0_A6_selectionChanged()
{
    if(ui->LE_D_0_A6->text()==""){
        on_LE_D_0_A6_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_LE_D_0_A7_selectionChanged()
{
    if(ui->LE_D_0_A7->text()==""){
        on_LE_D_0_A7_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_LE_D_0_A8_selectionChanged()
{
    if(ui->LE_D_0_A8->text()==""){
        on_LE_D_0_A8_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_LE_D_0_A9_selectionChanged()
{
    if(ui->LE_D_0_A9->text()==""){
        on_LE_D_0_A9_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_LE_D_0_A10_selectionChanged()
{
    if(ui->LE_D_0_A10->text()==""){
        on_LE_D_0_A10_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_LE_D_0_V1_selectionChanged()
{
    if(ui->LE_D_0_V1->text()==""){
        on_LE_D_0_V1_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_LE_D_0_V2_selectionChanged()
{
    if(ui->LE_D_0_V2->text()==""){
        on_LE_D_0_V2_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_LE_D_0_V3_selectionChanged()
{
    if(ui->LE_D_0_V3->text()==""){
        on_LE_D_0_V3_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_LE_D_0_V4_selectionChanged()
{
    if(ui->LE_D_0_V4->text()==""){
        on_LE_D_0_V4_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_LE_D_0_V5_selectionChanged()
{
    if(ui->LE_D_0_V5->text()==""){
        on_LE_D_0_V5_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_LE_D_0_V6_selectionChanged()
{
    if(ui->LE_D_0_V6->text()==""){
        on_LE_D_0_V6_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_LE_D_0_V7_selectionChanged()
{
    if(ui->LE_D_0_V7->text()==""){
        on_LE_D_0_V7_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_LE_D_0_V8_selectionChanged()
{
    if(ui->LE_D_0_V8->text()==""){
        on_LE_D_0_V8_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_LE_D_0_V9_selectionChanged()
{
    if(ui->LE_D_0_V9->text()==""){
        on_LE_D_0_V9_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_LE_D_0_V10_selectionChanged()
{
    if(ui->LE_D_0_V10->text()==""){
        on_LE_D_0_V10_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_LE_D_0_S1_selectionChanged()
{
    if(ui->LE_D_0_S1->text()==""){
        on_LE_D_0_S1_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_LE_D_0_S2_selectionChanged()
{
    if(ui->LE_D_0_S2->text()==""){
        on_LE_D_0_S2_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_LE_D_0_S3_selectionChanged()
{
    if(ui->LE_D_0_S3->text()==""){
        on_LE_D_0_S3_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_LE_D_0_S4_selectionChanged()
{
    if(ui->LE_D_0_S4->text()==""){
        on_LE_D_0_S4_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_LE_D_0_S5_selectionChanged()
{
    if(ui->LE_D_0_S5->text()==""){
        on_LE_D_0_S5_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_LE_D_0_S6_selectionChanged()
{
    if(ui->LE_D_0_S6->text()==""){
        on_LE_D_0_S6_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_LE_D_0_S7_selectionChanged()
{
    if(ui->LE_D_0_S7->text()==""){
        on_LE_D_0_S7_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_LE_D_0_S8_selectionChanged()
{
    if(ui->LE_D_0_S8->text()==""){
        on_LE_D_0_S8_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_LE_D_0_S9_selectionChanged()
{
    if(ui->LE_D_0_S9->text()==""){
        on_LE_D_0_S9_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_LE_D_0_S10_selectionChanged()
{
    if(ui->LE_D_0_S10->text()==""){
        on_LE_D_0_S10_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_LE_D_0_ONA1_selectionChanged()
{
    if(ui->LE_D_0_ONA1->text()==""){
        on_LE_D_0_ONA1_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_LE_D_0_ONA2_selectionChanged()
{
    if(ui->LE_D_0_ONA2->text()==""){
        on_LE_D_0_ONA2_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_LE_D_0_ONA3_selectionChanged()
{
    if(ui->LE_D_0_ONA3->text()==""){
        on_LE_D_0_ONA3_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_LE_D_0_ONA4_selectionChanged()
{
    if(ui->LE_D_0_ONA4->text()==""){
        on_LE_D_0_ONA4_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_LE_D_0_ONA5_selectionChanged()
{
    if(ui->LE_D_0_ONA5->text()==""){
        on_LE_D_0_ONA5_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_LE_D_0_ONA6_selectionChanged()
{
    if(ui->LE_D_0_ONA6->text()==""){
        on_LE_D_0_ONA6_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_LE_D_0_ONA7_selectionChanged()
{
    if(ui->LE_D_0_ONA7->text()==""){
        on_LE_D_0_ONA7_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_LE_D_0_ONA8_selectionChanged()
{
    if(ui->LE_D_0_ONA8->text()==""){
        on_LE_D_0_ONA8_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_LE_D_0_ONA9_selectionChanged()
{
    if(ui->LE_D_0_ONA9->text()==""){
        on_LE_D_0_ONA9_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_LE_D_0_ONA10_selectionChanged()
{
    if(ui->LE_D_0_ONA10->text()==""){
        on_LE_D_0_ONA10_cursorPositionChanged(0,0);
    }
}

void MainWindow::D0C0L1_key_view()
{
    ui->LE_D0C0L1_key->setText("");
    ui->SW_D_0_C_0_L->setCurrentIndex(1);
    switch (data_D0C0L1_key_view) {
    case 1:
        ui->LE_D0C0L1_key->setText(ui->LE_D_0_ONV1->text());
        break;
    case 2:
        ui->LE_D0C0L1_key->setText(ui->LE_D_0_ONV2->text());
        break;
    case 3:
        ui->LE_D0C0L1_key->setText(ui->LE_D_0_ONV3->text());
        break;
    case 4:
        ui->LE_D0C0L1_key->setText(ui->LE_D_0_ONV4->text());
        break;
    case 5:
        ui->LE_D0C0L1_key->setText(ui->LE_D_0_ONV5->text());
        break;
    case 6:
        ui->LE_D0C0L1_key->setText(ui->LE_D_0_ONV6->text());
        break;
    case 7:
        ui->LE_D0C0L1_key->setText(ui->LE_D_0_ONV7->text());
        break;
    case 8:
        ui->LE_D0C0L1_key->setText(ui->LE_D_0_ONV8->text());
        break;
    case 9:
        ui->LE_D0C0L1_key->setText(ui->LE_D_0_ONV9->text());
        break;
    case 10:
        ui->LE_D0C0L1_key->setText(ui->LE_D_0_ONV10->text());
        break;
    case 11:
        ui->LE_D0C0L1_key->setText(ui->LE_D_0_ONT1->text());
        break;
    case 12:
        ui->LE_D0C0L1_key->setText(ui->LE_D_0_ONT2->text());
        break;
    case 13:
        ui->LE_D0C0L1_key->setText(ui->LE_D_0_ONT3->text());
        break;
    case 14:
        ui->LE_D0C0L1_key->setText(ui->LE_D_0_ONT4->text());
        break;
    case 15:
        ui->LE_D0C0L1_key->setText(ui->LE_D_0_ONT5->text());
        break;
    case 16:
        ui->LE_D0C0L1_key->setText(ui->LE_D_0_ONT6->text());
        break;
    case 17:
        ui->LE_D0C0L1_key->setText(ui->LE_D_0_ONT7->text());
        break;
    case 18:
        ui->LE_D0C0L1_key->setText(ui->LE_D_0_ONT8->text());
        break;
    case 19:
        ui->LE_D0C0L1_key->setText(ui->LE_D_0_ONT9->text());
        break;
    case 20:
        ui->LE_D0C0L1_key->setText(ui->LE_D_0_ONT10->text());
        break;
    case 21:
        ui->LE_D0C0L1_key->setText(ui->LE_D_0_OFA1->text());
        break;
    case 22:
        ui->LE_D0C0L1_key->setText(ui->LE_D_0_OFA2->text());
        break;
    case 23:
        ui->LE_D0C0L1_key->setText(ui->LE_D_0_OFA3->text());
        break;
    case 24:
        ui->LE_D0C0L1_key->setText(ui->LE_D_0_OFA4->text());
        break;
    case 25:
        ui->LE_D0C0L1_key->setText(ui->LE_D_0_OFA5->text());
        break;
    case 26:
        ui->LE_D0C0L1_key->setText(ui->LE_D_0_OFA6->text());
        break;
    case 27:
        ui->LE_D0C0L1_key->setText(ui->LE_D_0_OFA7->text());
        break;
    case 28:
        ui->LE_D0C0L1_key->setText(ui->LE_D_0_OFA8->text());
        break;
    case 29:
        ui->LE_D0C0L1_key->setText(ui->LE_D_0_OFA9->text());
        break;
    case 30:
        ui->LE_D0C0L1_key->setText(ui->LE_D_0_OFA10->text());
        break;
    case 31:
        ui->LE_D0C0L1_key->setText(ui->LE_D_0_OFV1->text());
        break;
    case 32:
        ui->LE_D0C0L1_key->setText(ui->LE_D_0_OFV2->text());
        break;
    case 33:
        ui->LE_D0C0L1_key->setText(ui->LE_D_0_OFV3->text());
        break;
    case 34:
        ui->LE_D0C0L1_key->setText(ui->LE_D_0_OFV4->text());
        break;
    case 35:
        ui->LE_D0C0L1_key->setText(ui->LE_D_0_OFV5->text());
        break;
    case 36:
        ui->LE_D0C0L1_key->setText(ui->LE_D_0_OFV6->text());
        break;
    case 37:
        ui->LE_D0C0L1_key->setText(ui->LE_D_0_OFV7->text());
        break;
    case 38:
        ui->LE_D0C0L1_key->setText(ui->LE_D_0_OFV8->text());
        break;
    case 39:
        ui->LE_D0C0L1_key->setText(ui->LE_D_0_OFV9->text());
        break;
    case 40:
        ui->LE_D0C0L1_key->setText(ui->LE_D_0_OFV10->text());
        break;
    case 41:
        ui->LE_D0C0L1_key->setText(ui->LE_D_0_OFT1->text());
        break;
    case 42:
        ui->LE_D0C0L1_key->setText(ui->LE_D_0_OFT2->text());
        break;
    case 43:
        ui->LE_D0C0L1_key->setText(ui->LE_D_0_OFT3->text());
        break;
    case 44:
        ui->LE_D0C0L1_key->setText(ui->LE_D_0_OFT4->text());
        break;
    case 45:
        ui->LE_D0C0L1_key->setText(ui->LE_D_0_OFT5->text());
        break;
    case 46:
        ui->LE_D0C0L1_key->setText(ui->LE_D_0_OFT6->text());
        break;
    case 47:
        ui->LE_D0C0L1_key->setText(ui->LE_D_0_OFT7->text());
        break;
    case 48:
        ui->LE_D0C0L1_key->setText(ui->LE_D_0_OFT8->text());
        break;
    case 49:
        ui->LE_D0C0L1_key->setText(ui->LE_D_0_OFT9->text());
        break;
    case 50:
        ui->LE_D0C0L1_key->setText(ui->LE_D_0_OFT10->text());
        break;
    default:
        break;
    }
}

void MainWindow::D0C0L1_key_clicked_number(QString number)
{
    D0C0L1_input += number;
    ui->LE_D0C0L1_key->setText(D0C0L1_input);
}

void MainWindow::on_PB_D0C0L1_key_0_clicked(){ D0C0L1_key_clicked_number("0"); }
void MainWindow::on_PB_D0C0L1_key_1_clicked(){ D0C0L1_key_clicked_number("1"); }
void MainWindow::on_PB_D0C0L1_key_2_clicked(){ D0C0L1_key_clicked_number("2"); }
void MainWindow::on_PB_D0C0L1_key_3_clicked(){ D0C0L1_key_clicked_number("3"); }
void MainWindow::on_PB_D0C0L1_key_4_clicked(){ D0C0L1_key_clicked_number("4"); }
void MainWindow::on_PB_D0C0L1_key_5_clicked(){ D0C0L1_key_clicked_number("5"); }
void MainWindow::on_PB_D0C0L1_key_6_clicked(){ D0C0L1_key_clicked_number("6"); }
void MainWindow::on_PB_D0C0L1_key_7_clicked(){ D0C0L1_key_clicked_number("7"); }
void MainWindow::on_PB_D0C0L1_key_8_clicked(){ D0C0L1_key_clicked_number("8"); }
void MainWindow::on_PB_D0C0L1_key_9_clicked(){ D0C0L1_key_clicked_number("9"); }
void MainWindow::on_PB_D0C0L1_key_minus_clicked(){ D0C0L1_key_clicked_number("-"); }

void MainWindow::on_PB_D0C0L1_key_back_clicked()
{
    //! 현재입력된 값의 글자수가 1보다 클때
    if(D0C0L1_input.length() > 1) {
        //! 가장 마지막값 1개를 지움
        D0C0L1_input.resize(D0C0L1_input.length()-1);
        ui->LE_D0C0L1_key->setText(D0C0L1_input);
    } else {
        D0C0L1_input = "";
        ui->LE_D0C0L1_key->setText(D0C0L1_input);
    }
}

void MainWindow::on_PB_D0C0L1_key_dot_clicked()
{
    //! 현재입력값에 '.' 이 포함되어 있다면
    if(D0C0L1_input.contains(".")) {
        D0C0L1_key_clicked_number(".");
        on_PB_D0C0L1_key_back_clicked();
    } else {
        D0C0L1_key_clicked_number(".");
    }
}

void MainWindow::on_PB_D0C0L1_key_enter_clicked()
{
    switch (data_D0C0L1_key_view) {
    case 1:
        if(data_weld_type ==4 && ui->LE_D0C0L1_key->text().toFloat() <= 50)
        {
            ui->LE_D0C0L1_key->setText("50");
        }
        if(data_weld_type ==4 && ui->LE_D0C0L1_key->text().toFloat() >= 150)
        {
            ui->LE_D0C0L1_key->setText("150");
        }
        ui->LE_D_0_ONV1->setText(ui->LE_D0C0L1_key->text());
        break;
    case 2:
        if(data_weld_type ==4 && ui->LE_D0C0L1_key->text().toFloat() <= 50)
        {
            ui->LE_D0C0L1_key->setText("50");
        }
        if(data_weld_type ==4 && ui->LE_D0C0L1_key->text().toFloat() >= 150)
        {
            ui->LE_D0C0L1_key->setText("150");
        }
        ui->LE_D_0_ONV2->setText(ui->LE_D0C0L1_key->text());
        break;
    case 3:
        if(data_weld_type ==4 && ui->LE_D0C0L1_key->text().toFloat() <= 50)
        {
            ui->LE_D0C0L1_key->setText("50");
        }
        if(data_weld_type ==4 && ui->LE_D0C0L1_key->text().toFloat() >= 150)
        {
            ui->LE_D0C0L1_key->setText("150");
        }
        ui->LE_D_0_ONV3->setText(ui->LE_D0C0L1_key->text());
        break;
    case 4:
        if(data_weld_type ==4 && ui->LE_D0C0L1_key->text().toFloat() <= 50)
        {
            ui->LE_D0C0L1_key->setText("50");
        }
        if(data_weld_type ==4 && ui->LE_D0C0L1_key->text().toFloat() >= 150)
        {
            ui->LE_D0C0L1_key->setText("150");
        }
        ui->LE_D_0_ONV4->setText(ui->LE_D0C0L1_key->text());
        break;
    case 5:
        if(data_weld_type ==4 && ui->LE_D0C0L1_key->text().toFloat() <= 50)
        {
            ui->LE_D0C0L1_key->setText("50");
        }
        if(data_weld_type ==4 && ui->LE_D0C0L1_key->text().toFloat() >= 150)
        {
            ui->LE_D0C0L1_key->setText("150");
        }
        ui->LE_D_0_ONV5->setText(ui->LE_D0C0L1_key->text());
        break;
    case 6:
        if(data_weld_type ==4 && ui->LE_D0C0L1_key->text().toFloat() <= 50)
        {
            ui->LE_D0C0L1_key->setText("50");
        }
        if(data_weld_type ==4 && ui->LE_D0C0L1_key->text().toFloat() >= 150)
        {
            ui->LE_D0C0L1_key->setText("150");
        }
        ui->LE_D_0_ONV6->setText(ui->LE_D0C0L1_key->text());
        break;
    case 7:
        if(data_weld_type ==4 && ui->LE_D0C0L1_key->text().toFloat() <= 50)
        {
            ui->LE_D0C0L1_key->setText("50");
        }
        if(data_weld_type ==4 && ui->LE_D0C0L1_key->text().toFloat() >= 150)
        {
            ui->LE_D0C0L1_key->setText("150");
        }
        ui->LE_D_0_ONV7->setText(ui->LE_D0C0L1_key->text());
        break;
    case 8:
        if(data_weld_type ==4 && ui->LE_D0C0L1_key->text().toFloat() <= 50)
        {
            ui->LE_D0C0L1_key->setText("50");
        }
        if(data_weld_type ==4 && ui->LE_D0C0L1_key->text().toFloat() >= 150)
        {
            ui->LE_D0C0L1_key->setText("150");
        }
        ui->LE_D_0_ONV8->setText(ui->LE_D0C0L1_key->text());
        break;
    case 9:
        if(data_weld_type ==4 && ui->LE_D0C0L1_key->text().toFloat() <= 50)
        {
            ui->LE_D0C0L1_key->setText("50");
        }
        if(data_weld_type ==4 && ui->LE_D0C0L1_key->text().toFloat() >= 150)
        {
            ui->LE_D0C0L1_key->setText("150");
        }
        ui->LE_D_0_ONV9->setText(ui->LE_D0C0L1_key->text());
        break;
    case 10:
        if(data_weld_type ==4 && ui->LE_D0C0L1_key->text().toFloat() <= 50)
        {
            ui->LE_D0C0L1_key->setText("50");
        }
        if(data_weld_type ==4 && ui->LE_D0C0L1_key->text().toFloat() >= 150)
        {
            ui->LE_D0C0L1_key->setText("150");
        }
        ui->LE_D_0_ONV10->setText(ui->LE_D0C0L1_key->text());
        break;
    case 11:
        ui->LE_D_0_ONT1->setText(ui->LE_D0C0L1_key->text());
        break;
    case 12:
        ui->LE_D_0_ONT2->setText(ui->LE_D0C0L1_key->text());
        break;
    case 13:
        ui->LE_D_0_ONT3->setText(ui->LE_D0C0L1_key->text());
        break;
    case 14:
        ui->LE_D_0_ONT4->setText(ui->LE_D0C0L1_key->text());
        break;
    case 15:
        ui->LE_D_0_ONT5->setText(ui->LE_D0C0L1_key->text());
        break;
    case 16:
        ui->LE_D_0_ONT6->setText(ui->LE_D0C0L1_key->text());
        break;
    case 17:
        ui->LE_D_0_ONT7->setText(ui->LE_D0C0L1_key->text());
        break;
    case 18:
        ui->LE_D_0_ONT8->setText(ui->LE_D0C0L1_key->text());
        break;
    case 19:
        ui->LE_D_0_ONT9->setText(ui->LE_D0C0L1_key->text());
        break;
    case 20:
        ui->LE_D_0_ONT10->setText(ui->LE_D0C0L1_key->text());
        break;
    case 21:
        ui->LE_D_0_OFA1->setText(ui->LE_D0C0L1_key->text());
        break;
    case 22:
        ui->LE_D_0_OFA2->setText(ui->LE_D0C0L1_key->text());
        break;
    case 23:
        ui->LE_D_0_OFA3->setText(ui->LE_D0C0L1_key->text());
        break;
    case 24:
        ui->LE_D_0_OFA4->setText(ui->LE_D0C0L1_key->text());
        break;
    case 25:
        ui->LE_D_0_OFA5->setText(ui->LE_D0C0L1_key->text());
        break;
    case 26:
        ui->LE_D_0_OFA6->setText(ui->LE_D0C0L1_key->text());
        break;
    case 27:
        ui->LE_D_0_OFA7->setText(ui->LE_D0C0L1_key->text());
        break;
    case 28:
        ui->LE_D_0_OFA8->setText(ui->LE_D0C0L1_key->text());
        break;
    case 29:
        ui->LE_D_0_OFA9->setText(ui->LE_D0C0L1_key->text());
        break;
    case 30:
        ui->LE_D_0_OFA10->setText(ui->LE_D0C0L1_key->text());
        break;
    case 31:
        if(data_weld_type ==4 && ui->LE_D0C0L1_key->text().toFloat() <= 50)
        {
            ui->LE_D0C0L1_key->setText("50");
        }
        if(data_weld_type ==4 && ui->LE_D0C0L1_key->text().toFloat() >= 150)
        {
            ui->LE_D0C0L1_key->setText("150");
        }
        ui->LE_D_0_OFV1->setText(ui->LE_D0C0L1_key->text());
        break;
    case 32:
        if(data_weld_type ==4 && ui->LE_D0C0L1_key->text().toFloat() <= 50)
        {
            ui->LE_D0C0L1_key->setText("50");
        }
        if(data_weld_type ==4 && ui->LE_D0C0L1_key->text().toFloat() >= 150)
        {
            ui->LE_D0C0L1_key->setText("150");
        }
        ui->LE_D_0_OFV2->setText(ui->LE_D0C0L1_key->text());
        break;
    case 33:
        if(data_weld_type ==4 && ui->LE_D0C0L1_key->text().toFloat() <= 50)
        {
            ui->LE_D0C0L1_key->setText("50");
        }
        if(data_weld_type ==4 && ui->LE_D0C0L1_key->text().toFloat() >= 150)
        {
            ui->LE_D0C0L1_key->setText("150");
        }
        ui->LE_D_0_OFV3->setText(ui->LE_D0C0L1_key->text());
        break;
    case 34:
        if(data_weld_type ==4 && ui->LE_D0C0L1_key->text().toFloat() <= 50)
        {
            ui->LE_D0C0L1_key->setText("50");
        }
        if(data_weld_type ==4 && ui->LE_D0C0L1_key->text().toFloat() >= 150)
        {
            ui->LE_D0C0L1_key->setText("150");
        }
        ui->LE_D_0_OFV4->setText(ui->LE_D0C0L1_key->text());
        break;
    case 35:
        if(data_weld_type ==4 && ui->LE_D0C0L1_key->text().toFloat() <= 50)
        {
            ui->LE_D0C0L1_key->setText("50");
        }
        if(data_weld_type ==4 && ui->LE_D0C0L1_key->text().toFloat() >= 150)
        {
            ui->LE_D0C0L1_key->setText("150");
        }
        ui->LE_D_0_OFV5->setText(ui->LE_D0C0L1_key->text());
        break;
    case 36:
        if(data_weld_type ==4 && ui->LE_D0C0L1_key->text().toFloat() <= 50)
        {
            ui->LE_D0C0L1_key->setText("50");
        }
        if(data_weld_type ==4 && ui->LE_D0C0L1_key->text().toFloat() >= 150)
        {
            ui->LE_D0C0L1_key->setText("150");
        }
        ui->LE_D_0_OFV6->setText(ui->LE_D0C0L1_key->text());
        break;
    case 37:
        if(data_weld_type ==4 && ui->LE_D0C0L1_key->text().toFloat() <= 50)
        {
            ui->LE_D0C0L1_key->setText("50");
        }
        if(data_weld_type ==4 && ui->LE_D0C0L1_key->text().toFloat() >= 150)
        {
            ui->LE_D0C0L1_key->setText("150");
        }
        ui->LE_D_0_OFV7->setText(ui->LE_D0C0L1_key->text());
        break;
    case 38:
        if(data_weld_type ==4 && ui->LE_D0C0L1_key->text().toFloat() <= 50)
        {
            ui->LE_D0C0L1_key->setText("50");
        }
        if(data_weld_type ==4 && ui->LE_D0C0L1_key->text().toFloat() >= 150)
        {
            ui->LE_D0C0L1_key->setText("150");
        }
        ui->LE_D_0_OFV8->setText(ui->LE_D0C0L1_key->text());
        break;
    case 39:
        if(data_weld_type ==4 && ui->LE_D0C0L1_key->text().toFloat() <= 50)
        {
            ui->LE_D0C0L1_key->setText("50");
        }
        if(data_weld_type ==4 && ui->LE_D0C0L1_key->text().toFloat() >= 150)
        {
            ui->LE_D0C0L1_key->setText("150");
        }
        ui->LE_D_0_OFV9->setText(ui->LE_D0C0L1_key->text());
        break;
    case 40:
        if(data_weld_type ==4 && ui->LE_D0C0L1_key->text().toFloat() <= 50)
        {
            ui->LE_D0C0L1_key->setText("50");
        }
        if(data_weld_type ==4 && ui->LE_D0C0L1_key->text().toFloat() >= 150)
        {
            ui->LE_D0C0L1_key->setText("150");
        }
        ui->LE_D_0_OFV10->setText(ui->LE_D0C0L1_key->text());
        break;
    case 41:
        ui->LE_D_0_OFT1->setText(ui->LE_D0C0L1_key->text());
        break;
    case 42:
        ui->LE_D_0_OFT2->setText(ui->LE_D0C0L1_key->text());
        break;
    case 43:
        ui->LE_D_0_OFT3->setText(ui->LE_D0C0L1_key->text());
        break;
    case 44:
        ui->LE_D_0_OFT4->setText(ui->LE_D0C0L1_key->text());
        break;
    case 45:
        ui->LE_D_0_OFT5->setText(ui->LE_D0C0L1_key->text());
        break;
    case 46:
        ui->LE_D_0_OFT6->setText(ui->LE_D0C0L1_key->text());
        break;
    case 47:
        ui->LE_D_0_OFT7->setText(ui->LE_D0C0L1_key->text());
        break;
    case 48:
        ui->LE_D_0_OFT8->setText(ui->LE_D0C0L1_key->text());
        break;
    case 49:
        ui->LE_D_0_OFT9->setText(ui->LE_D0C0L1_key->text());
        break;
    case 50:
        ui->LE_D_0_OFT10->setText(ui->LE_D0C0L1_key->text());
        break;
    default:
        break;
    }
    data_D0C0L1_key_view = 0;
    ui->SW_D_0_C_0_L->setCurrentIndex(0);
}

void MainWindow::on_PB_D0C0L1_key_exit_clicked()
{
   data_D0C0L1_key_view = 0;
   ui->SW_D_0_C_0_L->setCurrentIndex(0);
}

void MainWindow::on_LE_D_0_ONV1_cursorPositionChanged(int arg1, int arg2)
{
    data_D0C0L1_key_view = 1;
    D0C0L1_input = "";
    D0C0L1_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_D_0_ONV2_cursorPositionChanged(int arg1, int arg2)
{
    data_D0C0L1_key_view = 2;
    D0C0L1_input = "";
    D0C0L1_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_D_0_ONV3_cursorPositionChanged(int arg1, int arg2)
{
    data_D0C0L1_key_view = 3;
    D0C0L1_input = "";
    D0C0L1_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_D_0_ONV4_cursorPositionChanged(int arg1, int arg2)
{
    data_D0C0L1_key_view = 4;
    D0C0L1_input = "";
    D0C0L1_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_D_0_ONV5_cursorPositionChanged(int arg1, int arg2)
{
    data_D0C0L1_key_view = 5;
    D0C0L1_input = "";
    D0C0L1_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_D_0_ONV6_cursorPositionChanged(int arg1, int arg2)
{
    data_D0C0L1_key_view = 6;
    D0C0L1_input = "";
    D0C0L1_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_D_0_ONV7_cursorPositionChanged(int arg1, int arg2)
{
    data_D0C0L1_key_view = 7;
    D0C0L1_input = "";
    D0C0L1_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_D_0_ONV8_cursorPositionChanged(int arg1, int arg2)
{
    data_D0C0L1_key_view = 8;
    D0C0L1_input = "";
    D0C0L1_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_D_0_ONV9_cursorPositionChanged(int arg1, int arg2)
{
    data_D0C0L1_key_view = 9;
    D0C0L1_input = "";
    D0C0L1_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_D_0_ONV10_cursorPositionChanged(int arg1, int arg2)
{
    data_D0C0L1_key_view = 10;
    D0C0L1_input = "";
    D0C0L1_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_D_0_ONT1_cursorPositionChanged(int arg1, int arg2)
{
    data_D0C0L1_key_view = 11;
    D0C0L1_input = "";
    D0C0L1_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_D_0_ONT2_cursorPositionChanged(int arg1, int arg2)
{
    data_D0C0L1_key_view = 12;
    D0C0L1_input = "";
    D0C0L1_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_D_0_ONT3_cursorPositionChanged(int arg1, int arg2)
{
    data_D0C0L1_key_view = 13;
    D0C0L1_input = "";
    D0C0L1_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_D_0_ONT4_cursorPositionChanged(int arg1, int arg2)
{
    data_D0C0L1_key_view = 14;
    D0C0L1_input = "";
    D0C0L1_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_D_0_ONT5_cursorPositionChanged(int arg1, int arg2)
{
    data_D0C0L1_key_view = 15;
    D0C0L1_input = "";
    D0C0L1_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_D_0_ONT6_cursorPositionChanged(int arg1, int arg2)
{
    data_D0C0L1_key_view = 16;
    D0C0L1_input = "";
    D0C0L1_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_D_0_ONT7_cursorPositionChanged(int arg1, int arg2)
{
    data_D0C0L1_key_view = 17;
    D0C0L1_input = "";
    D0C0L1_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_D_0_ONT8_cursorPositionChanged(int arg1, int arg2)
{
    data_D0C0L1_key_view = 18;
    D0C0L1_input = "";
    D0C0L1_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_D_0_ONT9_cursorPositionChanged(int arg1, int arg2)
{
    data_D0C0L1_key_view = 19;
    D0C0L1_input = "";
    D0C0L1_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_D_0_ONT10_cursorPositionChanged(int arg1, int arg2)
{
    data_D0C0L1_key_view = 20;
    D0C0L1_input = "";
    D0C0L1_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_D_0_OFA1_cursorPositionChanged(int arg1, int arg2)
{
    data_D0C0L1_key_view = 21;
    D0C0L1_input = "";
    D0C0L1_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_D_0_OFA2_cursorPositionChanged(int arg1, int arg2)
{
    data_D0C0L1_key_view = 22;
    D0C0L1_input = "";
    D0C0L1_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_D_0_OFA3_cursorPositionChanged(int arg1, int arg2)
{
    data_D0C0L1_key_view = 23;
    D0C0L1_input = "";
    D0C0L1_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_D_0_OFA4_cursorPositionChanged(int arg1, int arg2)
{
    data_D0C0L1_key_view = 24;
    D0C0L1_input = "";
    D0C0L1_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_D_0_OFA5_cursorPositionChanged(int arg1, int arg2)
{
    data_D0C0L1_key_view = 25;
    D0C0L1_input = "";
    D0C0L1_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_D_0_OFA6_cursorPositionChanged(int arg1, int arg2)
{
    data_D0C0L1_key_view = 26;
    D0C0L1_input = "";
    D0C0L1_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_D_0_OFA7_cursorPositionChanged(int arg1, int arg2)
{
    data_D0C0L1_key_view = 27;
    D0C0L1_input = "";
    D0C0L1_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_D_0_OFA8_cursorPositionChanged(int arg1, int arg2)
{
    data_D0C0L1_key_view = 28;
    D0C0L1_input = "";
    D0C0L1_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_D_0_OFA9_cursorPositionChanged(int arg1, int arg2)
{
    data_D0C0L1_key_view = 29;
    D0C0L1_input = "";
    D0C0L1_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_D_0_OFA10_cursorPositionChanged(int arg1, int arg2)
{
    data_D0C0L1_key_view = 30;
    D0C0L1_input = "";
    D0C0L1_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_D_0_OFV1_cursorPositionChanged(int arg1, int arg2)
{
    data_D0C0L1_key_view = 31;
    D0C0L1_input = "";
    D0C0L1_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_D_0_OFV2_cursorPositionChanged(int arg1, int arg2)
{
    data_D0C0L1_key_view = 32;
    D0C0L1_input = "";
    D0C0L1_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_D_0_OFV3_cursorPositionChanged(int arg1, int arg2)
{
    data_D0C0L1_key_view = 33;
    D0C0L1_input = "";
    D0C0L1_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_D_0_OFV4_cursorPositionChanged(int arg1, int arg2)
{
    data_D0C0L1_key_view = 34;
    D0C0L1_input = "";
    D0C0L1_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_D_0_OFV5_cursorPositionChanged(int arg1, int arg2)
{
    data_D0C0L1_key_view = 35;
    D0C0L1_input = "";
    D0C0L1_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_D_0_OFV6_cursorPositionChanged(int arg1, int arg2)
{
    data_D0C0L1_key_view = 36;
    D0C0L1_input = "";
    D0C0L1_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_D_0_OFV7_cursorPositionChanged(int arg1, int arg2)
{
    data_D0C0L1_key_view = 37;
    D0C0L1_input = "";
    D0C0L1_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_D_0_OFV8_cursorPositionChanged(int arg1, int arg2)
{
    data_D0C0L1_key_view = 38;
    D0C0L1_input = "";
    D0C0L1_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_D_0_OFV9_cursorPositionChanged(int arg1, int arg2)
{
    data_D0C0L1_key_view = 39;
    D0C0L1_input = "";
    D0C0L1_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_D_0_OFV10_cursorPositionChanged(int arg1, int arg2)
{
    data_D0C0L1_key_view = 40;
    D0C0L1_input = "";
    D0C0L1_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_D_0_OFT1_cursorPositionChanged(int arg1, int arg2)
{
    data_D0C0L1_key_view = 41;
    D0C0L1_input = "";
    D0C0L1_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_D_0_OFT2_cursorPositionChanged(int arg1, int arg2)
{
    data_D0C0L1_key_view = 42;
    D0C0L1_input = "";
    D0C0L1_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_D_0_OFT3_cursorPositionChanged(int arg1, int arg2)
{
    data_D0C0L1_key_view = 43;
    D0C0L1_input = "";
    D0C0L1_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_D_0_OFT4_cursorPositionChanged(int arg1, int arg2)
{
    data_D0C0L1_key_view = 44;
    D0C0L1_input = "";
    D0C0L1_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_D_0_OFT5_cursorPositionChanged(int arg1, int arg2)
{
    data_D0C0L1_key_view = 45;
    D0C0L1_input = "";
    D0C0L1_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_D_0_OFT6_cursorPositionChanged(int arg1, int arg2)
{
    data_D0C0L1_key_view = 46;
    D0C0L1_input = "";
    D0C0L1_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_D_0_OFT7_cursorPositionChanged(int arg1, int arg2)
{
    data_D0C0L1_key_view = 47;
    D0C0L1_input = "";
    D0C0L1_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_D_0_OFT8_cursorPositionChanged(int arg1, int arg2)
{
    data_D0C0L1_key_view = 48;
    D0C0L1_input = "";
    D0C0L1_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_D_0_OFT9_cursorPositionChanged(int arg1, int arg2)
{
    data_D0C0L1_key_view = 49;
    D0C0L1_input = "";
    D0C0L1_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_D_0_OFT10_cursorPositionChanged(int arg1, int arg2)
{
    data_D0C0L1_key_view = 50;
    D0C0L1_input = "";
    D0C0L1_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_D_0_ONV1_selectionChanged()
{
    if(ui->LE_D_0_ONV1->text()==""){
        on_LE_D_0_ONV1_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_LE_D_0_ONV2_selectionChanged()
{
    if(ui->LE_D_0_ONV2->text()==""){
        on_LE_D_0_ONV2_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_LE_D_0_ONV3_selectionChanged()
{
    if(ui->LE_D_0_ONV3->text()==""){
        on_LE_D_0_ONV3_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_LE_D_0_ONV4_selectionChanged()
{
    if(ui->LE_D_0_ONV4->text()==""){
        on_LE_D_0_ONV4_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_LE_D_0_ONV5_selectionChanged()
{
    if(ui->LE_D_0_ONV5->text()==""){
        on_LE_D_0_ONV5_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_LE_D_0_ONV6_selectionChanged()
{
    if(ui->LE_D_0_ONV6->text()==""){
        on_LE_D_0_ONV6_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_LE_D_0_ONV7_selectionChanged()
{
    if(ui->LE_D_0_ONV7->text()==""){
        on_LE_D_0_ONV7_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_LE_D_0_ONV8_selectionChanged()
{
    if(ui->LE_D_0_ONV8->text()==""){
        on_LE_D_0_ONV8_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_LE_D_0_ONV9_selectionChanged()
{
    if(ui->LE_D_0_ONV9->text()==""){
        on_LE_D_0_ONV9_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_LE_D_0_ONV10_selectionChanged()
{
    if(ui->LE_D_0_ONV10->text()==""){
        on_LE_D_0_ONV10_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_LE_D_0_ONT1_selectionChanged()
{
    if(ui->LE_D_0_ONT1->text()==""){
        on_LE_D_0_ONT1_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_LE_D_0_ONT2_selectionChanged()
{
    if(ui->LE_D_0_ONT2->text()==""){
        on_LE_D_0_ONT2_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_LE_D_0_ONT3_selectionChanged()
{
    if(ui->LE_D_0_ONT3->text()==""){
        on_LE_D_0_ONT3_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_LE_D_0_ONT4_selectionChanged()
{
    if(ui->LE_D_0_ONT4->text()==""){
        on_LE_D_0_ONT4_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_LE_D_0_ONT5_selectionChanged()
{
    if(ui->LE_D_0_ONT5->text()==""){
        on_LE_D_0_ONT5_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_LE_D_0_ONT6_selectionChanged()
{
    if(ui->LE_D_0_ONT6->text()==""){
        on_LE_D_0_ONT6_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_LE_D_0_ONT7_selectionChanged()
{
    if(ui->LE_D_0_ONT7->text()==""){
        on_LE_D_0_ONT7_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_LE_D_0_ONT8_selectionChanged()
{
    if(ui->LE_D_0_ONT8->text()==""){
        on_LE_D_0_ONT8_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_LE_D_0_ONT9_selectionChanged()
{
    if(ui->LE_D_0_ONT9->text()==""){
        on_LE_D_0_ONT9_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_LE_D_0_ONT10_selectionChanged()
{
    if(ui->LE_D_0_ONT10->text()==""){
        on_LE_D_0_ONT10_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_LE_D_0_OFA1_selectionChanged()
{
    if(ui->LE_D_0_OFA1->text()==""){
        on_LE_D_0_OFA1_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_LE_D_0_OFA2_selectionChanged()
{
    if(ui->LE_D_0_OFA2->text()==""){
        on_LE_D_0_OFA2_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_LE_D_0_OFA3_selectionChanged()
{
    if(ui->LE_D_0_OFA3->text()==""){
        on_LE_D_0_OFA3_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_LE_D_0_OFA4_selectionChanged()
{
    if(ui->LE_D_0_OFA4->text()==""){
        on_LE_D_0_OFA4_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_LE_D_0_OFA5_selectionChanged()
{
    if(ui->LE_D_0_OFA5->text()==""){
        on_LE_D_0_OFA5_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_LE_D_0_OFA6_selectionChanged()
{
    if(ui->LE_D_0_OFA6->text()==""){
        on_LE_D_0_OFA6_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_LE_D_0_OFA7_selectionChanged()
{
    if(ui->LE_D_0_OFA7->text()==""){
        on_LE_D_0_OFA7_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_LE_D_0_OFA8_selectionChanged()
{
    if(ui->LE_D_0_OFA8->text()==""){
        on_LE_D_0_OFA8_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_LE_D_0_OFA9_selectionChanged()
{
    if(ui->LE_D_0_OFA9->text()==""){
        on_LE_D_0_OFA9_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_LE_D_0_OFA10_selectionChanged()
{
    if(ui->LE_D_0_OFA10->text()==""){
        on_LE_D_0_OFA10_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_LE_D_0_OFV1_selectionChanged()
{
    if(ui->LE_D_0_OFV1->text()==""){
        on_LE_D_0_OFV1_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_LE_D_0_OFV2_selectionChanged()
{
    if(ui->LE_D_0_OFV2->text()==""){
        on_LE_D_0_OFV2_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_LE_D_0_OFV3_selectionChanged()
{
    if(ui->LE_D_0_OFV3->text()==""){
        on_LE_D_0_OFV3_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_LE_D_0_OFV4_selectionChanged()
{
    if(ui->LE_D_0_OFV4->text()==""){
        on_LE_D_0_OFV4_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_LE_D_0_OFV5_selectionChanged()
{
    if(ui->LE_D_0_OFV5->text()==""){
        on_LE_D_0_OFV5_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_LE_D_0_OFV6_selectionChanged()
{
    if(ui->LE_D_0_OFV6->text()==""){
        on_LE_D_0_OFV6_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_LE_D_0_OFV7_selectionChanged()
{
    if(ui->LE_D_0_OFV7->text()==""){
        on_LE_D_0_OFV7_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_LE_D_0_OFV8_selectionChanged()
{
    if(ui->LE_D_0_OFV8->text()==""){
        on_LE_D_0_OFV8_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_LE_D_0_OFV9_selectionChanged()
{
    if(ui->LE_D_0_OFV9->text()==""){
        on_LE_D_0_OFV9_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_LE_D_0_OFV10_selectionChanged()
{
    if(ui->LE_D_0_OFV10->text()==""){
        on_LE_D_0_OFV10_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_LE_D_0_OFT1_selectionChanged()
{
    if(ui->LE_D_0_OFT1->text()==""){
        on_LE_D_0_OFT1_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_LE_D_0_OFT2_selectionChanged()
{
    if(ui->LE_D_0_OFT2->text()==""){
        on_LE_D_0_OFT2_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_LE_D_0_OFT3_selectionChanged()
{
    if(ui->LE_D_0_OFT3->text()==""){
        on_LE_D_0_OFT3_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_LE_D_0_OFT4_selectionChanged()
{
    if(ui->LE_D_0_OFT4->text()==""){
        on_LE_D_0_OFT4_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_LE_D_0_OFT5_selectionChanged()
{
    if(ui->LE_D_0_OFT5->text()==""){
        on_LE_D_0_OFT5_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_LE_D_0_OFT6_selectionChanged()
{
    if(ui->LE_D_0_OFT6->text()==""){
        on_LE_D_0_OFT6_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_LE_D_0_OFT7_selectionChanged()
{
    if(ui->LE_D_0_OFT7->text()==""){
        on_LE_D_0_OFT7_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_LE_D_0_OFT8_selectionChanged()
{
    if(ui->LE_D_0_OFT8->text()==""){
        on_LE_D_0_OFT8_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_LE_D_0_OFT9_selectionChanged()
{
    if(ui->LE_D_0_OFT9->text()==""){
        on_LE_D_0_OFT9_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_LE_D_0_OFT10_selectionChanged()
{
    if(ui->LE_D_0_OFT10->text()==""){
        on_LE_D_0_OFT10_cursorPositionChanged(0,0);
    }
}

// ===========================================================
void MainWindow::D0C1R1_key_view()
{
    ui->LE_D0C1R1_key->setText("");
    ui->SW_D_0_C_1_R->setCurrentIndex(1);
    switch (data_D0C1R1_key_view) {
    case 1:
        ui->LE_D0C1R1_key->setText(ui->LE_D_0_Movj_Vel->text());
        break;
    case 2:
        ui->LE_D0C1R1_key->setText(ui->LE_D_0_Movj_Acc->text());
        break;
    case 3:
        ui->LE_D0C1R1_key->setText(ui->LE_D_0_Movl_Vel->text());
        break;
    case 4:
        ui->LE_D0C1R1_key->setText(ui->LE_D_0_Movl_Acc->text());
        break;
    case 5:
        ui->LE_D0C1R1_key->setText(ui->LE_D_0_Arc_retry_vel->text());
        break;
    case 6:
        ui->LE_D0C1R1_key->setText(ui->LE_D_0_Arc_retry_time->text());
        break;
    case 7:
        ui->LE_D0C1R1_key->setText(ui->LE_D_0_Axis_0_Vel->text());
        break;
    case 8:
        ui->LE_D0C1R1_key->setText(ui->LE_D_0_Axis_0_Acc->text());
        break;
    case 9:
        ui->LE_D0C1R1_key->setText(ui->LE_D_0_Axis_1_Vel->text());
        break;
    case 10:
        ui->LE_D0C1R1_key->setText(ui->LE_D_0_Axis_1_Acc->text());
        break;
    case 11:
        ui->LE_D0C1R1_key->setText(ui->LE_D_0_Axis_2_Vel->text());
        break;
    case 12:
        ui->LE_D0C1R1_key->setText(ui->LE_D_0_Axis_2_Acc->text());
        break;
    case 13:
        ui->LE_D0C1R1_key->setText(ui->LE_D_0_data_0->text());
        break;
    case 14:
        ui->LE_D0C1R1_key->setText(ui->LE_D_0_data_1->text());
        break;
    case 15:
        ui->LE_D0C1R1_key->setText(ui->LE_D_0_data_2->text());
        break;
    case 16:
        ui->LE_D0C1R1_key->setText(ui->LE_D_0_data_3->text());
        break;
    case 17:
        ui->LE_D0C1R1_key->setText(ui->LE_D_0_data_4->text());
        break;
    case 18:
        ui->LE_D0C1R1_key->setText(ui->LE_D_0_data_5->text());
        break;
    default:
        break;
    }
}

void MainWindow::D0C1R1_key_clicked_number(QString number)
{
    D0C1R1_input += number;
    ui->LE_D0C1R1_key->setText(D0C1R1_input);
}

void MainWindow::on_PB_D0C1R1_key_0_clicked(){ D0C1R1_key_clicked_number("0"); }
void MainWindow::on_PB_D0C1R1_key_1_clicked(){ D0C1R1_key_clicked_number("1"); }
void MainWindow::on_PB_D0C1R1_key_2_clicked(){ D0C1R1_key_clicked_number("2"); }
void MainWindow::on_PB_D0C1R1_key_3_clicked(){ D0C1R1_key_clicked_number("3"); }
void MainWindow::on_PB_D0C1R1_key_4_clicked(){ D0C1R1_key_clicked_number("4"); }
void MainWindow::on_PB_D0C1R1_key_5_clicked(){ D0C1R1_key_clicked_number("5"); }
void MainWindow::on_PB_D0C1R1_key_6_clicked(){ D0C1R1_key_clicked_number("6"); }
void MainWindow::on_PB_D0C1R1_key_7_clicked(){ D0C1R1_key_clicked_number("7"); }
void MainWindow::on_PB_D0C1R1_key_8_clicked(){ D0C1R1_key_clicked_number("8"); }
void MainWindow::on_PB_D0C1R1_key_9_clicked(){ D0C1R1_key_clicked_number("9"); }
void MainWindow::on_PB_D0C1R1_key_minus_clicked(){ D0C1R1_key_clicked_number("-"); }

void MainWindow::on_PB_D0C1R1_key_back_clicked()
{
    //! 현재입력된 값의 글자수가 1보다 클때
    if(D0C1R1_input.length() > 1) {
        //! 가장 마지막값 1개를 지움
        D0C1R1_input.resize(D0C1R1_input.length()-1);
        ui->LE_D0C1R1_key->setText(D0C1R1_input);
    } else {
        D0C1R1_input = "";
        ui->LE_D0C1R1_key->setText(D0C1R1_input);
    }
}

void MainWindow::on_PB_D0C1R1_key_dot_clicked()
{
    //! 현재입력값에 '.' 이 포함되어 있다면
    if(D0C1R1_input.contains(".")) {
        D0C1R1_key_clicked_number(".");
        on_PB_D0C1R1_key_back_clicked();
    } else {
        D0C1R1_key_clicked_number(".");
    }
}

void MainWindow::on_PB_D0C1R1_key_enter_clicked()
{
    switch (data_D0C1R1_key_view) {
    case 1:
        ui->LE_D_0_Movj_Vel->setText(ui->LE_D0C1R1_key->text());
        break;
    case 2:
        ui->LE_D_0_Movj_Acc->setText(ui->LE_D0C1R1_key->text());
        break;
    case 3:
        ui->LE_D_0_Movl_Vel->setText(ui->LE_D0C1R1_key->text());
        break;
    case 4:
        ui->LE_D_0_Movl_Acc->setText(ui->LE_D0C1R1_key->text());
        break;
    case 5:
        ui->LE_D_0_Arc_retry_vel->setText(ui->LE_D0C1R1_key->text());
        break;
    case 6:
        ui->LE_D_0_Arc_retry_time->setText(ui->LE_D0C1R1_key->text());
        break;
    case 7:
        ui->LE_D_0_Axis_0_Vel->setText(ui->LE_D0C1R1_key->text());
        break;
    case 8:
        ui->LE_D_0_Axis_0_Acc->setText(ui->LE_D0C1R1_key->text());
        break;
    case 9:
        ui->LE_D_0_Axis_1_Vel->setText(ui->LE_D0C1R1_key->text());
        break;
    case 10:
        ui->LE_D_0_Axis_1_Acc->setText(ui->LE_D0C1R1_key->text());
        break;
    case 11:
        ui->LE_D_0_Axis_2_Vel->setText(ui->LE_D0C1R1_key->text());
        break;
    case 12:
        ui->LE_D_0_Axis_2_Acc->setText(ui->LE_D0C1R1_key->text());
        break;
    case 13:
        ui->LE_D_0_data_0->setText(ui->LE_D0C1R1_key->text());
        break;
    case 14:
        ui->LE_D_0_data_1->setText(ui->LE_D0C1R1_key->text());
        break;
    case 15:
        ui->LE_D_0_data_2->setText(ui->LE_D0C1R1_key->text());
        break;
    case 16:
        ui->LE_D_0_data_3->setText(ui->LE_D0C1R1_key->text());
        break;
    case 17:
        ui->LE_D_0_data_4->setText(ui->LE_D0C1R1_key->text());
        break;
    case 18:
        ui->LE_D_0_data_5->setText(ui->LE_D0C1R1_key->text());
        break;
    default:
        break;
    }
    data_D0C1R1_key_view = 0;
    ui->SW_D_0_C_1_R->setCurrentIndex(0);
}

void MainWindow::on_PB_D0C1R1_key_exit_clicked()
{
   data_D0C1R1_key_view = 0;
   ui->SW_D_0_C_1_R->setCurrentIndex(0);
}

void MainWindow::on_LE_D_0_Movj_Vel_cursorPositionChanged(int arg1, int arg2)
{
    data_D0C1R1_key_view = 1;
    D0C1R1_input = "";
    D0C1R1_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_D_0_Movj_Acc_cursorPositionChanged(int arg1, int arg2)
{
    data_D0C1R1_key_view = 2;
    D0C1R1_input = "";
    D0C1R1_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_D_0_Movl_Vel_cursorPositionChanged(int arg1, int arg2)
{
    data_D0C1R1_key_view = 3;
    D0C1R1_input = "";
    D0C1R1_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_D_0_Movl_Acc_cursorPositionChanged(int arg1, int arg2)
{
    data_D0C1R1_key_view = 4;
    D0C1R1_input = "";
    D0C1R1_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_D_0_Arc_retry_vel_cursorPositionChanged(int arg1, int arg2)
{
    data_D0C1R1_key_view = 5;
    D0C1R1_input = "";
    D0C1R1_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_D_0_Arc_retry_time_cursorPositionChanged(int arg1, int arg2)
{
    data_D0C1R1_key_view = 6;
    D0C1R1_input = "";
    D0C1R1_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_D_0_Axis_0_Vel_cursorPositionChanged(int arg1, int arg2)
{
    data_D0C1R1_key_view = 7;
    D0C1R1_input = "";
    D0C1R1_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_D_0_Axis_0_Acc_cursorPositionChanged(int arg1, int arg2)
{
    data_D0C1R1_key_view = 8;
    D0C1R1_input = "";
    D0C1R1_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_D_0_Axis_1_Vel_cursorPositionChanged(int arg1, int arg2)
{
    data_D0C1R1_key_view = 9;
    D0C1R1_input = "";
    D0C1R1_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_D_0_Axis_1_Acc_cursorPositionChanged(int arg1, int arg2)
{
    data_D0C1R1_key_view = 10;
    D0C1R1_input = "";
    D0C1R1_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_D_0_Axis_2_Vel_cursorPositionChanged(int arg1, int arg2)
{
    data_D0C1R1_key_view = 11;
    D0C1R1_input = "";
    D0C1R1_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_D_0_Axis_2_Acc_cursorPositionChanged(int arg1, int arg2)
{
    data_D0C1R1_key_view = 12;
    D0C1R1_input = "";
    D0C1R1_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_D_0_data_0_cursorPositionChanged(int arg1, int arg2)
{
    data_D0C1R1_key_view = 13;
    D0C1R1_input = "";
    D0C1R1_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_D_0_data_1_cursorPositionChanged(int arg1, int arg2)
{
    data_D0C1R1_key_view = 14;
    D0C1R1_input = "";
    D0C1R1_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_D_0_data_2_cursorPositionChanged(int arg1, int arg2)
{
    data_D0C1R1_key_view = 15;
    D0C1R1_input = "";
    D0C1R1_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_D_0_data_3_cursorPositionChanged(int arg1, int arg2)
{
    data_D0C1R1_key_view = 16;
    D0C1R1_input = "";
    D0C1R1_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_D_0_data_4_cursorPositionChanged(int arg1, int arg2)
{
    data_D0C1R1_key_view = 17;
    D0C1R1_input = "";
    D0C1R1_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_D_0_data_5_cursorPositionChanged(int arg1, int arg2)
{
    data_D0C1R1_key_view = 18;
    D0C1R1_input = "";
    D0C1R1_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_D_0_Movj_Vel_selectionChanged()
{
    if(ui->LE_D_0_Movj_Vel->text()==""){
        on_LE_D_0_Movj_Vel_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_LE_D_0_Movj_Acc_selectionChanged()
{
    if(ui->LE_D_0_Movj_Acc->text()==""){
        on_LE_D_0_Movj_Acc_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_LE_D_0_Movl_Vel_selectionChanged()
{
    if(ui->LE_D_0_Movl_Vel->text()==""){
        on_LE_D_0_Movl_Vel_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_LE_D_0_Movl_Acc_selectionChanged()
{
    if(ui->LE_D_0_Movl_Acc->text()==""){
        on_LE_D_0_Movl_Acc_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_LE_D_0_Arc_retry_vel_selectionChanged()
{
    if(ui->LE_D_0_Arc_retry_vel->text()==""){
        on_LE_D_0_Arc_retry_vel_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_LE_D_0_Arc_retry_time_selectionChanged()
{
    if(ui->LE_D_0_Arc_retry_time->text()==""){
        on_LE_D_0_Arc_retry_time_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_LE_D_0_Axis_0_Vel_selectionChanged()
{
    if(ui->LE_D_0_Axis_0_Vel->text()==""){
        on_LE_D_0_Axis_0_Vel_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_LE_D_0_Axis_0_Acc_selectionChanged()
{
    if(ui->LE_D_0_Axis_0_Acc->text()==""){
        on_LE_D_0_Axis_0_Acc_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_LE_D_0_Axis_1_Vel_selectionChanged()
{
    if(ui->LE_D_0_Axis_1_Vel->text()==""){
        on_LE_D_0_Axis_1_Vel_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_LE_D_0_Axis_1_Acc_selectionChanged()
{
    if(ui->LE_D_0_Axis_1_Acc->text()==""){
        on_LE_D_0_Axis_1_Acc_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_LE_D_0_Axis_2_Vel_selectionChanged()
{
    if(ui->LE_D_0_Axis_2_Vel->text()==""){
        on_LE_D_0_Axis_2_Vel_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_LE_D_0_Axis_2_Acc_selectionChanged()
{
    if(ui->LE_D_0_Axis_2_Acc->text()==""){
        on_LE_D_0_Axis_2_Acc_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_LE_D_0_data_0_selectionChanged()
{
    if(ui->LE_D_0_data_0->text()==""){
        on_LE_D_0_data_0_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_LE_D_0_data_1_selectionChanged()
{
    if(ui->LE_D_0_data_1->text()==""){
        on_LE_D_0_data_1_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_LE_D_0_data_2_selectionChanged()
{
    if(ui->LE_D_0_data_2->text()==""){
        on_LE_D_0_data_2_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_LE_D_0_data_3_selectionChanged()
{
    if(ui->LE_D_0_data_3->text()==""){
        on_LE_D_0_data_3_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_LE_D_0_data_4_selectionChanged()
{
    if(ui->LE_D_0_data_4->text()==""){
        on_LE_D_0_data_4_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_LE_D_0_data_5_selectionChanged()
{
    if(ui->LE_D_0_data_5->text()==""){
        on_LE_D_0_data_5_cursorPositionChanged(0,0);
    }
}
#define PB_D_0_PART_END }
// ===========================================================
#define PB_E_0_PART_START   {
void MainWindow::on_PB_E_0_Back_clicked()   // 나가기
{
    ui->SW_A->setCurrentIndex(1);
    manual_M_PB = 0;
    manual_T5_PB = 0;
    manual_state = 0;
    mMediaPlayer->stop();
}

void MainWindow::on_PB_E_1_clicked()
{
    manual_M_PB = 0;
    manual_state = 0;
    ui->SW_E0_T->setCurrentIndex(0);
    ui->SW_E0_R->setCurrentIndex(0);

}

void MainWindow::on_PB_E_2_clicked()
{
    manual_M_PB = 1;
    manual_state = 0;
    ui->SW_E0_T->setCurrentIndex(1);
    ui->SW_E0_R->setCurrentIndex(1);
}

void MainWindow::on_PB_E_3_clicked()
{
    manual_M_PB = 2;
    manual_state = 0;
    ui->SW_E0_T->setCurrentIndex(2);
    ui->SW_E0_R->setCurrentIndex(2);
}

void MainWindow::on_PB_E_4_clicked()
{
    manual_M_PB = 3;
    manual_state = 0;
    ui->SW_E0_T->setCurrentIndex(3);
    ui->SW_E0_R->setCurrentIndex(3);
}

void MainWindow::on_PB_E_5_clicked()
{
    manual_M_PB = 4;
    manual_state = 0;
    ui->SW_E0_T->setCurrentIndex(4);
    ui->SW_E0_R->setCurrentIndex(4);
}

void MainWindow::on_PB_E_6_clicked()
{
    manual_M_PB = 5;
    manual_T5_PB = 0;
    manual_state = 0;
    ui->SW_E0_T->setCurrentIndex(5);
    ui->SW_E0_R->setCurrentIndex(5);
}

void MainWindow::on_PB_T5_0_clicked()
{
    manual_T5_PB = 0;
    manual_state = 0;
    ui->SW_E0_T->setCurrentIndex(5);
    ui->SW_E0_R->setCurrentIndex(5);
}

void MainWindow::on_PB_T5_1_clicked()
{
    manual_T5_PB = 1;
    manual_state = 0;
    ui->SW_E0_T->setCurrentIndex(5);
    ui->SW_E0_R->setCurrentIndex(6);
}

void MainWindow::on_PB_T5_2_clicked()
{
    manual_T5_PB = 2;
    manual_state = 0;
    ui->SW_E0_T->setCurrentIndex(5);
    ui->SW_E0_R->setCurrentIndex(7);
}

void MainWindow::on_PB_T5_3_clicked()
{
    manual_T5_PB = 3;
    manual_state = 0;
    ui->SW_E0_T->setCurrentIndex(5);
    ui->SW_E0_R->setCurrentIndex(8);
}

void MainWindow::on_PB_T5_4_clicked()
{
    manual_T5_PB = 4;
    manual_state = 0;
    ui->SW_E0_T->setCurrentIndex(5);
    ui->SW_E0_R->setCurrentIndex(9);
}

void MainWindow::on_PB_T5_5_clicked()
{
    manual_T5_PB = 5;
    manual_state = 0;
    ui->SW_E0_T->setCurrentIndex(5);
    ui->SW_E0_R->setCurrentIndex(10);
}

void MainWindow::on_PB_T5_6_clicked()
{
    manual_T5_PB = 6;
    manual_state = 0;
    ui->SW_E0_T->setCurrentIndex(5);
    ui->SW_E0_R->setCurrentIndex(11);
}

void MainWindow::on_PB_E_7_clicked()
{
    manual_M_PB = 6;
    manual_state = 0;
    ui->SW_E0_T->setCurrentIndex(6);
    ui->SW_E0_R->setCurrentIndex(12);
}

void MainWindow::on_PB_E_8_clicked()
{
    manual_M_PB = 7;
    manual_state = 0;
    ui->SW_E0_T->setCurrentIndex(7);
    ui->SW_E0_R->setCurrentIndex(13);
}

void MainWindow::on_PB_E_9_clicked()
{
    manual_M_PB = 8;
    manual_state = 0;
    ui->SW_E0_T->setCurrentIndex(8);
    ui->SW_E0_R->setCurrentIndex(14);
}

void MainWindow::on_PB_E_10_clicked()
{
    manual_M_PB = 9;
    manual_state = 0;
    ui->SW_E0_T->setCurrentIndex(9);
    ui->SW_E0_R->setCurrentIndex(15);
}

void MainWindow::video_positionChanged(qint64 position) // 동영상
{
    // 곡 진행 슬라이드바의 값을 position으로 설정
    if(ui->SW_A->currentIndex()==5)
    {
        ui->S_E0R0->setValue(position);
        ui->S_E0R1->setValue(position);
        ui->S_E0R2->setValue(position);
        ui->S_E0R3->setValue(position);
        ui->S_E0R4->setValue(position);
        ui->S_E0R5->setValue(position);
        ui->S_E0R6->setValue(position);
        ui->S_E0R7->setValue(position);
        ui->S_E0R8->setValue(position);
        ui->S_E0R9->setValue(position);
        ui->S_E0R10->setValue(position);
        ui->S_E0R11->setValue(position);
        ui->S_E0R12->setValue(position);
        ui->S_E0R13->setValue(position);
        ui->S_E0R14->setValue(position);
        ui->S_E0R15->setValue(position);
    }
}

void MainWindow::video_durationChanged(qint64 position)
{
    // 곡 진행 슬라이드바의 최대값을 position으로 설정
    if(ui->SW_A->currentIndex()==5)
    {
        ui->S_E0R0->setMaximum(position);
        ui->S_E0R1->setMaximum(position);
        ui->S_E0R2->setMaximum(position);
        ui->S_E0R3->setMaximum(position);
        ui->S_E0R4->setMaximum(position);
        ui->S_E0R5->setMaximum(position);
        ui->S_E0R6->setMaximum(position);
        ui->S_E0R7->setMaximum(position);
        ui->S_E0R8->setMaximum(position);
        ui->S_E0R9->setMaximum(position);
        ui->S_E0R10->setMaximum(position);
        ui->S_E0R11->setMaximum(position);
        ui->S_E0R12->setMaximum(position);
        ui->S_E0R13->setMaximum(position);
        ui->S_E0R14->setMaximum(position);
        ui->S_E0R15->setMaximum(position);
    }
}

#define PB_E_0_PART_END }
// ===========================================================
void MainWindow::on_PB_E0R0_Play_clicked()
{
    mMediaPlayer->play();
}

void MainWindow::on_PB_E0R0_Pause_clicked()
{
    mMediaPlayer->pause();
}

void MainWindow::on_PB_E0R0_Stop_clicked()
{
    mMediaPlayer->stop();
}

void MainWindow::on_S_E0R0_sliderMoved(int position)
{
    mMediaPlayer->setPosition(position);
}

void MainWindow::on_PB_E0R1_Play_clicked()
{
    mMediaPlayer->play();
}

void MainWindow::on_PB_E0R1_Pause_clicked()
{
    mMediaPlayer->pause();
}

void MainWindow::on_PB_E0R1_Stop_clicked()
{
    mMediaPlayer->stop();
}

void MainWindow::on_S_E0R1_sliderMoved(int position)
{
    mMediaPlayer->setPosition(position);
}

void MainWindow::on_PB_E0R2_Play_clicked()
{
    mMediaPlayer->play();
}

void MainWindow::on_PB_E0R2_Pause_clicked()
{
    mMediaPlayer->pause();
}

void MainWindow::on_PB_E0R2_Stop_clicked()
{
    mMediaPlayer->stop();
}

void MainWindow::on_S_E0R2_sliderMoved(int position)
{
    mMediaPlayer->setPosition(position);
}

void MainWindow::on_PB_E0R3_Play_clicked()
{
    mMediaPlayer->play();
}

void MainWindow::on_PB_E0R3_Pause_clicked()
{
    mMediaPlayer->pause();
}

void MainWindow::on_PB_E0R3_Stop_clicked()
{
    mMediaPlayer->stop();
}

void MainWindow::on_S_E0R3_sliderMoved(int position)
{
    mMediaPlayer->setPosition(position);
}

void MainWindow::on_PB_E0R4_Play_clicked()
{
    mMediaPlayer->play();
}

void MainWindow::on_PB_E0R4_Pause_clicked()
{
    mMediaPlayer->pause();
}

void MainWindow::on_PB_E0R4_Stop_clicked()
{
    mMediaPlayer->stop();
}

void MainWindow::on_S_E0R4_sliderMoved(int position)
{
    mMediaPlayer->setPosition(position);
}

void MainWindow::on_PB_E0R5_Play_clicked()
{
    mMediaPlayer->play();
}

void MainWindow::on_PB_E0R5_Pause_clicked()
{
    mMediaPlayer->pause();
}

void MainWindow::on_PB_E0R5_Stop_clicked()
{
    mMediaPlayer->stop();
}

void MainWindow::on_S_E0R5_sliderMoved(int position)
{
    mMediaPlayer->setPosition(position);
}

void MainWindow::on_PB_E0R6_Play_clicked()
{
    mMediaPlayer->play();
}

void MainWindow::on_PB_E0R6_Pause_clicked()
{
    mMediaPlayer->pause();
}

void MainWindow::on_PB_E0R6_Stop_clicked()
{
    mMediaPlayer->stop();
}

void MainWindow::on_S_E0R6_sliderMoved(int position)
{
    mMediaPlayer->setPosition(position);
}

void MainWindow::on_PB_E0R7_Play_clicked()
{
    mMediaPlayer->play();
}

void MainWindow::on_PB_E0R7_Pause_clicked()
{
    mMediaPlayer->pause();
}

void MainWindow::on_PB_E0R7_Stop_clicked()
{
    mMediaPlayer->stop();
}

void MainWindow::on_S_E0R7_sliderMoved(int position)
{
    mMediaPlayer->setPosition(position);
}

void MainWindow::on_PB_E0R8_Play_clicked()
{
    mMediaPlayer->play();
}

void MainWindow::on_PB_E0R8_Pause_clicked()
{
    mMediaPlayer->pause();
}

void MainWindow::on_PB_E0R8_Stop_clicked()
{
    mMediaPlayer->stop();
}

void MainWindow::on_S_E0R8_sliderMoved(int position)
{
    mMediaPlayer->setPosition(position);
}

void MainWindow::on_PB_E0R9_Play_clicked()
{
    mMediaPlayer->play();
}

void MainWindow::on_PB_E0R9_Pause_clicked()
{
    mMediaPlayer->pause();
}

void MainWindow::on_PB_E0R9_Stop_clicked()
{
    mMediaPlayer->stop();
}

void MainWindow::on_S_E0R9_sliderMoved(int position)
{
    mMediaPlayer->setPosition(position);
}

void MainWindow::on_PB_E0R10_Play_clicked()
{
    mMediaPlayer->play();
}

void MainWindow::on_PB_E0R10_Pause_clicked()
{
    mMediaPlayer->pause();
}

void MainWindow::on_PB_E0R10_Stop_clicked()
{
    mMediaPlayer->stop();
}

void MainWindow::on_S_E0R10_sliderMoved(int position)
{
    mMediaPlayer->setPosition(position);
}
void MainWindow::on_PB_E0R11_Play_clicked()
{
    mMediaPlayer->play();
}

void MainWindow::on_PB_E0R11_Pause_clicked()
{
    mMediaPlayer->pause();
}

void MainWindow::on_PB_E0R11_Stop_clicked()
{
    mMediaPlayer->stop();
}

void MainWindow::on_S_E0R11_sliderMoved(int position)
{
    mMediaPlayer->setPosition(position);
}

void MainWindow::on_PB_E0R12_Play_clicked()
{
    mMediaPlayer->play();
}

void MainWindow::on_PB_E0R12_Pause_clicked()
{
    mMediaPlayer->pause();
}

void MainWindow::on_PB_E0R12_Stop_clicked()
{
    mMediaPlayer->stop();
}

void MainWindow::on_S_E0R12_sliderMoved(int position)
{
    mMediaPlayer->setPosition(position);
}

void MainWindow::on_PB_E0R13_Play_clicked()
{
    mMediaPlayer->play();
}

void MainWindow::on_PB_E0R13_Pause_clicked()
{
    mMediaPlayer->pause();
}

void MainWindow::on_PB_E0R13_Stop_clicked()
{
    mMediaPlayer->stop();
}

void MainWindow::on_S_E0R13_sliderMoved(int position)
{
    mMediaPlayer->setPosition(position);
}

void MainWindow::on_PB_E0R14_Play_clicked()
{
    mMediaPlayer->play();
}

void MainWindow::on_PB_E0R14_Pause_clicked()
{
    mMediaPlayer->pause();
}

void MainWindow::on_PB_E0R14_Stop_clicked()
{
    mMediaPlayer->stop();
}

void MainWindow::on_S_E0R14_sliderMoved(int position)
{
    mMediaPlayer->setPosition(position);
}

void MainWindow::on_PB_E0R15_Play_clicked()
{
    mMediaPlayer->play();
}

void MainWindow::on_PB_E0R15_Pause_clicked()
{
    mMediaPlayer->pause();
}

void MainWindow::on_PB_E0R15_Stop_clicked()
{
    mMediaPlayer->stop();
}

void MainWindow::on_S_E0R15_sliderMoved(int position)
{
    mMediaPlayer->setPosition(position);
}

#define Data_0_PART_START {
// ===========================================================
void MainWindow::on_BTN_MODE_BASE_clicked() // 기존 모드
{
    mode_type = 0;
    ui->SW_A->setCurrentIndex(2);
    ui->SW_B->setCurrentIndex(0);
    if(ui->LE_D_0_data_0->text()=="0"){
    ui->SW_data_A->setCurrentIndex(0);
    }
    if(ui->LE_D_0_data_0->text()=="1"){
    ui->SW_data_A->setCurrentIndex(1);
    }
    if(ui->LE_D_0_data_0->text()=="3"){
    ui->SW_data_A->setCurrentIndex(1);
    }
    ui->SW_B_0_L->setCurrentIndex(0);
    ui->SW_B_0_R->setCurrentIndex(0);
}

void MainWindow::on_BTN_MODE_LH_clicked() // LH 모드
{
    mode_type = 1;
    ui->SW_A->setCurrentIndex(2);
    ui->SW_B->setCurrentIndex(0);
    if(ui->LE_D_0_data_0->text()=="0"){
    ui->SW_data_A->setCurrentIndex(0);
    }
    if(ui->LE_D_0_data_0->text()=="1"){
    ui->SW_data_A->setCurrentIndex(1);
    }
    if(ui->LE_D_0_data_0->text()=="3"){
    ui->SW_data_A->setCurrentIndex(1);
    }
    ui->SW_B_0_L->setCurrentIndex(0);
    ui->SW_B_0_R->setCurrentIndex(0);
}

void MainWindow::on_BTN_MODE_HOME_clicked() // 원점 모드
{
    ui->SW_A->setCurrentIndex(2);
    ui->SW_B->setCurrentIndex(4);
    ui->SW_B_4_R->setCurrentIndex(0);
    update_TW_Home();
}

void MainWindow::on_BTN_MODE_RH_clicked() // RH 모드
{
    mode_type = 2;
    ui->SW_A->setCurrentIndex(2);
    ui->SW_B->setCurrentIndex(0);
    if(ui->LE_D_0_data_0->text()=="0"){
    ui->SW_data_A->setCurrentIndex(0);
    }
    if(ui->LE_D_0_data_0->text()=="1"){
    ui->SW_data_A->setCurrentIndex(1);
    }
    if(ui->LE_D_0_data_0->text()=="3"){
    ui->SW_data_A->setCurrentIndex(1);
    }
    ui->SW_B_0_L->setCurrentIndex(0);
    ui->SW_B_0_R->setCurrentIndex(0);
}

void MainWindow::on_BTN_EXIT_1_clicked() // 나가기
{
    modify_mode = 0;
    data_start = 0;
    REFRESH_clicked();
    ui->SW_A->setCurrentIndex(1);
}

void MainWindow::update_TW_Home()
{
    load_TW_Home();
}

void MainWindow::load_TW_Home()
{
    FILE *fp_set = fopen(".\\jct_settings\\Home.txt", "r");
    if(fp_set == NULL){
        // NO file ... lets re-make file
        qDebug()<<"No home file";
        save_TW_Home();
    }else{
        while(true){
            int ret = fscanf(fp_set, "%f %f %f %f %f %f %f %f %f %f"
                             ,&home_axis0,&home_axis1,&home_axis2,&home_axis3,&home_axis4,&home_axis5
                             ,&home_axis6,&home_axis7,&home_axis8,&home_axis9);
            if(ret == EOF){
                break;
            }
        }
        fclose(fp_set);
    }

    qDebug()<<"-----------------------";
    qDebug()<<"Home 정보";
    qDebug()<<"-----------------------";
    qDebug()<<"home_axis0 :" << home_axis0<<endl;
    qDebug()<<"home_axis1 :" << home_axis1<<endl;
    qDebug()<<"home_axis2 :" << home_axis2<<endl;
    qDebug()<<"home_axis3 :" << home_axis3<<endl;
    qDebug()<<"home_axis4 :" << home_axis4<<endl;
    qDebug()<<"home_axis5 :" << home_axis5<<endl;
    qDebug()<<"home_axis6 :" << home_axis6<<endl;
    qDebug()<<"home_axis7 :" << home_axis7<<endl;
    qDebug()<<"home_axis8 :" << home_axis8<<endl;
    qDebug()<<"home_axis9 :" << home_axis9<<endl;
    qDebug()<<"-----------------------";
    ui->TW_Home->setItem(0,0,new QTableWidgetItem(QString().sprintf("원점위치")));
    ui->TW_Home->item(0,0)->setTextAlignment(Qt::AlignCenter);
    ui->TW_Home->setItem(0,1,new QTableWidgetItem(QString().sprintf("교시중")));
    ui->TW_Home->item(0,1)->setTextAlignment(Qt::AlignCenter);
    ui->TW_Home->setItem(0,2,new QTableWidgetItem(QString().sprintf("%.3f",home_axis0)));
    ui->TW_Home->item(0,2)->setTextAlignment(Qt::AlignCenter);
    ui->TW_Home->setItem(0,3,new QTableWidgetItem(QString().sprintf("%.3f",home_axis1)));
    ui->TW_Home->item(0,3)->setTextAlignment(Qt::AlignCenter);
    ui->TW_Home->setItem(0,4,new QTableWidgetItem(QString().sprintf("%.3f",home_axis2)));
    ui->TW_Home->item(0,4)->setTextAlignment(Qt::AlignCenter);
    ui->TW_Home->setItem(0,5,new QTableWidgetItem(QString().sprintf("%.3f",home_axis3)));
    ui->TW_Home->item(0,5)->setTextAlignment(Qt::AlignCenter);
    ui->TW_Home->setItem(0,6,new QTableWidgetItem(QString().sprintf("%.3f",home_axis4)));
    ui->TW_Home->item(0,6)->setTextAlignment(Qt::AlignCenter);
    ui->TW_Home->setItem(0,7,new QTableWidgetItem(QString().sprintf("%.3f",home_axis5)));
    ui->TW_Home->item(0,7)->setTextAlignment(Qt::AlignCenter);
    ui->TW_Home->setItem(0,8,new QTableWidgetItem(QString().sprintf("%.3f",home_axis6)));
    ui->TW_Home->item(0,8)->setTextAlignment(Qt::AlignCenter);
    ui->TW_Home->setItem(0,9,new QTableWidgetItem(QString().sprintf("%.3f",home_axis7)));
    ui->TW_Home->item(0,9)->setTextAlignment(Qt::AlignCenter);
    ui->TW_Home->setItem(0,10,new QTableWidgetItem(QString().sprintf("%.3f",home_axis8)));
    ui->TW_Home->item(0,10)->setTextAlignment(Qt::AlignCenter);
    ui->TW_Home->setItem(0,11,new QTableWidgetItem(QString().sprintf("%.3f",home_axis9)));
    ui->TW_Home->item(0,11)->setTextAlignment(Qt::AlignCenter);

}

void MainWindow::save_TW_Home(void)
{
    FILE* fp_set;
    fp_set = fopen(".\\jct_settings\\Home.txt", "w");
        fprintf(fp_set,"%.3f\t%.3f\t%.3f\t%.3f\t%.3f\t%.3f\t%.3f\t%.3f\t%.3f\t%.3f"
                ,home_axis0,home_axis1,home_axis2,home_axis3,home_axis4,home_axis5
                ,home_axis6,home_axis7,home_axis8,home_axis9);
    fclose(fp_set);
    fflush(fp_set);
}
void MainWindow::B4R1_key_view()
{
    ui->LE_B4R1_key->setText("");
    ui->SW_B_4_R->setCurrentIndex(1);
    switch (data_B4R1_key_view) {
    case 99:
        ui->LE_B4R1_key->setText(ui->TW_Home->item(data_TW_Home_row,data_TW_Home_column)->text());
        break;

    default:
        break;
    }
}

void MainWindow::B4R1_key_clicked_number(QString number)
{
    B4R1_input += number;
    ui->LE_B4R1_key->setText(B4R1_input);
}

void MainWindow::on_PB_B4R1_key_0_clicked(){ B4R1_key_clicked_number("0"); }
void MainWindow::on_PB_B4R1_key_1_clicked(){ B4R1_key_clicked_number("1"); }
void MainWindow::on_PB_B4R1_key_2_clicked(){ B4R1_key_clicked_number("2"); }
void MainWindow::on_PB_B4R1_key_3_clicked(){ B4R1_key_clicked_number("3"); }
void MainWindow::on_PB_B4R1_key_4_clicked(){ B4R1_key_clicked_number("4"); }
void MainWindow::on_PB_B4R1_key_5_clicked(){ B4R1_key_clicked_number("5"); }
void MainWindow::on_PB_B4R1_key_6_clicked(){ B4R1_key_clicked_number("6"); }
void MainWindow::on_PB_B4R1_key_7_clicked(){ B4R1_key_clicked_number("7"); }
void MainWindow::on_PB_B4R1_key_8_clicked(){ B4R1_key_clicked_number("8"); }
void MainWindow::on_PB_B4R1_key_9_clicked(){ B4R1_key_clicked_number("9"); }
void MainWindow::on_PB_B4R1_key_minus_clicked(){ B4R1_key_clicked_number("-"); }

void MainWindow::on_PB_B4R1_key_back_clicked()
{
    //! 현재입력된 값의 글자수가 1보다 클때
    if(B4R1_input.length() > 1) {
        //! 가장 마지막값 1개를 지움
        B4R1_input.resize(B4R1_input.length()-1);
        ui->LE_B4R1_key->setText(B4R1_input);
    } else {
        B4R1_input = "";
        ui->LE_B4R1_key->setText(B4R1_input);
    }
}

void MainWindow::on_PB_B4R1_key_dot_clicked()
{
    //! 현재입력값에 '.' 이 포함되어 있다면
    if(B4R1_input.contains(".")) {
        B4R1_key_clicked_number(".");
        on_PB_B4R1_key_back_clicked();
    } else {
        B4R1_key_clicked_number(".");
    }
}

void MainWindow::on_PB_B4R1_key_enter_clicked()
{
    switch (data_B4R1_key_view) {
    case 99:
        ui->TW_Home->item(data_TW_Home_row,data_TW_Home_column)->setText(ui->LE_B4R1_key->text());
        break;
    default:

        break;
    }
    data_B4R1_key_view = 0;
    ui->SW_B_4_R->setCurrentIndex(0);
}

void MainWindow::on_PB_B4R1_key_exit_clicked()
{
   data_B4R1_key_view = 0;
   ui->SW_B_4_R->setCurrentIndex(0);
}

void MainWindow::on_TW_Home_cellDoubleClicked(int row, int column)
{
    if(column>1){
    data_B4R1_key_view = 99;
    data_TW_Home_row = row;
    data_TW_Home_column = column;
    B4R1_input = "";
    B4R1_key_view();
    }
    qDebug()<<"on_TW_Home_cellDoubleClicked:"<<row<<","<<column<<endl;
}
#define Data_0_PART_END }
// ===========================================================

void MainWindow::on_PB_B_4_Back_clicked()
{
    modify_mode = 0;
    ui->SW_A->setCurrentIndex(2);
    if(ui->LE_D_0_data_0->text() == "1")
    {
        ui->SW_B->setCurrentIndex(3);
    }
    if(ui->LE_D_0_data_0->text() == "2")
    {
        ui->SW_B->setCurrentIndex(5);
    }
    if(ui->LE_D_0_data_0->text() == "3")
    {
        ui->SW_B->setCurrentIndex(3);
    }
}

void MainWindow::on_PB_B_4_Set_clicked()
{
    home_axis0 = sys_status.sdata.jnt_ref[0];
    home_axis1 = sys_status.sdata.jnt_ref[1];
    home_axis2 = sys_status.sdata.jnt_ref[2];
    home_axis3 = sys_status.sdata.jnt_ref[3];
    home_axis4 = sys_status.sdata.jnt_ref[4];
    home_axis5 = sys_status.sdata.jnt_ref[5];

    home_axis6 = sys_status.sdata.aa_joint_ref[0];
    home_axis7 = sys_status.sdata.aa_joint_ref[1];
    home_axis8 = sys_status.sdata.aa_joint_ref[2];

    ui->TW_Home->setItem(0,0,new QTableWidgetItem(QString().sprintf("원점위치")));
    ui->TW_Home->item(0,0)->setTextAlignment(Qt::AlignCenter);
    ui->TW_Home->setItem(0,1,new QTableWidgetItem(QString().sprintf("설정 완료")));
    ui->TW_Home->item(0,1)->setTextAlignment(Qt::AlignCenter);
    ui->TW_Home->setItem(0,2,new QTableWidgetItem(QString().sprintf("%.3f",home_axis0)));
    ui->TW_Home->item(0,2)->setTextAlignment(Qt::AlignCenter);
    ui->TW_Home->setItem(0,3,new QTableWidgetItem(QString().sprintf("%.3f",home_axis1)));
    ui->TW_Home->item(0,3)->setTextAlignment(Qt::AlignCenter);
    ui->TW_Home->setItem(0,4,new QTableWidgetItem(QString().sprintf("%.3f",home_axis2)));
    ui->TW_Home->item(0,4)->setTextAlignment(Qt::AlignCenter);
    ui->TW_Home->setItem(0,5,new QTableWidgetItem(QString().sprintf("%.3f",home_axis3)));
    ui->TW_Home->item(0,5)->setTextAlignment(Qt::AlignCenter);
    ui->TW_Home->setItem(0,6,new QTableWidgetItem(QString().sprintf("%.3f",home_axis4)));
    ui->TW_Home->item(0,6)->setTextAlignment(Qt::AlignCenter);
    ui->TW_Home->setItem(0,7,new QTableWidgetItem(QString().sprintf("%.3f",home_axis5)));
    ui->TW_Home->item(0,7)->setTextAlignment(Qt::AlignCenter);
    ui->TW_Home->setItem(0,8,new QTableWidgetItem(QString().sprintf("%.3f",home_axis6)));
    ui->TW_Home->item(0,8)->setTextAlignment(Qt::AlignCenter);
    ui->TW_Home->setItem(0,9,new QTableWidgetItem(QString().sprintf("%.3f",home_axis7)));
    ui->TW_Home->item(0,9)->setTextAlignment(Qt::AlignCenter);
    ui->TW_Home->setItem(0,10,new QTableWidgetItem(QString().sprintf("%.3f",home_axis8)));
    ui->TW_Home->item(0,10)->setTextAlignment(Qt::AlignCenter);
    ui->TW_Home->setItem(0,11,new QTableWidgetItem(QString().sprintf("%.3f",home_axis9)));
    ui->TW_Home->item(0,11)->setTextAlignment(Qt::AlignCenter);

    save_TW_Home();
}

void MainWindow::on_BTN_Load_Base_clicked()
{
    mode_type = 0;
    load_file_no = 0;
    ui->SW_A->setCurrentIndex(3);
    ui->SW_C->setCurrentIndex(0);
    ui->SW_C_0_C->setCurrentIndex(0);
}

void MainWindow::on_BTN_Load_Line_clicked()
{
    mode_type = 0;
    if(ui->LE_D_0_data_0->text()=="1")
    {
    ui->LE_LOAD_LH->setText("");
    ui->LE_LOAD_LH_2->setText("");
    ui->LE_LOAD_RH->setText("");
    ui->LE_LOAD_RH_2->setText("");
    ui->SW_A->setCurrentIndex(3);
    ui->SW_C->setCurrentIndex(2);
    }
    if(ui->LE_D_0_data_0->text()=="2")
    {
    ui->LE_LOAD_JIG1_1->setText("");
    ui->LE_LOAD_JIG1_2->setText("");
    ui->LE_LOAD_JIG2_1->setText("");
    ui->LE_LOAD_JIG2_2->setText("");
    ui->LE_LOAD_JIG3_1->setText("");
    ui->LE_LOAD_JIG3_2->setText("");
    ui->SW_A->setCurrentIndex(3);
    ui->SW_C->setCurrentIndex(4);
    ui->SW_LOAD_JIG->setCurrentIndex(0);
    }
    if(ui->LE_D_0_data_0->text()=="3")
    {
    ui->LE_LOAD_LH->setText("");
    ui->LE_LOAD_LH_2->setText("");
    ui->LE_LOAD_RH->setText("");
    ui->LE_LOAD_RH_2->setText("");
    ui->SW_A->setCurrentIndex(3);
    ui->SW_C->setCurrentIndex(2);
    }
}

void MainWindow::on_PB_A3C1_back_clicked()
{
    mode_type = 0;
    ui->SW_A->setCurrentIndex(1);
}

void MainWindow::on_PB_A3C2_back_clicked()
{
    mode_type = 0;
    load_file_no = 0;
    ui->SW_A->setCurrentIndex(3);
    ui->SW_C->setCurrentIndex(1);
}

void MainWindow::on_BTN_FILE_LOAD_LH_clicked()
{
    line_lh_load_no = 0;
    QString filename;
    load_type = ui->LE_LOAD_LH->text();
    filename = QFileDialog::getOpenFileName(this, "JCT 용접 파일 로드", "", "JCT File (*.jct);; All Files (*)");
    qDebug()<<filename;
    if(filename.isEmpty())
        return;
    QFile file(filename);
    ui->LE_LOAD_LH->setText(filename);
    QString text_chop = ui->LE_LOAD_LH->text();
    text_chop.chop(4);
    ui->LE_LOAD_LH_2->setText(text_chop.section("/", -1));

    if(!file.open(QIODevice::ReadOnly)){
        QMessageBox::warning(this, "파일 로드 실패", file.errorString());
        return;
    }

    qDebug()<<"LH_load"<<endl;
}

void MainWindow::on_BTN_FILE_LOAD_RH_clicked()
{
    line_rh_load_no = 0;
    QString filename;
    load_type = ui->LE_LOAD_RH->text();
    filename = QFileDialog::getOpenFileName(this, "JCT 용접 파일 로드", "", "JCT File (*.jct);; All Files (*)");
    qDebug()<<filename;
    if(filename.isEmpty())
        return;
    QFile file(filename);
    ui->LE_LOAD_RH->setText(filename);
    QString text_chop = ui->LE_LOAD_RH->text();
    text_chop.chop(4);
    ui->LE_LOAD_RH_2->setText(text_chop.section("/", -1));

    if(!file.open(QIODevice::ReadOnly)){
        QMessageBox::warning(this, "파일 로드 실패", file.errorString());
        return;
    }
    qDebug()<<"RH_load"<<endl;
}

void MainWindow::on_BTN_Load_Line_OK_clicked()
{
    if(ui->LE_LOAD_LH->text()!="" && ui->LE_LOAD_RH->text()!=""){
        ui->SW_A->setCurrentIndex(3);
        ui->SW_C->setCurrentIndex(3);
    }
    if(ui->LE_LOAD_LH->text()=="" || ui->LE_LOAD_RH->text()==""){
        QMessageBox::warning(this,"파일 읽기 실패!!","파일을 선택 해주세요.");
    }
}

void MainWindow::on_PB_C_3_Play_clicked() // 로드 시작
{
    play_type = 1;
    Load_LH_make();
}

void MainWindow::on_PB_C_3_Pause_clicked() // 로드 일시정지
{
    if(sockConnectionStatusCmd && sockConnectionStatusData){
        sockCmd.write("task pause ");
    }else{
        qDebug()<<"on_PB_C_3_Pause_clicked"<<endl;
        QMessageBox::warning(this, MSG_JCT_TITLE, MSG_NO_CONNECTION);
    }
    ui->PB_C_3_Play->setStyleSheet("QPushButton{border-image: url(:/a/image/실행-274x287.png)}");
    data_start = 0;
}

void MainWindow::on_PB_C_3_Stop_clicked() // 로드 정지
{
    if(sockConnectionStatusCmd && sockConnectionStatusData){
        sockCmd.write("task stop ");
    }else{
        qDebug()<<"on_PB_C_3_Stop_clicked"<<endl;
        QMessageBox::warning(this, MSG_JCT_TITLE, MSG_NO_CONNECTION);
    }
    ui->PB_C_3_Play->setStyleSheet("QPushButton{border-image: url(:/a/image/실행-274x287.png)}");
    data_start = 0;
}

void MainWindow::Load_Home_make()
{
    mode_type = 3;
    qDebug()<<"HOME_load_1"<<endl;
    make_and_run(0);
}

void MainWindow::Load_LH_make()
{
    QString filename = ui->LE_LOAD_LH->text();
    qDebug()<<filename;
    if(filename.isEmpty())
        return;
    QFile file(filename);
    if(!file.open(QIODevice::ReadOnly)){
        QMessageBox::warning(this, "파일 로드 실패", file.errorString());
        return;
    }
    QDataStream in(&file);
    welding_data.clear();
    in >> welding_data;
    Update_TW_10();
    command_data.clear();
    in >> command_data;
    Update_TW_1();

    mode_type = 1; //LH
    qDebug()<<"LH_load_1"<<endl;
    make_and_run(0);
}

void MainWindow::Load_RH_make()
{
    QString filename = ui->LE_LOAD_RH->text();
    qDebug()<<filename;
    if(filename.isEmpty())
        return;
    QFile file(filename);
    if(!file.open(QIODevice::ReadOnly)){
        QMessageBox::warning(this, "파일 로드 실패", file.errorString());
        return;
    }
    QDataStream in(&file);
    welding_data.clear();
    in >> welding_data;
    Update_TW_10();
    command_data.clear();
    in >> command_data;
    Update_TW_1();

    mode_type = 2; //RH
    qDebug()<<"RH_load_1"<<endl;
    make_and_run(0);
}

void MainWindow::on_PB_A3C3_back_clicked()
{
    mode_type = 0;
    modify_mode = 0;
    data_start = 0;
    on_PB_B_2_Stop_clicked();
    REFRESH_clicked();
    ui->SW_A->setCurrentIndex(1);
    mMediaPlayer->stop();
}

void MainWindow::on_BTN_Save_Tag_LH_1_clicked()
{
    save_file_no = 1;
    save_type = ui->BTN_Save_Tag_LH_1->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_Main_LH_1_clicked()
{
    save_file_no = 2;
    save_type = ui->BTN_Save_Main_LH_1->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_Tag_LH_2_clicked()
{
    save_file_no = 3;
    save_type = ui->BTN_Save_Tag_LH_2->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_Main_LH_2_clicked()
{
    save_file_no = 4;
    save_type = ui->BTN_Save_Main_LH_2->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_Tag_LH_3_clicked()
{
    save_file_no = 5;
    save_type = ui->BTN_Save_Tag_LH_3->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_Main_LH_3_clicked()
{
    save_file_no = 6;
    save_type = ui->BTN_Save_Main_LH_3->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_Tag_LH_4_clicked()
{
    save_file_no = 7;
    save_type = ui->BTN_Save_Tag_LH_4->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_Main_LH_4_clicked()
{
    save_file_no = 8;
    save_type = ui->BTN_Save_Main_LH_4->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_Tag_LH_5_clicked()
{
    save_file_no = 9;
    save_type = ui->BTN_Save_Tag_LH_5->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_Main_LH_5_clicked()
{
    save_file_no = 10;
    save_type = ui->BTN_Save_Main_LH_5->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_Tag_LH_6_clicked()
{
    save_file_no = 11;
    save_type = ui->BTN_Save_Tag_LH_6->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_Main_LH_6_clicked()
{
    save_file_no = 12;
    save_type = ui->BTN_Save_Main_LH_6->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_Tag_LH_7_clicked()
{
    save_file_no = 13;
    save_type = ui->BTN_Save_Tag_LH_7->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_Main_LH_7_clicked()
{
    save_file_no = 14;
    save_type = ui->BTN_Save_Main_LH_7->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_Tag_LH_8_clicked()
{
    save_file_no = 15;
    save_type = ui->BTN_Save_Tag_LH_8->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_Main_LH_8_clicked()
{
    save_file_no = 16;
    save_type = ui->BTN_Save_Main_LH_8->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_Tag_LH_9_clicked()
{
    save_file_no = 17;
    save_type = ui->BTN_Save_Tag_LH_9->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_Main_LH_9_clicked()
{
    save_file_no = 18;
    save_type = ui->BTN_Save_Main_LH_9->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_Tag_LH_10_clicked()
{
    save_file_no = 19;
    save_type = ui->BTN_Save_Tag_LH_10->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_Main_LH_10_clicked()
{
    save_file_no = 20;
    save_type = ui->BTN_Save_Main_LH_10->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_Tag_LH_11_clicked()
{
    save_file_no = 21;
    save_type = ui->BTN_Save_Tag_LH_11->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_Main_LH_11_clicked()
{
    save_file_no = 22;
    save_type = ui->BTN_Save_Main_LH_11->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_Tag_LH_12_clicked()
{
    save_file_no = 23;
    save_type = ui->BTN_Save_Tag_LH_12->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_Main_LH_12_clicked()
{
    save_file_no = 24;
    save_type = ui->BTN_Save_Main_LH_12->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_Tag_LH_13_clicked()
{
    save_file_no = 25;
    save_type = ui->BTN_Save_Tag_LH_13->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_Main_LH_13_clicked()
{
    save_file_no = 26;
    save_type = ui->BTN_Save_Main_LH_13->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_Tag_LH_14_clicked()
{
    save_file_no = 27;
    save_type = ui->BTN_Save_Tag_LH_14->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_Main_LH_14_clicked()
{
    save_file_no = 28;
    save_type = ui->BTN_Save_Main_LH_14->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_Tag_LH_15_clicked()
{
    save_file_no = 29;
    save_type = ui->BTN_Save_Tag_LH_15->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_Main_LH_15_clicked()
{
    save_file_no = 30;
    save_type = ui->BTN_Save_Main_LH_15->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_Tag_LH_16_clicked()
{
    save_file_no = 31;
    save_type = ui->BTN_Save_Tag_LH_16->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_Main_LH_16_clicked()
{
    save_file_no = 32;
    save_type = ui->BTN_Save_Main_LH_16->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_Tag_LH_17_clicked()
{
    save_file_no = 33;
    save_type = ui->BTN_Save_Tag_LH_17->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_Main_LH_17_clicked()
{
    save_file_no = 34;
    save_type = ui->BTN_Save_Main_LH_17->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_Tag_LH_18_clicked()
{
    save_file_no = 35;
    save_type = ui->BTN_Save_Tag_LH_18->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_Main_LH_18_clicked()
{
    save_file_no = 36;
    save_type = ui->BTN_Save_Main_LH_18->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_Tag_LH_19_clicked()
{
    save_file_no = 37;
    save_type = ui->BTN_Save_Tag_LH_19->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_Main_LH_19_clicked()
{
    save_file_no = 38;
    save_type = ui->BTN_Save_Main_LH_19->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_Tag_LH_20_clicked()
{
    save_file_no = 39;
    save_type = ui->BTN_Save_Tag_LH_20->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_Main_LH_20_clicked()
{
    save_file_no = 40;
    save_type = ui->BTN_Save_Main_LH_20->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_Tag_RH_1_clicked()
{
    save_file_no = 41;
    save_type = ui->BTN_Save_Tag_RH_1->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_Main_RH_1_clicked()
{
    save_file_no = 42;
    save_type = ui->BTN_Save_Main_RH_1->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_Tag_RH_2_clicked()
{
    save_file_no = 43;
    save_type = ui->BTN_Save_Tag_RH_2->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_Main_RH_2_clicked()
{
    save_file_no = 44;
    save_type = ui->BTN_Save_Main_RH_2->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_Tag_RH_3_clicked()
{
    save_file_no = 45;
    save_type = ui->BTN_Save_Tag_RH_3->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_Main_RH_3_clicked()
{
    save_file_no = 46;
    save_type = ui->BTN_Save_Main_RH_3->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_Tag_RH_4_clicked()
{
    save_file_no = 47;
    save_type = ui->BTN_Save_Tag_RH_4->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_Main_RH_4_clicked()
{
    save_file_no = 48;
    save_type = ui->BTN_Save_Main_RH_4->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_Tag_RH_5_clicked()
{
    save_file_no = 49;
    save_type = ui->BTN_Save_Tag_RH_5->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_Main_RH_5_clicked()
{
    save_file_no = 50;
    save_type = ui->BTN_Save_Main_RH_5->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_Tag_RH_6_clicked()
{
    save_file_no = 51;
    save_type = ui->BTN_Save_Tag_RH_6->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_Main_RH_6_clicked()
{
    save_file_no = 52;
    save_type = ui->BTN_Save_Main_RH_6->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_Tag_RH_7_clicked()
{
    save_file_no = 53;
    save_type = ui->BTN_Save_Tag_RH_7->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_Main_RH_7_clicked()
{
    save_file_no = 54;
    save_type = ui->BTN_Save_Main_RH_7->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_Tag_RH_8_clicked()
{
    save_file_no = 55;
    save_type = ui->BTN_Save_Tag_RH_8->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_Main_RH_8_clicked()
{
    save_file_no = 56;
    save_type = ui->BTN_Save_Main_RH_8->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_Tag_RH_9_clicked()
{
    save_file_no = 57;
    save_type = ui->BTN_Save_Tag_RH_9->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_Main_RH_9_clicked()
{
    save_file_no = 58;
    save_type = ui->BTN_Save_Main_RH_9->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_Tag_RH_10_clicked()
{
    save_file_no = 59;
    save_type = ui->BTN_Save_Tag_RH_10->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_Main_RH_10_clicked()
{
    save_file_no = 60;
    save_type = ui->BTN_Save_Main_RH_10->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_Tag_RH_11_clicked()
{
    save_file_no = 61;
    save_type = ui->BTN_Save_Tag_RH_11->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_Main_RH_11_clicked()
{
    save_file_no = 62;
    save_type = ui->BTN_Save_Main_RH_11->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_Tag_RH_12_clicked()
{
    save_file_no = 63;
    save_type = ui->BTN_Save_Tag_RH_12->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_Main_RH_12_clicked()
{
    save_file_no = 64;
    save_type = ui->BTN_Save_Main_RH_12->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_Tag_RH_13_clicked()
{
    save_file_no = 65;
    save_type = ui->BTN_Save_Tag_RH_13->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_Main_RH_13_clicked()
{
    save_file_no = 66;
    save_type = ui->BTN_Save_Main_RH_13->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_Tag_RH_14_clicked()
{
    save_file_no = 67;
    save_type = ui->BTN_Save_Tag_RH_14->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_Main_RH_14_clicked()
{
    save_file_no = 68;
    save_type = ui->BTN_Save_Main_RH_14->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_Tag_RH_15_clicked()
{
    save_file_no = 69;
    save_type = ui->BTN_Save_Tag_RH_15->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_Main_RH_15_clicked()
{
    save_file_no = 70;
    save_type = ui->BTN_Save_Main_RH_15->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_Tag_RH_16_clicked()
{
    save_file_no = 71;
    save_type = ui->BTN_Save_Tag_RH_16->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_Main_RH_16_clicked()
{
    save_file_no = 72;
    save_type = ui->BTN_Save_Main_RH_16->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_Tag_RH_17_clicked()
{
    save_file_no = 73;
    save_type = ui->BTN_Save_Tag_RH_17->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_Main_RH_17_clicked()
{
    save_file_no = 74;
    save_type = ui->BTN_Save_Main_RH_17->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_Tag_RH_18_clicked()
{
    save_file_no = 75;
    save_type = ui->BTN_Save_Tag_RH_18->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_Main_RH_18_clicked()
{
    save_file_no = 76;
    save_type = ui->BTN_Save_Main_RH_18->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_Tag_RH_19_clicked()
{
    save_file_no = 77;
    save_type = ui->BTN_Save_Tag_RH_19->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_Main_RH_19_clicked()
{
    save_file_no = 78;
    save_type = ui->BTN_Save_Main_RH_19->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_Tag_RH_20_clicked()
{
    save_file_no = 79;
    save_type = ui->BTN_Save_Tag_RH_20->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_Main_RH_20_clicked()
{
    save_file_no = 80;
    save_type = ui->BTN_Save_Main_RH_20->text();
    save_MessageBox();
}

void MainWindow::on_PB_B2C3_back_clicked()
{
    ui->SW_B_2_C->setCurrentIndex(0);
    save_file_no = 0;
}
//
//
// Load
//
void MainWindow::on_BTN_Load_Tag_LH_1_clicked()
{
    line_lh_load_no = 1;
    load_type = ui->BTN_Load_Tag_LH_1->text();
    load_MessageBox_LH();
}

void MainWindow::on_BTN_Load_Main_LH_1_clicked()
{
    line_lh_load_no = 2;
    load_type = ui->BTN_Load_Main_LH_1->text();
    load_MessageBox_LH();
}

void MainWindow::on_BTN_Load_Tag_LH_2_clicked()
{
    line_lh_load_no = 3;
    load_type = ui->BTN_Load_Tag_LH_2->text();
    load_MessageBox_LH();
}

void MainWindow::on_BTN_Load_Main_LH_2_clicked()
{
    line_lh_load_no = 4;
    load_type = ui->BTN_Load_Main_LH_2->text();
    load_MessageBox_LH();
}

void MainWindow::on_BTN_Load_Tag_LH_3_clicked()
{
    line_lh_load_no = 5;
    load_type = ui->BTN_Load_Tag_LH_3->text();
    load_MessageBox_LH();
}

void MainWindow::on_BTN_Load_Main_LH_3_clicked()
{
    line_lh_load_no = 6;
    load_type = ui->BTN_Load_Main_LH_3->text();
    load_MessageBox_LH();
}

void MainWindow::on_BTN_Load_Tag_LH_4_clicked()
{
    line_lh_load_no = 7;
    load_type = ui->BTN_Load_Tag_LH_4->text();
    load_MessageBox_LH();
}

void MainWindow::on_BTN_Load_Main_LH_4_clicked()
{
    line_lh_load_no = 8;
    load_type = ui->BTN_Load_Main_LH_4->text();
    load_MessageBox_LH();
}

void MainWindow::on_BTN_Load_Tag_LH_5_clicked()
{
    line_lh_load_no = 9;
    load_type = ui->BTN_Load_Tag_LH_5->text();
    load_MessageBox_LH();
}

void MainWindow::on_BTN_Load_Main_LH_5_clicked()
{
    line_lh_load_no = 10;
    load_type = ui->BTN_Load_Main_LH_5->text();
    load_MessageBox_LH();
}

void MainWindow::on_BTN_Load_Tag_LH_6_clicked()
{
    line_lh_load_no = 11;
    load_type = ui->BTN_Load_Tag_LH_6->text();
    load_MessageBox_LH();
}

void MainWindow::on_BTN_Load_Main_LH_6_clicked()
{
    line_lh_load_no = 12;
    load_type = ui->BTN_Load_Main_LH_6->text();
    load_MessageBox_LH();
}

void MainWindow::on_BTN_Load_Tag_LH_7_clicked()
{
    line_lh_load_no = 13;
    load_type = ui->BTN_Load_Tag_LH_7->text();
    load_MessageBox_LH();
}

void MainWindow::on_BTN_Load_Main_LH_7_clicked()
{
    line_lh_load_no = 14;
    load_type = ui->BTN_Load_Main_LH_7->text();
    load_MessageBox_LH();
}

void MainWindow::on_BTN_Load_Tag_LH_8_clicked()
{
    line_lh_load_no = 15;
    load_type = ui->BTN_Load_Tag_LH_8->text();
    load_MessageBox_LH();
}

void MainWindow::on_BTN_Load_Main_LH_8_clicked()
{
    line_lh_load_no = 16;
    load_type = ui->BTN_Load_Main_LH_8->text();
    load_MessageBox_LH();
}

void MainWindow::on_BTN_Load_Tag_LH_9_clicked()
{
    line_lh_load_no = 17;
    load_type = ui->BTN_Load_Tag_LH_9->text();
    load_MessageBox_LH();
}

void MainWindow::on_BTN_Load_Main_LH_9_clicked()
{
    line_lh_load_no = 18;
    load_type = ui->BTN_Load_Main_LH_9->text();
    load_MessageBox_LH();
}

void MainWindow::on_BTN_Load_Tag_LH_10_clicked()
{
    line_lh_load_no = 19;
    load_type = ui->BTN_Load_Tag_LH_10->text();
    load_MessageBox_LH();
}

void MainWindow::on_BTN_Load_Main_LH_10_clicked()
{
    line_lh_load_no = 20;
    load_type = ui->BTN_Load_Main_LH_10->text();
    load_MessageBox_LH();
}

void MainWindow::on_BTN_Load_Tag_LH_11_clicked()
{
    line_lh_load_no = 21;
    load_type = ui->BTN_Load_Tag_LH_11->text();
    load_MessageBox_LH();
}

void MainWindow::on_BTN_Load_Main_LH_11_clicked()
{
    line_lh_load_no = 22;
    load_type = ui->BTN_Load_Main_LH_11->text();
    load_MessageBox_LH();
}

void MainWindow::on_BTN_Load_Tag_LH_12_clicked()
{
    line_lh_load_no = 23;
    load_type = ui->BTN_Load_Tag_LH_12->text();
    load_MessageBox_LH();
}

void MainWindow::on_BTN_Load_Main_LH_12_clicked()
{
    line_lh_load_no = 24;
    load_type = ui->BTN_Load_Main_LH_12->text();
    load_MessageBox_LH();
}

void MainWindow::on_BTN_Load_Tag_LH_13_clicked()
{
    line_lh_load_no = 25;
    load_type = ui->BTN_Load_Tag_LH_13->text();
    load_MessageBox_LH();
}

void MainWindow::on_BTN_Load_Main_LH_13_clicked()
{
    line_lh_load_no = 26;
    load_type = ui->BTN_Load_Main_LH_13->text();
    load_MessageBox_LH();
}

void MainWindow::on_BTN_Load_Tag_LH_14_clicked()
{
    line_lh_load_no = 27;
    load_type = ui->BTN_Load_Tag_LH_14->text();
    load_MessageBox_LH();
}

void MainWindow::on_BTN_Load_Main_LH_14_clicked()
{
    line_lh_load_no = 28;
    load_type = ui->BTN_Load_Main_LH_14->text();
    load_MessageBox_LH();
}

void MainWindow::on_BTN_Load_Tag_LH_15_clicked()
{
    line_lh_load_no = 29;
    load_type = ui->BTN_Load_Tag_LH_15->text();
    load_MessageBox_LH();
}

void MainWindow::on_BTN_Load_Main_LH_15_clicked()
{
    line_lh_load_no = 30;
    load_type = ui->BTN_Load_Main_LH_15->text();
    load_MessageBox_LH();
}

void MainWindow::on_BTN_Load_Tag_LH_16_clicked()
{
    line_lh_load_no = 31;
    load_type = ui->BTN_Load_Tag_LH_16->text();
    load_MessageBox_LH();
}

void MainWindow::on_BTN_Load_Main_LH_16_clicked()
{
    line_lh_load_no = 32;
    load_type = ui->BTN_Load_Main_LH_16->text();
    load_MessageBox_LH();
}

void MainWindow::on_BTN_Load_Tag_LH_17_clicked()
{
    line_lh_load_no = 33;
    load_type = ui->BTN_Load_Tag_LH_17->text();
    load_MessageBox_LH();
}

void MainWindow::on_BTN_Load_Main_LH_17_clicked()
{
    line_lh_load_no = 34;
    load_type = ui->BTN_Load_Main_LH_17->text();
    load_MessageBox_LH();
}

void MainWindow::on_BTN_Load_Tag_LH_18_clicked()
{
    line_lh_load_no = 35;
    load_type = ui->BTN_Load_Tag_LH_18->text();
    load_MessageBox_LH();
}

void MainWindow::on_BTN_Load_Main_LH_18_clicked()
{
    line_lh_load_no = 36;
    load_type = ui->BTN_Load_Main_LH_18->text();
    load_MessageBox_LH();
}

void MainWindow::on_BTN_Load_Tag_LH_19_clicked()
{
    line_lh_load_no = 37;
    load_type = ui->BTN_Load_Tag_LH_19->text();
    load_MessageBox_LH();
}

void MainWindow::on_BTN_Load_Main_LH_19_clicked()
{
    line_lh_load_no = 38;
    load_type = ui->BTN_Load_Main_LH_19->text();
    load_MessageBox_LH();
}

void MainWindow::on_BTN_Load_Tag_LH_20_clicked()
{
    line_lh_load_no = 39;
    load_type = ui->BTN_Load_Tag_LH_20->text();
    load_MessageBox_LH();
}

void MainWindow::on_BTN_Load_Main_LH_20_clicked()
{
    line_lh_load_no = 40;
    load_type = ui->BTN_Load_Main_LH_20->text();
    load_MessageBox_LH();
}

void MainWindow::on_BTN_Load_Tag_RH_1_clicked()
{
    line_rh_load_no = 1;
    load_type = ui->BTN_Load_Tag_RH_1->text();
    load_MessageBox_RH();
}

void MainWindow::on_BTN_Load_Main_RH_1_clicked()
{
    line_rh_load_no = 2;
    load_type = ui->BTN_Load_Main_RH_1->text();
    load_MessageBox_RH();
}

void MainWindow::on_BTN_Load_Tag_RH_2_clicked()
{
    line_rh_load_no = 3;
    load_type = ui->BTN_Load_Tag_RH_2->text();
    load_MessageBox_RH();
}

void MainWindow::on_BTN_Load_Main_RH_2_clicked()
{
    line_rh_load_no = 4;
    load_type = ui->BTN_Load_Main_RH_2->text();
    load_MessageBox_RH();
}

void MainWindow::on_BTN_Load_Tag_RH_3_clicked()
{
    line_rh_load_no = 5;
    load_type = ui->BTN_Load_Tag_RH_3->text();
    load_MessageBox_RH();
}

void MainWindow::on_BTN_Load_Main_RH_3_clicked()
{
    line_rh_load_no = 6;
    load_type = ui->BTN_Load_Main_RH_3->text();
    load_MessageBox_RH();
}

void MainWindow::on_BTN_Load_Tag_RH_4_clicked()
{
    line_rh_load_no = 7;
    load_type = ui->BTN_Load_Tag_RH_4->text();
    load_MessageBox_RH();
}

void MainWindow::on_BTN_Load_Main_RH_4_clicked()
{
    line_rh_load_no = 8;
    load_type = ui->BTN_Load_Main_RH_4->text();
    load_MessageBox_RH();
}

void MainWindow::on_BTN_Load_Tag_RH_5_clicked()
{
    line_rh_load_no = 9;
    load_type = ui->BTN_Load_Tag_RH_5->text();
    load_MessageBox_RH();
}

void MainWindow::on_BTN_Load_Main_RH_5_clicked()
{
    line_rh_load_no = 10;
    load_type = ui->BTN_Load_Main_RH_5->text();
    load_MessageBox_RH();
}

void MainWindow::on_BTN_Load_Tag_RH_6_clicked()
{
    line_rh_load_no = 11;
    load_type = ui->BTN_Load_Tag_RH_6->text();
    load_MessageBox_RH();
}

void MainWindow::on_BTN_Load_Main_RH_6_clicked()
{
    line_rh_load_no = 12;
    load_type = ui->BTN_Load_Main_RH_6->text();
    load_MessageBox_RH();
}

void MainWindow::on_BTN_Load_Tag_RH_7_clicked()
{
    line_rh_load_no = 13;
    load_type = ui->BTN_Load_Tag_RH_7->text();
    load_MessageBox_RH();
}

void MainWindow::on_BTN_Load_Main_RH_7_clicked()
{
    line_rh_load_no = 14;
    load_type = ui->BTN_Load_Main_RH_7->text();
    load_MessageBox_RH();
}

void MainWindow::on_BTN_Load_Tag_RH_8_clicked()
{
    line_rh_load_no = 15;
    load_type = ui->BTN_Load_Tag_RH_8->text();
    load_MessageBox_RH();
}

void MainWindow::on_BTN_Load_Main_RH_8_clicked()
{
    line_rh_load_no = 16;
    load_type = ui->BTN_Load_Main_RH_8->text();
    load_MessageBox_RH();
}

void MainWindow::on_BTN_Load_Tag_RH_9_clicked()
{
    line_rh_load_no = 17;
    load_type = ui->BTN_Load_Tag_RH_9->text();
    load_MessageBox_RH();
}

void MainWindow::on_BTN_Load_Main_RH_9_clicked()
{
    line_rh_load_no = 18;
    load_type = ui->BTN_Load_Main_RH_9->text();
    load_MessageBox_RH();
}

void MainWindow::on_BTN_Load_Tag_RH_10_clicked()
{
    line_rh_load_no = 19;
    load_type = ui->BTN_Load_Tag_RH_10->text();
    load_MessageBox_RH();
}

void MainWindow::on_BTN_Load_Main_RH_10_clicked()
{
    line_rh_load_no = 20;
    load_type = ui->BTN_Load_Main_RH_10->text();
    load_MessageBox_RH();
}

void MainWindow::on_BTN_Load_Tag_RH_11_clicked()
{
    line_rh_load_no = 21;
    load_type = ui->BTN_Load_Tag_RH_11->text();
    load_MessageBox_RH();
}

void MainWindow::on_BTN_Load_Main_RH_11_clicked()
{
    line_rh_load_no = 22;
    load_type = ui->BTN_Load_Main_RH_11->text();
    load_MessageBox_RH();
}

void MainWindow::on_BTN_Load_Tag_RH_12_clicked()
{
    line_rh_load_no = 23;
    load_type = ui->BTN_Load_Tag_RH_12->text();
    load_MessageBox_RH();
}

void MainWindow::on_BTN_Load_Main_RH_12_clicked()
{
    line_rh_load_no = 24;
    load_type = ui->BTN_Load_Main_RH_12->text();
    load_MessageBox_RH();
}

void MainWindow::on_BTN_Load_Tag_RH_13_clicked()
{
    line_rh_load_no = 25;
    load_type = ui->BTN_Load_Tag_RH_13->text();
    load_MessageBox_RH();
}

void MainWindow::on_BTN_Load_Main_RH_13_clicked()
{
    line_rh_load_no = 26;
    load_type = ui->BTN_Load_Main_RH_13->text();
    load_MessageBox_RH();
}

void MainWindow::on_BTN_Load_Tag_RH_14_clicked()
{
    line_rh_load_no = 27;
    load_type = ui->BTN_Load_Tag_RH_14->text();
    load_MessageBox_RH();
}

void MainWindow::on_BTN_Load_Main_RH_14_clicked()
{
    line_rh_load_no = 28;
    load_type = ui->BTN_Load_Main_RH_14->text();
    load_MessageBox_RH();
}

void MainWindow::on_BTN_Load_Tag_RH_15_clicked()
{
    line_rh_load_no = 29;
    load_type = ui->BTN_Load_Tag_RH_15->text();
    load_MessageBox_RH();
}

void MainWindow::on_BTN_Load_Main_RH_15_clicked()
{
    line_rh_load_no = 30;
    load_type = ui->BTN_Load_Main_RH_15->text();
    load_MessageBox_RH();
}

void MainWindow::on_BTN_Load_Tag_RH_16_clicked()
{
    line_rh_load_no = 31;
    load_type = ui->BTN_Load_Tag_RH_16->text();
    load_MessageBox_RH();
}

void MainWindow::on_BTN_Load_Main_RH_16_clicked()
{
    line_rh_load_no = 32;
    load_type = ui->BTN_Load_Main_RH_16->text();
    load_MessageBox_RH();
}

void MainWindow::on_BTN_Load_Tag_RH_17_clicked()
{
    line_rh_load_no = 33;
    load_type = ui->BTN_Load_Tag_RH_17->text();
    load_MessageBox_RH();
}

void MainWindow::on_BTN_Load_Main_RH_17_clicked()
{
    line_rh_load_no = 34;
    load_type = ui->BTN_Load_Main_RH_17->text();
    load_MessageBox_RH();
}

void MainWindow::on_BTN_Load_Tag_RH_18_clicked()
{
    line_rh_load_no = 35;
    load_type = ui->BTN_Load_Tag_RH_18->text();
    load_MessageBox_RH();
}

void MainWindow::on_BTN_Load_Main_RH_18_clicked()
{
    line_rh_load_no = 36;
    load_type = ui->BTN_Load_Main_RH_18->text();
    load_MessageBox_RH();
}

void MainWindow::on_BTN_Load_Tag_RH_19_clicked()
{
    line_rh_load_no = 37;
    load_type = ui->BTN_Load_Tag_RH_19->text();
    load_MessageBox_RH();
}

void MainWindow::on_BTN_Load_Main_RH_19_clicked()
{
    line_rh_load_no = 38;
    load_type = ui->BTN_Load_Main_RH_19->text();
    load_MessageBox_RH();
}

void MainWindow::on_BTN_Load_Tag_RH_20_clicked()
{
    line_rh_load_no = 39;
    load_type = ui->BTN_Load_Tag_RH_20->text();
    load_MessageBox_RH();
}

void MainWindow::on_BTN_Load_Main_RH_20_clicked()
{
    line_rh_load_no = 40;
    load_type = ui->BTN_Load_Main_RH_20->text();
    load_MessageBox_RH();
}

void MainWindow::load_MessageBox_LH()
{
    QMessageBox msgBox;
    msgBox.setText(load_type);
    msgBox.setInformativeText("LH 읽기 하시겠습니까?");
    msgBox.setStandardButtons(QMessageBox::Yes | QMessageBox::No);
    msgBox.setDefaultButton(QMessageBox::No);
    qDebug()<<"Show Popup";
    int ret = msgBox.exec();
    switch(ret){
    case QMessageBox::Yes:
        line_load_lh();
        break;
    case QMessageBox::No:
        line_lh_load_no = 0;
        break;
    default:
        line_lh_load_no = 0;
        break;
    }

}

void MainWindow::load_MessageBox_RH()
{
    QMessageBox msgBox;
    msgBox.setText(load_type);
    msgBox.setInformativeText("RH 읽기 하시겠습니까?");
    msgBox.setStandardButtons(QMessageBox::Yes | QMessageBox::No);
    msgBox.setDefaultButton(QMessageBox::No);
    qDebug()<<"Show Popup";
    int ret = msgBox.exec();
    switch(ret){
    case QMessageBox::Yes:
        line_load_rh();
        break;
    case QMessageBox::No:
        line_rh_load_no = 0;
        break;
    default:
        line_rh_load_no = 0;
        break;
    }

}

void MainWindow::line_load_lh()
{
    QString filename;
    filename = QApplication::applicationDirPath() + "/data/" + load_type + ".jct";
    qDebug()<<filename;
    if(filename.isEmpty())
        return;
    QFile file(filename);
    ui->LE_LOAD_LH->setText(filename);
    QString text_chop = ui->LE_LOAD_LH->text();
    text_chop.chop(4);
    ui->LE_LOAD_LH_2->setText(text_chop.section("/", -1));

    if(!file.open(QIODevice::ReadOnly)){
        QMessageBox::warning(this, "파일 로드 실패", file.errorString());
        ui->LE_LOAD_LH->setText("");
        ui->LE_LOAD_LH_2->setText("");
        return;
    }
}

void MainWindow::line_load_rh()
{
    QString filename;
    filename = QApplication::applicationDirPath() + "/data/" + load_type + ".jct";
    qDebug()<<filename;
    if(filename.isEmpty())
        return;
    QFile file(filename);
    ui->LE_LOAD_RH->setText(filename);
    QString text_chop = ui->LE_LOAD_RH->text();
    text_chop.chop(4);
    ui->LE_LOAD_RH_2->setText(text_chop.section("/", -1));

    if(!file.open(QIODevice::ReadOnly)){
        QMessageBox::warning(this, "파일 로드 실패", file.errorString());
        ui->LE_LOAD_RH->setText("");
        ui->LE_LOAD_RH_2->setText("");
        return;
    }
}

void MainWindow::on_RB_GAJUB_clicked()
{
    data_motion = 0;
}

void MainWindow::on_RB_ONEPOINT_WELD_clicked()
{
    data_motion = 8;
}

void MainWindow::on_BTN_mode_LH_clicked()
{
    mode_type = 1; //LH
}

void MainWindow::on_BTN_mode_RH_clicked()
{
    mode_type = 2; //LH
}

void MainWindow::on_TW_10_cellClicked(int row, int column)
{
    ui->LB_B1R2_0->setText(QString().sprintf("%d", row));
    qDebug()<<"on_TW_10_cellClicked:"<<row<<","<<column<<endl;
}

void MainWindow::on_TW_1_cellPressed(int row, int column)
{
    TW_1_cell = 1;
    qDebug()<<"on_TW_1_cellPressed:"<<row<<","<<column<<endl;
}

#define JOG_PART_START {

void MainWindow::on_PB_B1R0_Smooth_clicked()
{
    data_jog_mode = 0;
}

void MainWindow::on_PB_B1R0_Tick_clicked()
{
    data_jog_mode = 1;
}

void MainWindow::on_PB_B1R0_Joint_clicked()
{
    data_jog_type = 0;
    ui->SW_B1R0_C->setCurrentIndex(0);
}

void MainWindow::on_PB_B1R0_Global_clicked()
{
    data_jog_type = 1;
    ui->SW_B1R0_C->setCurrentIndex(1);
}

void MainWindow::on_PB_B1R0_User_clicked()
{
    data_jog_type = 2;
    ui->SW_B1R0_C->setCurrentIndex(2);
}
//============ 조인트 조작 ============
void MainWindow::on_PB_B1R0_Joint_plus_1_pressed()
{
    QString text;
    if(data_jog_mode == 0)text.sprintf("jointman j1 plus");
    else text.sprintf("jointrel j1 -1,-1,%.2f",ui->LE_B1R0_deg->text().toFloat());
    cmdConfirmFlag = false;
    sockCmd.write(text.toStdString().c_str(), text.toStdString().length());
    //J1+
}

void MainWindow::on_PB_B1R0_Joint_plus_1_released()
{
    QString text;
    text.sprintf("jointman j1 zero");
    cmdConfirmFlag = false;
    sockCmd.write(text.toStdString().c_str(), text.toStdString().length());
    //J1+
}

void MainWindow::on_PB_B1R0_Joint_minus_1_pressed()
{
    QString text;
    if(data_jog_mode == 0)text.sprintf("jointman j1 minus");
    else text.sprintf("jointrel j1 -1,-1,-%.2f",ui->LE_B1R0_deg->text().toFloat());
    cmdConfirmFlag = false;
    sockCmd.write(text.toStdString().c_str(), text.toStdString().length());
    //J1-
}

void MainWindow::on_PB_B1R0_Joint_minus_1_released()
{
    QString text;
    text.sprintf("jointman j1 zero");
    cmdConfirmFlag = false;
    sockCmd.write(text.toStdString().c_str(), text.toStdString().length());
    //J1-
}

void MainWindow::on_PB_B1R0_Joint_plus_2_pressed()
{
    QString text;
    if(data_jog_mode == 0)text.sprintf("jointman j2 plus");
    else text.sprintf("jointrel j2 -1,-1,%.2f",ui->LE_B1R0_deg->text().toFloat());
    cmdConfirmFlag = false;
    sockCmd.write(text.toStdString().c_str(), text.toStdString().length());
    //J2+
}

void MainWindow::on_PB_B1R0_Joint_plus_2_released()
{
    QString text;
    text.sprintf("jointman j2 zero");
    cmdConfirmFlag = false;
    sockCmd.write(text.toStdString().c_str(), text.toStdString().length());
    //J2+
}

void MainWindow::on_PB_B1R0_Joint_minus_2_pressed()
{
    QString text;
    if(data_jog_mode == 0)text.sprintf("jointman j2 minus");
    else text.sprintf("jointrel j2 -1,-1,-%.2f",ui->LE_B1R0_deg->text().toFloat());
    cmdConfirmFlag = false;
    sockCmd.write(text.toStdString().c_str(), text.toStdString().length());
    //J2-
}

void MainWindow::on_PB_B1R0_Joint_minus_2_released()
{
    QString text;
    text.sprintf("jointman j2 zero");
    cmdConfirmFlag = false;
    sockCmd.write(text.toStdString().c_str(), text.toStdString().length());
    //J2-
}

void MainWindow::on_PB_B1R0_Joint_plus_3_pressed()
{
    QString text;
    if(data_jog_mode == 0)text.sprintf("jointman j3 plus");
    else text.sprintf("jointrel j3 -1,-1,%.2f",ui->LE_B1R0_deg->text().toFloat());
    cmdConfirmFlag = false;
    sockCmd.write(text.toStdString().c_str(), text.toStdString().length());
    //J3+
}

void MainWindow::on_PB_B1R0_Joint_plus_3_released()
{
    QString text;
    text.sprintf("jointman j3 zero");
    cmdConfirmFlag = false;
    sockCmd.write(text.toStdString().c_str(), text.toStdString().length());
    //J3+
}

void MainWindow::on_PB_B1R0_Joint_minus_3_pressed()
{
    QString text;
    if(data_jog_mode == 0)text.sprintf("jointman j3 minus");
    else text.sprintf("jointrel j3 -1,-1,-%.2f",ui->LE_B1R0_deg->text().toFloat());
    cmdConfirmFlag = false;
    sockCmd.write(text.toStdString().c_str(), text.toStdString().length());
    //J3-
}

void MainWindow::on_PB_B1R0_Joint_minus_3_released()
{
    QString text;
    text.sprintf("jointman j3 zero");
    cmdConfirmFlag = false;
    sockCmd.write(text.toStdString().c_str(), text.toStdString().length());
    //J3-
}

void MainWindow::on_PB_B1R0_Joint_plus_4_pressed()
{
    QString text;
    if(data_jog_mode == 0)text.sprintf("jointman j4 plus");
    else text.sprintf("jointrel j4 -1,-1,%.2f",ui->LE_B1R0_deg->text().toFloat());
    cmdConfirmFlag = false;
    sockCmd.write(text.toStdString().c_str(), text.toStdString().length());
    //J4+
}

void MainWindow::on_PB_B1R0_Joint_plus_4_released()
{
    QString text;
    text.sprintf("jointman j4 zero");
    cmdConfirmFlag = false;
    sockCmd.write(text.toStdString().c_str(), text.toStdString().length());
    //J4+
}

void MainWindow::on_PB_B1R0_Joint_minus_4_pressed()
{
    QString text;
    if(data_jog_mode == 0)text.sprintf("jointman j4 minus");
    else text.sprintf("jointrel j4 -1,-1,-%.2f",ui->LE_B1R0_deg->text().toFloat());
    cmdConfirmFlag = false;
    sockCmd.write(text.toStdString().c_str(), text.toStdString().length());
    //J4-
}

void MainWindow::on_PB_B1R0_Joint_minus_4_released()
{
    QString text;
    text.sprintf("jointman j4 zero");
    cmdConfirmFlag = false;
    sockCmd.write(text.toStdString().c_str(), text.toStdString().length());
    //J4-
}

void MainWindow::on_PB_B1R0_Joint_plus_5_pressed()
{
    QString text;
    if(data_jog_mode == 0)text.sprintf("jointman j5 plus");
    else text.sprintf("jointrel j5 -1,-1,%.2f",ui->LE_B1R0_deg->text().toFloat());
    cmdConfirmFlag = false;
    sockCmd.write(text.toStdString().c_str(), text.toStdString().length());
    //J5+
}

void MainWindow::on_PB_B1R0_Joint_plus_5_released()
{
    QString text;
    text.sprintf("jointman j5 zero");
    cmdConfirmFlag = false;
    sockCmd.write(text.toStdString().c_str(), text.toStdString().length());
    //J5+
}

void MainWindow::on_PB_B1R0_Joint_minus_5_pressed()
{
    QString text;
    if(data_jog_mode == 0)text.sprintf("jointman j5 minus");
    else text.sprintf("jointrel j5 -1,-1,-%.2f",ui->LE_B1R0_deg->text().toFloat());
    cmdConfirmFlag = false;
    sockCmd.write(text.toStdString().c_str(), text.toStdString().length());
    //J5-
}

void MainWindow::on_PB_B1R0_Joint_minus_5_released()
{
    QString text;
    text.sprintf("jointman j5 zero");
    cmdConfirmFlag = false;
    sockCmd.write(text.toStdString().c_str(), text.toStdString().length());
    //J5-
}

void MainWindow::on_PB_B1R0_Joint_plus_6_pressed()
{
    QString text;
    if(data_jog_mode == 0)text.sprintf("jointman j6 plus");
    else text.sprintf("jointrel j6 -1,-1,%.2f",ui->LE_B1R0_deg->text().toFloat());
    cmdConfirmFlag = false;
    sockCmd.write(text.toStdString().c_str(), text.toStdString().length());
    //J6+
}

void MainWindow::on_PB_B1R0_Joint_plus_6_released()
{
    QString text;
    text.sprintf("jointman j6 zero");
    cmdConfirmFlag = false;
    sockCmd.write(text.toStdString().c_str(), text.toStdString().length());
    //J6+
}

void MainWindow::on_PB_B1R0_Joint_minus_6_pressed()
{
    QString text;
    if(data_jog_mode == 0)text.sprintf("jointman j6 minus");
    else text.sprintf("jointrel j6 -1,-1,-%.2f",ui->LE_B1R0_deg->text().toFloat());
    cmdConfirmFlag = false;
    sockCmd.write(text.toStdString().c_str(), text.toStdString().length());
    //J6-
}

void MainWindow::on_PB_B1R0_Joint_minus_6_released()
{
    QString text;
    text.sprintf("jointman j6 zero");
    cmdConfirmFlag = false;
    sockCmd.write(text.toStdString().c_str(), text.toStdString().length());
    //J6-
}
//============ 직교 조작 ============
void MainWindow::on_PB_B1R0_Global_plus_x_pressed()
{
    QString text;
    if(data_jog_mode == 0)text.sprintf("moveman x plus");
    else text.sprintf("moverel x -1,-1,%.2f",ui->LE_B1R0_mm->text().toFloat());
    cmdConfirmFlag = false;
    sockCmd.write(text.toStdString().c_str(), text.toStdString().length());
    //X+
}

void MainWindow::on_PB_B1R0_Global_plus_x_released()
{
    QString text;
    text.sprintf("moveman x zero");
    cmdConfirmFlag = false;
    sockCmd.write(text.toStdString().c_str(), text.toStdString().length());
    //X+
}

void MainWindow::on_PB_B1R0_Global_minus_x_pressed()
{
    QString text;
    if(data_jog_mode == 0)text.sprintf("moveman x minus");
    else text.sprintf("moverel x -1,-1,-%.2f",ui->LE_B1R0_mm->text().toFloat());
    cmdConfirmFlag = false;
    sockCmd.write(text.toStdString().c_str(), text.toStdString().length());
    //X-
}

void MainWindow::on_PB_B1R0_Global_minus_x_released()
{
    QString text;
    text.sprintf("moveman x zero");
    cmdConfirmFlag = false;
    sockCmd.write(text.toStdString().c_str(), text.toStdString().length());
    //X-
}

void MainWindow::on_PB_B1R0_Global_plus_y_pressed()
{
    QString text;
    if(data_jog_mode == 0)text.sprintf("moveman y plus");
    else text.sprintf("moverel y -1,-1,%.2f",ui->LE_B1R0_mm->text().toFloat());
    cmdConfirmFlag = false;
    sockCmd.write(text.toStdString().c_str(), text.toStdString().length());
    //Y+
}

void MainWindow::on_PB_B1R0_Global_plus_y_released()
{
    QString text;
    text.sprintf("moveman y zero");
    cmdConfirmFlag = false;
    sockCmd.write(text.toStdString().c_str(), text.toStdString().length());
    //Y+
}

void MainWindow::on_PB_B1R0_Global_minus_y_pressed()
{
    QString text;
    if(data_jog_mode == 0)text.sprintf("moveman y minus");
    else text.sprintf("moverel y -1,-1,-%.2f",ui->LE_B1R0_mm->text().toFloat());
    cmdConfirmFlag = false;
    sockCmd.write(text.toStdString().c_str(), text.toStdString().length());
    //Y-
}

void MainWindow::on_PB_B1R0_Global_minus_y_released()
{
    QString text;
    text.sprintf("moveman y zero");
    cmdConfirmFlag = false;
    sockCmd.write(text.toStdString().c_str(), text.toStdString().length());
    //Y-
}

void MainWindow::on_PB_B1R0_Global_plus_z_pressed()
{
    QString text;
    if(data_jog_mode == 0)text.sprintf("moveman z plus");
    else text.sprintf("moverel z -1,-1,%.2f",ui->LE_B1R0_mm->text().toFloat());
    cmdConfirmFlag = false;
    sockCmd.write(text.toStdString().c_str(), text.toStdString().length());
    //Z+
}

void MainWindow::on_PB_B1R0_Global_plus_z_released()
{
    QString text;
    text.sprintf("moveman z zero");
    cmdConfirmFlag = false;
    sockCmd.write(text.toStdString().c_str(), text.toStdString().length());
    //Z+
}

void MainWindow::on_PB_B1R0_Global_minus_z_pressed()
{
    QString text;
    if(data_jog_mode == 0)text.sprintf("moveman z minus");
    else text.sprintf("moverel z -1,-1,-%.2f",ui->LE_B1R0_mm->text().toFloat());
    cmdConfirmFlag = false;
    sockCmd.write(text.toStdString().c_str(), text.toStdString().length());
    //Z-
}

void MainWindow::on_PB_B1R0_Global_minus_z_released()
{
    QString text;
    text.sprintf("moveman z zero");
    cmdConfirmFlag = false;
    sockCmd.write(text.toStdString().c_str(), text.toStdString().length());
    //Z-
}

void MainWindow::on_PB_B1R0_Global_plus_rx_pressed()
{
    QString text;
    if(data_jog_mode == 0)text.sprintf("moveman rx plus");
    else text.sprintf("moverel rx -1,-1,%.2f",ui->LE_B1R0_deg->text().toFloat());
    cmdConfirmFlag = false;
    sockCmd.write(text.toStdString().c_str(), text.toStdString().length());
    //RX+
}

void MainWindow::on_PB_B1R0_Global_plus_rx_released()
{
    QString text;
    text.sprintf("moveman rx zero");
    cmdConfirmFlag = false;
    sockCmd.write(text.toStdString().c_str(), text.toStdString().length());
    //RX+
}

void MainWindow::on_PB_B1R0_Global_minus_rx_pressed()
{
    QString text;
    if(data_jog_mode == 0)text.sprintf("moveman rx minus");
    else text.sprintf("moverel rx -1,-1,-%.2f",ui->LE_B1R0_deg->text().toFloat());
    cmdConfirmFlag = false;
    sockCmd.write(text.toStdString().c_str(), text.toStdString().length());
    //RX-
}

void MainWindow::on_PB_B1R0_Global_minus_rx_released()
{
    QString text;
    text.sprintf("moveman rx zero");
    cmdConfirmFlag = false;
    sockCmd.write(text.toStdString().c_str(), text.toStdString().length());
    //RX-
}

void MainWindow::on_PB_B1R0_Global_plus_ry_pressed()
{
    QString text;
    if(data_jog_mode == 0)text.sprintf("moveman ry plus");
    else text.sprintf("moverel ry -1,-1,%.2f",ui->LE_B1R0_deg->text().toFloat());
    cmdConfirmFlag = false;
    sockCmd.write(text.toStdString().c_str(), text.toStdString().length());
    //RY+
}

void MainWindow::on_PB_B1R0_Global_plus_ry_released()
{
    QString text;
    text.sprintf("moveman ry zero");
    cmdConfirmFlag = false;
    sockCmd.write(text.toStdString().c_str(), text.toStdString().length());
    //RY+
}

void MainWindow::on_PB_B1R0_Global_minus_ry_pressed()
{
    QString text;
    if(data_jog_mode == 0)text.sprintf("moveman ry minus");
    else text.sprintf("moverel ry -1,-1,-%.2f",ui->LE_B1R0_deg->text().toFloat());
    cmdConfirmFlag = false;
    sockCmd.write(text.toStdString().c_str(), text.toStdString().length());
    //RY-
}

void MainWindow::on_PB_B1R0_Global_minus_ry_released()
{
    QString text;
    text.sprintf("moveman ry zero");
    cmdConfirmFlag = false;
    sockCmd.write(text.toStdString().c_str(), text.toStdString().length());
    //RY-
}

void MainWindow::on_PB_B1R0_Global_plus_rz_pressed()
{
    QString text;
    if(data_jog_mode == 0)text.sprintf("moveman rz plus");
    else text.sprintf("moverel rz -1,-1,%.2f",ui->LE_B1R0_deg->text().toFloat());
    cmdConfirmFlag = false;
    sockCmd.write(text.toStdString().c_str(), text.toStdString().length());
    //RZ+
}

void MainWindow::on_PB_B1R0_Global_plus_rz_released()
{
    QString text;
    text.sprintf("moveman rz zero");
    cmdConfirmFlag = false;
    sockCmd.write(text.toStdString().c_str(), text.toStdString().length());
    //RZ+
}

void MainWindow::on_PB_B1R0_Global_minus_rz_pressed()
{
    QString text;
    if(data_jog_mode == 0)text.sprintf("moveman rz minus");
    else text.sprintf("moverel rz -1,-1,-%.2f",ui->LE_B1R0_deg->text().toFloat());
    cmdConfirmFlag = false;
    sockCmd.write(text.toStdString().c_str(), text.toStdString().length());
    //RZ-
}

void MainWindow::on_PB_B1R0_Global_minus_rz_released()
{
    QString text;
    text.sprintf("moveman rz zero");
    cmdConfirmFlag = false;
    sockCmd.write(text.toStdString().c_str(), text.toStdString().length());
    //RZ-
}
//============ 유저 조작 ============
void MainWindow::on_PB_B1R0_User_plus_x_pressed()
{
    QString text;
    if(data_jog_mode == 0)text.sprintf("ui_jog_usercoord_smooth(0,1,-1,-1)");
    else text.sprintf("ui_jog_usercoord_tick(0,1,%.2f,%.2f,-1,-1)",ui->LE_B1R0_mm->text().toFloat(),ui->LE_B1R0_deg->text().toFloat());
    cmdConfirmFlag = false;
    sockCmd.write(text.toStdString().c_str(), text.toStdString().length());
    //USERX+
}

void MainWindow::on_PB_B1R0_User_plus_x_released()
{
    QString text;
    text.sprintf("ui_jog_usercoord_release()");
    cmdConfirmFlag = false;
    sockCmd.write(text.toStdString().c_str(), text.toStdString().length());
    //USERX+
}

void MainWindow::on_PB_B1R0_User_minus_x_pressed()
{
    QString text;
    if(data_jog_mode == 0)text.sprintf("ui_jog_usercoord_smooth(0,-1,-1,-1)");
    else text.sprintf("ui_jog_usercoord_tick(0,-1,%.2f,%.2f,-1,-1)",ui->LE_B1R0_mm->text().toFloat(),ui->LE_B1R0_deg->text().toFloat());
    cmdConfirmFlag = false;
    sockCmd.write(text.toStdString().c_str(), text.toStdString().length());
    //USERX-
}

void MainWindow::on_PB_B1R0_User_minus_x_released()
{
    QString text;
    text.sprintf("ui_jog_usercoord_release()");
    cmdConfirmFlag = false;
    sockCmd.write(text.toStdString().c_str(), text.toStdString().length());
    //USERX-
}

void MainWindow::on_PB_B1R0_User_plus_y_pressed()
{
    QString text;
    if(data_jog_mode == 0)text.sprintf("ui_jog_usercoord_smooth(0,2,-1,-1)");
    else text.sprintf("ui_jog_usercoord_tick(0,2,%.2f,%.2f,-1,-1)",ui->LE_B1R0_mm->text().toFloat(),ui->LE_B1R0_deg->text().toFloat());
    cmdConfirmFlag = false;
    sockCmd.write(text.toStdString().c_str(), text.toStdString().length());
    //USERY+
}

void MainWindow::on_PB_B1R0_User_plus_y_released()
{
    QString text;
    text.sprintf("ui_jog_usercoord_release()");
    cmdConfirmFlag = false;
    sockCmd.write(text.toStdString().c_str(), text.toStdString().length());
    //USERY+
}

void MainWindow::on_PB_B1R0_User_minus_y_pressed()
{
    QString text;
    if(data_jog_mode == 0)text.sprintf("ui_jog_usercoord_smooth(0,-2,-1,-1)");
    else text.sprintf("ui_jog_usercoord_tick(0,-2,%.2f,%.2f,-1,-1)",ui->LE_B1R0_mm->text().toFloat(),ui->LE_B1R0_deg->text().toFloat());
    cmdConfirmFlag = false;
    sockCmd.write(text.toStdString().c_str(), text.toStdString().length());
    //USERX+
}

void MainWindow::on_PB_B1R0_User_minus_y_released()
{
    QString text;
    text.sprintf("ui_jog_usercoord_release()");
    cmdConfirmFlag = false;
    sockCmd.write(text.toStdString().c_str(), text.toStdString().length());
    //USERY-
}

void MainWindow::on_PB_B1R0_User_plus_z_pressed()
{
    QString text;
    if(data_jog_mode == 0)text.sprintf("ui_jog_usercoord_smooth(0,3,-1,-1)");
    else text.sprintf("ui_jog_usercoord_tick(0,3,%.2f,%.2f,-1,-1)",ui->LE_B1R0_mm->text().toFloat(),ui->LE_B1R0_deg->text().toFloat());
    cmdConfirmFlag = false;
    sockCmd.write(text.toStdString().c_str(), text.toStdString().length());
    //USERX+
}

void MainWindow::on_PB_B1R0_User_plus_z_released()
{
    QString text;
    text.sprintf("ui_jog_usercoord_release()");
    cmdConfirmFlag = false;
    sockCmd.write(text.toStdString().c_str(), text.toStdString().length());
    //USERZ+
}

void MainWindow::on_PB_B1R0_User_minus_z_pressed()
{
    QString text;
    if(data_jog_mode == 0)text.sprintf("ui_jog_usercoord_smooth(0,-3,-1,-1)");
    else text.sprintf("ui_jog_usercoord_tick(0,-3,%.2f,%.2f,-1,-1)",ui->LE_B1R0_mm->text().toFloat(),ui->LE_B1R0_deg->text().toFloat());
    cmdConfirmFlag = false;
    sockCmd.write(text.toStdString().c_str(), text.toStdString().length());
    //USERX+
}

void MainWindow::on_PB_B1R0_User_minus_z_released()
{
    QString text;
    text.sprintf("ui_jog_usercoord_release()");
    cmdConfirmFlag = false;
    sockCmd.write(text.toStdString().c_str(), text.toStdString().length());
    //USERZ-
}

void MainWindow::on_PB_B1R0_User_plus_rx_pressed()
{
    QString text;
    if(data_jog_mode == 0)text.sprintf("ui_jog_usercoord_smooth(0,4,-1,-1)");
    else text.sprintf("ui_jog_usercoord_tick(0,4,%.2f,%.2f,-1,-1)",ui->LE_B1R0_mm->text().toFloat(),ui->LE_B1R0_deg->text().toFloat());
    cmdConfirmFlag = false;
    sockCmd.write(text.toStdString().c_str(), text.toStdString().length());
    //USERX+
}

void MainWindow::on_PB_B1R0_User_plus_rx_released()
{
    QString text;
    text.sprintf("ui_jog_usercoord_release()");
    cmdConfirmFlag = false;
    sockCmd.write(text.toStdString().c_str(), text.toStdString().length());
    //USERRX+
}

void MainWindow::on_PB_B1R0_User_minus_rx_pressed()
{
    QString text;
    if(data_jog_mode == 0)text.sprintf("ui_jog_usercoord_smooth(0,-4,-1,-1)");
    else text.sprintf("ui_jog_usercoord_tick(0,-4,%.2f,%.2f,-1,-1)",ui->LE_B1R0_mm->text().toFloat(),ui->LE_B1R0_deg->text().toFloat());
    cmdConfirmFlag = false;
    sockCmd.write(text.toStdString().c_str(), text.toStdString().length());
    //USERX+
}

void MainWindow::on_PB_B1R0_User_minus_rx_released()
{
    QString text;
    text.sprintf("ui_jog_usercoord_release()");
    cmdConfirmFlag = false;
    sockCmd.write(text.toStdString().c_str(), text.toStdString().length());
    //USERRX-
}

void MainWindow::on_PB_B1R0_User_plus_ry_pressed()
{
    QString text;
    if(data_jog_mode == 0)text.sprintf("ui_jog_usercoord_smooth(0,5,-1,-1)");
    else text.sprintf("ui_jog_usercoord_tick(0,5,%.2f,%.2f,-1,-1)",ui->LE_B1R0_mm->text().toFloat(),ui->LE_B1R0_deg->text().toFloat());
    cmdConfirmFlag = false;
    sockCmd.write(text.toStdString().c_str(), text.toStdString().length());
    //USERX+
}

void MainWindow::on_PB_B1R0_User_plus_ry_released()
{
    QString text;
    text.sprintf("ui_jog_usercoord_release()");
    cmdConfirmFlag = false;
    sockCmd.write(text.toStdString().c_str(), text.toStdString().length());
    //USERRY+
}

void MainWindow::on_PB_B1R0_User_minus_ry_pressed()
{
    QString text;
    if(data_jog_mode == 0)text.sprintf("ui_jog_usercoord_smooth(0,-5,-1,-1)");
    else text.sprintf("ui_jog_usercoord_tick(0,-5,%.2f,%.2f,-1,-1)",ui->LE_B1R0_mm->text().toFloat(),ui->LE_B1R0_deg->text().toFloat());
    cmdConfirmFlag = false;
    sockCmd.write(text.toStdString().c_str(), text.toStdString().length());
    //USERX+
}

void MainWindow::on_PB_B1R0_User_minus_ry_released()
{
    QString text;
    text.sprintf("ui_jog_usercoord_release()");
    cmdConfirmFlag = false;
    sockCmd.write(text.toStdString().c_str(), text.toStdString().length());
    //USERRY-
}

void MainWindow::on_PB_B1R0_User_plus_rz_pressed()
{
    QString text;
    if(data_jog_mode == 0)text.sprintf("ui_jog_usercoord_smooth(0,6,-1,-1)");
    else text.sprintf("ui_jog_usercoord_tick(0,6,%.2f,%.2f,-1,-1)",ui->LE_B1R0_mm->text().toFloat(),ui->LE_B1R0_deg->text().toFloat());
    cmdConfirmFlag = false;
    sockCmd.write(text.toStdString().c_str(), text.toStdString().length());
    //USERX+
}

void MainWindow::on_PB_B1R0_User_plus_rz_released()
{
    QString text;
    text.sprintf("ui_jog_usercoord_release()");
    cmdConfirmFlag = false;
    sockCmd.write(text.toStdString().c_str(), text.toStdString().length());
    //USERRZ+
}

void MainWindow::on_PB_B1R0_User_minus_rz_pressed()
{
    QString text;
    if(data_jog_mode == 0)text.sprintf("ui_jog_usercoord_smooth(0,-6,-1,-1)");
    else text.sprintf("ui_jog_usercoord_tick(0,-6,%.2f,%.2f,-1,-1)",ui->LE_B1R0_mm->text().toFloat(),ui->LE_B1R0_deg->text().toFloat());
    cmdConfirmFlag = false;
    sockCmd.write(text.toStdString().c_str(), text.toStdString().length());
    //USERX+
}

void MainWindow::on_PB_B1R0_User_minus_rz_released()
{
    QString text;
    text.sprintf("ui_jog_usercoord_release()");
    cmdConfirmFlag = false;
    sockCmd.write(text.toStdString().c_str(), text.toStdString().length());
    //USERRZ-
}
#define JOG_PART_END }

// ===========================================================
void MainWindow::D0C2R1_key_view()
{
    ui->LE_D0C2R1_key->setText("");
    ui->SW_D_0_C_2_R->setCurrentIndex(1);
    switch (data_D0C2R1_key_view) {
    case 1:

        break;
    default:
        break;
    }
}

void MainWindow::D0C2R1_key_clicked_number(QString number)
{
    D0C2R1_input += number;
    ui->LE_D0C2R1_key->setText(D0C2R1_input);
}

void MainWindow::on_PB_D0C2R1_key_0_clicked(){ D0C2R1_key_clicked_number("0"); }
void MainWindow::on_PB_D0C2R1_key_1_clicked(){ D0C2R1_key_clicked_number("1"); }
void MainWindow::on_PB_D0C2R1_key_2_clicked(){ D0C2R1_key_clicked_number("2"); }
void MainWindow::on_PB_D0C2R1_key_3_clicked(){ D0C2R1_key_clicked_number("3"); }
void MainWindow::on_PB_D0C2R1_key_4_clicked(){ D0C2R1_key_clicked_number("4"); }
void MainWindow::on_PB_D0C2R1_key_5_clicked(){ D0C2R1_key_clicked_number("5"); }
void MainWindow::on_PB_D0C2R1_key_6_clicked(){ D0C2R1_key_clicked_number("6"); }
void MainWindow::on_PB_D0C2R1_key_7_clicked(){ D0C2R1_key_clicked_number("7"); }
void MainWindow::on_PB_D0C2R1_key_8_clicked(){ D0C2R1_key_clicked_number("8"); }
void MainWindow::on_PB_D0C2R1_key_9_clicked(){ D0C2R1_key_clicked_number("9"); }
void MainWindow::on_PB_D0C2R1_key_minus_clicked(){ D0C2R1_key_clicked_number("-"); }

void MainWindow::on_PB_D0C2R1_key_back_clicked()
{
    //! 현재입력된 값의 글자수가 1보다 클때
    if(D0C2R1_input.length() > 1) {
        //! 가장 마지막값 1개를 지움
        D0C2R1_input.resize(D0C2R1_input.length()-1);
        ui->LE_D0C2R1_key->setText(D0C2R1_input);
    } else {
        D0C2R1_input = "";
        ui->LE_D0C2R1_key->setText(D0C2R1_input);
    }
}

void MainWindow::on_PB_D0C2R1_key_dot_clicked()
{
    //! 현재입력값에 '.' 이 포함되어 있다면
    if(D0C2R1_input.contains(".")) {
        D0C2R1_key_clicked_number(".");
        on_PB_D0C2R1_key_back_clicked();
    } else {
        D0C2R1_key_clicked_number(".");
    }
}

void MainWindow::on_PB_D0C2R1_key_enter_clicked()
{
    switch (data_D0C2R1_key_view) {
    case 1:
        break;
    default:
        break;
    }
    data_D0C2R1_key_view = 0;
    ui->SW_D_0_C_2_R->setCurrentIndex(0);
}

void MainWindow::on_PB_D0C2R1_key_exit_clicked()
{
   data_D0C2R1_key_view = 0;
   ui->SW_D_0_C_2_R->setCurrentIndex(0);
}

void MainWindow::on_PB_D_0_Use_Analogweld_clicked()
{
    data_weld_type = 1;
}

void MainWindow::on_PB_D_0_Unuse_Analogweld_clicked()
{
    data_weld_type = 0;
}

void MainWindow::on_PB_D_0_Use_Digitalweld_clicked()
{
    data_weld_type = 2;
}

void MainWindow::on_PB_D_0_Unuse_Digitalweld_clicked()
{
    data_weld_type = 0;
}

void MainWindow::on_PB_D_0_Use_Froniusweld_clicked()
{
    data_weld_type = 3;
}

void MainWindow::on_PB_D_0_Unuse_Froniusweld_clicked()
{
    data_weld_type = 0;
}

void MainWindow::on_PB_D_0_Use_Esabweld_clicked()
{
    data_weld_type = 4;
}

void MainWindow::on_PB_D_0_Unuse_Esabweld_clicked()
{
    data_weld_type = 0;
}

void MainWindow::on_PB_D_0_Use_Esabweld_Separated_clicked()
{
    data_weld_type = 5;
}

void MainWindow::on_PB_D_0_Unuse_Esabweld_Separated_clicked()
{
    data_weld_type = 0;
}

void MainWindow::on_BTN_EXIT_2_clicked()
{
    modify_mode = 0;
    data_start = 0;
    REFRESH_clicked();
    ui->SW_A->setCurrentIndex(1);
}

void MainWindow::on_BTN_MODE_BASE_2_clicked()
{
    mode_type = 0;
    ui->SW_A->setCurrentIndex(2);
    ui->SW_B->setCurrentIndex(0);
    if(ui->LE_D_0_data_0->text()=="0" || ui->LE_D_0_data_0->text()=="2"){
    ui->SW_data_A->setCurrentIndex(0);
    }
    if(ui->LE_D_0_data_0->text()=="1"){
    ui->SW_data_A->setCurrentIndex(1);
    }
    if(ui->LE_D_0_data_0->text()=="3"){
    ui->SW_data_A->setCurrentIndex(1);
    }
    ui->SW_B_0_L->setCurrentIndex(0);
    ui->SW_B_0_R->setCurrentIndex(0);
}

void MainWindow::on_BTN_MODE_HOME_2_clicked()
{
    ui->SW_A->setCurrentIndex(2);
    ui->SW_B->setCurrentIndex(4);
    ui->SW_B_4_R->setCurrentIndex(0);
    update_TW_Home();
}

void MainWindow::on_BTN_MODE_JIG_1_clicked()
{
    mode_type = 11;
    ui->SW_A->setCurrentIndex(2);
    ui->SW_B->setCurrentIndex(0);
    if(ui->LE_D_0_data_0->text()=="0" || ui->LE_D_0_data_0->text()=="2"){
    ui->SW_data_A->setCurrentIndex(0);
    }
    if(ui->LE_D_0_data_0->text()=="1"){
    ui->SW_data_A->setCurrentIndex(1);
    }
    if(ui->LE_D_0_data_0->text()=="3"){
    ui->SW_data_A->setCurrentIndex(1);
    }
    ui->SW_B_0_L->setCurrentIndex(0);
    ui->SW_B_0_R->setCurrentIndex(0);
}

void MainWindow::on_BTN_MODE_JIG_2_clicked()
{
    mode_type = 12;
    ui->SW_A->setCurrentIndex(2);
    ui->SW_B->setCurrentIndex(0);
    if(ui->LE_D_0_data_0->text()=="0" || ui->LE_D_0_data_0->text()=="2"){
    ui->SW_data_A->setCurrentIndex(0);
    }
    if(ui->LE_D_0_data_0->text()=="1"){
    ui->SW_data_A->setCurrentIndex(1);
    }
    if(ui->LE_D_0_data_0->text()=="3"){
    ui->SW_data_A->setCurrentIndex(1);
    }
    ui->SW_B_0_L->setCurrentIndex(0);
    ui->SW_B_0_R->setCurrentIndex(0);
}

void MainWindow::on_BTN_MODE_JIG_3_clicked()
{
    mode_type = 13;
    ui->SW_A->setCurrentIndex(2);
    ui->SW_B->setCurrentIndex(0);
    if(ui->LE_D_0_data_0->text()=="0" || ui->LE_D_0_data_0->text()=="2"){
    ui->SW_data_A->setCurrentIndex(0);
    }
    if(ui->LE_D_0_data_0->text()=="1"){
    ui->SW_data_A->setCurrentIndex(1);
    }
    if(ui->LE_D_0_data_0->text()=="3"){
    ui->SW_data_A->setCurrentIndex(1);
    }
    ui->SW_B_0_L->setCurrentIndex(0);
    ui->SW_B_0_R->setCurrentIndex(0);
}

void MainWindow::on_PB_A3C4_back_clicked()
{
    mode_type = 0;
    load_file_no = 0;
    ui->SW_A->setCurrentIndex(3);
    ui->SW_C->setCurrentIndex(1);
}

void MainWindow::on_BTN_Load_Line_OK_2_clicked()
{
    if(ui->LE_LOAD_JIG1_1->text()!="" && ui->LE_LOAD_JIG2_1->text()!="" && ui->LE_LOAD_JIG3_1->text()!=""){
        ui->SW_A->setCurrentIndex(3);
        ui->SW_C->setCurrentIndex(5);
    }
    if(ui->LE_LOAD_JIG1_1->text()=="" || ui->LE_LOAD_JIG2_1->text()=="" || ui->LE_LOAD_JIG3_1->text()==""){
        QMessageBox::warning(this,"파일 읽기 실패!!","파일을 선택 해주세요.");
    }
}

void MainWindow::on_PB_A3C4_0_clicked()
{
    ui->SW_LOAD_JIG->setCurrentIndex(0);
}

void MainWindow::on_PB_A3C4_1_clicked()
{
    ui->SW_LOAD_JIG->setCurrentIndex(1);
}

void MainWindow::on_BTN_Save_JIG_1_No_1_clicked()
{
    save_file_no = 1;
    save_type = ui->BTN_Save_JIG_1_No_1->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_JIG_1_No_2_clicked()
{
    save_file_no = 2;
    save_type = ui->BTN_Save_JIG_1_No_2->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_JIG_1_No_3_clicked()
{
    save_file_no = 3;
    save_type = ui->BTN_Save_JIG_1_No_3->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_JIG_1_No_4_clicked()
{
    save_file_no = 4;
    save_type = ui->BTN_Save_JIG_1_No_4->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_JIG_1_No_5_clicked()
{
    save_file_no = 5;
    save_type = ui->BTN_Save_JIG_1_No_5->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_JIG_1_No_6_clicked()
{
    save_file_no = 6;
    save_type = ui->BTN_Save_JIG_1_No_6->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_JIG_1_No_7_clicked()
{
    save_file_no = 7;
    save_type = ui->BTN_Save_JIG_1_No_7->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_JIG_1_No_8_clicked()
{
    save_file_no = 8;
    save_type = ui->BTN_Save_JIG_1_No_8->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_JIG_1_No_9_clicked()
{
    save_file_no = 9;
    save_type = ui->BTN_Save_JIG_1_No_9->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_JIG_1_No_10_clicked()
{
    save_file_no = 10;
    save_type = ui->BTN_Save_JIG_1_No_10->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_JIG_1_No_11_clicked()
{
    save_file_no = 11;
    save_type = ui->BTN_Save_JIG_1_No_11->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_JIG_1_No_12_clicked()
{
    save_file_no = 12;
    save_type = ui->BTN_Save_JIG_1_No_12->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_JIG_1_No_13_clicked()
{
    save_file_no = 13;
    save_type = ui->BTN_Save_JIG_1_No_13->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_JIG_1_No_14_clicked()
{
    save_file_no = 14;
    save_type = ui->BTN_Save_JIG_1_No_14->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_JIG_1_No_15_clicked()
{
    save_file_no = 15;
    save_type = ui->BTN_Save_JIG_1_No_15->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_JIG_1_No_16_clicked()
{
    save_file_no = 16;
    save_type = ui->BTN_Save_JIG_1_No_16->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_JIG_1_No_17_clicked()
{
    save_file_no = 17;
    save_type = ui->BTN_Save_JIG_1_No_17->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_JIG_1_No_18_clicked()
{
    save_file_no = 18;
    save_type = ui->BTN_Save_JIG_1_No_18->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_JIG_1_No_19_clicked()
{
    save_file_no = 19;
    save_type = ui->BTN_Save_JIG_1_No_19->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_JIG_1_No_20_clicked()
{
    save_file_no = 20;
    save_type = ui->BTN_Save_JIG_1_No_20->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_JIG_1_No_21_clicked()
{
    save_file_no = 21;
    save_type = ui->BTN_Save_JIG_1_No_21->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_JIG_1_No_22_clicked()
{
    save_file_no = 22;
    save_type = ui->BTN_Save_JIG_1_No_22->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_JIG_1_No_23_clicked()
{
    save_file_no = 23;
    save_type = ui->BTN_Save_JIG_1_No_23->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_JIG_1_No_24_clicked()
{
    save_file_no = 24;
    save_type = ui->BTN_Save_JIG_1_No_24->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_JIG_1_No_25_clicked()
{
    save_file_no = 25;
    save_type = ui->BTN_Save_JIG_1_No_25->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_JIG_1_No_26_clicked()
{
    save_file_no = 26;
    save_type = ui->BTN_Save_JIG_1_No_26->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_JIG_1_No_27_clicked()
{
    save_file_no = 27;
    save_type = ui->BTN_Save_JIG_1_No_27->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_JIG_1_No_28_clicked()
{
    save_file_no = 28;
    save_type = ui->BTN_Save_JIG_1_No_28->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_JIG_1_No_29_clicked()
{
    save_file_no = 29;
    save_type = ui->BTN_Save_JIG_1_No_29->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_JIG_1_No_30_clicked()
{
    save_file_no = 30;
    save_type = ui->BTN_Save_JIG_1_No_30->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_JIG_1_No_31_clicked()
{
    save_file_no = 31;
    save_type = ui->BTN_Save_JIG_1_No_31->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_JIG_1_No_32_clicked()
{
    save_file_no = 32;
    save_type = ui->BTN_Save_JIG_1_No_32->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_JIG_1_No_33_clicked()
{
    save_file_no = 33;
    save_type = ui->BTN_Save_JIG_1_No_33->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_JIG_1_No_34_clicked()
{
    save_file_no = 34;
    save_type = ui->BTN_Save_JIG_1_No_34->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_JIG_1_No_35_clicked()
{
    save_file_no = 35;
    save_type = ui->BTN_Save_JIG_1_No_35->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_JIG_1_No_36_clicked()
{
    save_file_no = 36;
    save_type = ui->BTN_Save_JIG_1_No_36->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_JIG_1_No_37_clicked()
{
    save_file_no = 37;
    save_type = ui->BTN_Save_JIG_1_No_37->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_JIG_1_No_38_clicked()
{
    save_file_no = 38;
    save_type = ui->BTN_Save_JIG_1_No_38->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_JIG_1_No_39_clicked()
{
    save_file_no = 39;
    save_type = ui->BTN_Save_JIG_1_No_39->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_JIG_1_No_40_clicked()
{
    save_file_no = 40;
    save_type = ui->BTN_Save_JIG_1_No_40->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_JIG_2_No_1_clicked()
{
    save_file_no = 101;
    save_type = ui->BTN_Save_JIG_2_No_1->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_JIG_2_No_2_clicked()
{
    save_file_no = 102;
    save_type = ui->BTN_Save_JIG_2_No_2->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_JIG_2_No_3_clicked()
{
    save_file_no = 103;
    save_type = ui->BTN_Save_JIG_2_No_3->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_JIG_2_No_4_clicked()
{
    save_file_no = 104;
    save_type = ui->BTN_Save_JIG_2_No_4->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_JIG_2_No_5_clicked()
{
    save_file_no = 105;
    save_type = ui->BTN_Save_JIG_2_No_5->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_JIG_2_No_6_clicked()
{
    save_file_no = 106;
    save_type = ui->BTN_Save_JIG_2_No_6->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_JIG_2_No_7_clicked()
{
    save_file_no = 107;
    save_type = ui->BTN_Save_JIG_2_No_7->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_JIG_2_No_8_clicked()
{
    save_file_no = 108;
    save_type = ui->BTN_Save_JIG_2_No_8->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_JIG_2_No_9_clicked()
{
    save_file_no = 109;
    save_type = ui->BTN_Save_JIG_2_No_9->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_JIG_2_No_10_clicked()
{
    save_file_no = 110;
    save_type = ui->BTN_Save_JIG_2_No_10->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_JIG_2_No_11_clicked()
{
    save_file_no = 111;
    save_type = ui->BTN_Save_JIG_2_No_11->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_JIG_2_No_12_clicked()
{
    save_file_no = 112;
    save_type = ui->BTN_Save_JIG_2_No_12->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_JIG_2_No_13_clicked()
{
    save_file_no = 113;
    save_type = ui->BTN_Save_JIG_2_No_13->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_JIG_2_No_14_clicked()
{
    save_file_no = 114;
    save_type = ui->BTN_Save_JIG_2_No_14->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_JIG_2_No_15_clicked()
{
    save_file_no = 115;
    save_type = ui->BTN_Save_JIG_2_No_15->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_JIG_2_No_16_clicked()
{
    save_file_no = 116;
    save_type = ui->BTN_Save_JIG_2_No_16->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_JIG_2_No_17_clicked()
{
    save_file_no = 117;
    save_type = ui->BTN_Save_JIG_2_No_17->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_JIG_2_No_18_clicked()
{
    save_file_no = 118;
    save_type = ui->BTN_Save_JIG_2_No_18->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_JIG_2_No_19_clicked()
{
    save_file_no = 119;
    save_type = ui->BTN_Save_JIG_2_No_19->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_JIG_2_No_20_clicked()
{
    save_file_no = 120;
    save_type = ui->BTN_Save_JIG_2_No_20->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_JIG_2_No_21_clicked()
{
    save_file_no = 121;
    save_type = ui->BTN_Save_JIG_2_No_21->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_JIG_2_No_22_clicked()
{
    save_file_no = 122;
    save_type = ui->BTN_Save_JIG_2_No_22->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_JIG_2_No_23_clicked()
{
    save_file_no = 123;
    save_type = ui->BTN_Save_JIG_2_No_23->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_JIG_2_No_24_clicked()
{
    save_file_no = 124;
    save_type = ui->BTN_Save_JIG_2_No_24->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_JIG_2_No_25_clicked()
{
    save_file_no = 125;
    save_type = ui->BTN_Save_JIG_2_No_25->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_JIG_2_No_26_clicked()
{
    save_file_no = 126;
    save_type = ui->BTN_Save_JIG_2_No_26->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_JIG_2_No_27_clicked()
{
    save_file_no = 127;
    save_type = ui->BTN_Save_JIG_2_No_27->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_JIG_2_No_28_clicked()
{
    save_file_no = 128;
    save_type = ui->BTN_Save_JIG_2_No_28->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_JIG_2_No_29_clicked()
{
    save_file_no = 129;
    save_type = ui->BTN_Save_JIG_2_No_29->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_JIG_2_No_30_clicked()
{
    save_file_no = 130;
    save_type = ui->BTN_Save_JIG_2_No_30->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_JIG_2_No_31_clicked()
{
    save_file_no = 131;
    save_type = ui->BTN_Save_JIG_2_No_31->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_JIG_2_No_32_clicked()
{
    save_file_no = 132;
    save_type = ui->BTN_Save_JIG_2_No_32->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_JIG_2_No_33_clicked()
{
    save_file_no = 133;
    save_type = ui->BTN_Save_JIG_2_No_33->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_JIG_2_No_34_clicked()
{
    save_file_no = 134;
    save_type = ui->BTN_Save_JIG_2_No_34->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_JIG_2_No_35_clicked()
{
    save_file_no = 135;
    save_type = ui->BTN_Save_JIG_2_No_35->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_JIG_2_No_36_clicked()
{
    save_file_no = 136;
    save_type = ui->BTN_Save_JIG_2_No_36->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_JIG_2_No_37_clicked()
{
    save_file_no = 137;
    save_type = ui->BTN_Save_JIG_2_No_37->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_JIG_2_No_38_clicked()
{
    save_file_no = 138;
    save_type = ui->BTN_Save_JIG_2_No_38->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_JIG_2_No_39_clicked()
{
    save_file_no = 139;
    save_type = ui->BTN_Save_JIG_2_No_39->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_JIG_2_No_40_clicked()
{
    save_file_no = 140;
    save_type = ui->BTN_Save_JIG_2_No_40->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_JIG_3_No_1_clicked()
{
    save_file_no = 201;
    save_type = ui->BTN_Save_JIG_3_No_1->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_JIG_3_No_2_clicked()
{
    save_file_no = 202;
    save_type = ui->BTN_Save_JIG_3_No_2->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_JIG_3_No_3_clicked()
{
    save_file_no = 203;
    save_type = ui->BTN_Save_JIG_3_No_3->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_JIG_3_No_4_clicked()
{
    save_file_no = 204;
    save_type = ui->BTN_Save_JIG_3_No_4->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_JIG_3_No_5_clicked()
{
    save_file_no = 205;
    save_type = ui->BTN_Save_JIG_3_No_5->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_JIG_3_No_6_clicked()
{
    save_file_no = 206;
    save_type = ui->BTN_Save_JIG_3_No_6->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_JIG_3_No_7_clicked()
{
    save_file_no = 207;
    save_type = ui->BTN_Save_JIG_3_No_7->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_JIG_3_No_8_clicked()
{
    save_file_no = 208;
    save_type = ui->BTN_Save_JIG_3_No_8->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_JIG_3_No_9_clicked()
{
    save_file_no = 209;
    save_type = ui->BTN_Save_JIG_3_No_9->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_JIG_3_No_10_clicked()
{
    save_file_no = 210;
    save_type = ui->BTN_Save_JIG_3_No_10->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_JIG_3_No_11_clicked()
{
    save_file_no = 211;
    save_type = ui->BTN_Save_JIG_3_No_11->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_JIG_3_No_12_clicked()
{
    save_file_no = 212;
    save_type = ui->BTN_Save_JIG_3_No_12->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_JIG_3_No_13_clicked()
{
    save_file_no = 213;
    save_type = ui->BTN_Save_JIG_3_No_13->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_JIG_3_No_14_clicked()
{
    save_file_no = 214;
    save_type = ui->BTN_Save_JIG_3_No_14->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_JIG_3_No_15_clicked()
{
    save_file_no = 215;
    save_type = ui->BTN_Save_JIG_3_No_15->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_JIG_3_No_16_clicked()
{
    save_file_no = 216;
    save_type = ui->BTN_Save_JIG_3_No_16->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_JIG_3_No_17_clicked()
{
    save_file_no = 217;
    save_type = ui->BTN_Save_JIG_3_No_17->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_JIG_3_No_18_clicked()
{
    save_file_no = 218;
    save_type = ui->BTN_Save_JIG_3_No_18->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_JIG_3_No_19_clicked()
{
    save_file_no = 219;
    save_type = ui->BTN_Save_JIG_3_No_19->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_JIG_3_No_20_clicked()
{
    save_file_no = 220;
    save_type = ui->BTN_Save_JIG_3_No_20->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_JIG_3_No_21_clicked()
{
    save_file_no = 221;
    save_type = ui->BTN_Save_JIG_3_No_21->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_JIG_3_No_22_clicked()
{
    save_file_no = 222;
    save_type = ui->BTN_Save_JIG_3_No_22->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_JIG_3_No_23_clicked()
{
    save_file_no = 223;
    save_type = ui->BTN_Save_JIG_3_No_23->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_JIG_3_No_24_clicked()
{
    save_file_no = 224;
    save_type = ui->BTN_Save_JIG_3_No_24->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_JIG_3_No_25_clicked()
{
    save_file_no = 225;
    save_type = ui->BTN_Save_JIG_3_No_25->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_JIG_3_No_26_clicked()
{
    save_file_no = 226;
    save_type = ui->BTN_Save_JIG_3_No_26->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_JIG_3_No_27_clicked()
{
    save_file_no = 227;
    save_type = ui->BTN_Save_JIG_3_No_27->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_JIG_3_No_28_clicked()
{
    save_file_no = 228;
    save_type = ui->BTN_Save_JIG_3_No_28->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_JIG_3_No_29_clicked()
{
    save_file_no = 229;
    save_type = ui->BTN_Save_JIG_3_No_29->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_JIG_3_No_30_clicked()
{
    save_file_no = 230;
    save_type = ui->BTN_Save_JIG_3_No_30->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_JIG_3_No_31_clicked()
{
    save_file_no = 231;
    save_type = ui->BTN_Save_JIG_3_No_31->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_JIG_3_No_32_clicked()
{
    save_file_no = 232;
    save_type = ui->BTN_Save_JIG_3_No_32->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_JIG_3_No_33_clicked()
{
    save_file_no = 233;
    save_type = ui->BTN_Save_JIG_3_No_33->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_JIG_3_No_34_clicked()
{
    save_file_no = 234;
    save_type = ui->BTN_Save_JIG_3_No_34->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_JIG_3_No_35_clicked()
{
    save_file_no = 235;
    save_type = ui->BTN_Save_JIG_3_No_35->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_JIG_3_No_36_clicked()
{
    save_file_no = 236;
    save_type = ui->BTN_Save_JIG_3_No_36->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_JIG_3_No_37_clicked()
{
    save_file_no = 237;
    save_type = ui->BTN_Save_JIG_3_No_37->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_JIG_3_No_38_clicked()
{
    save_file_no = 238;
    save_type = ui->BTN_Save_JIG_3_No_38->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_JIG_3_No_39_clicked()
{
    save_file_no = 239;
    save_type = ui->BTN_Save_JIG_3_No_39->text();
    save_MessageBox();
}

void MainWindow::on_BTN_Save_JIG_3_No_40_clicked()
{
    save_file_no = 240;
    save_type = ui->BTN_Save_JIG_3_No_40->text();
    save_MessageBox();
}

void MainWindow::on_PB_B2C4_0_clicked()
{
    ui->SW_B_2_C->setCurrentIndex(4);
}

void MainWindow::on_PB_B2C4_1_clicked()
{
    ui->SW_B_2_C->setCurrentIndex(5);
}

void MainWindow::on_PB_B2C5_0_clicked()
{
    ui->SW_B_2_C->setCurrentIndex(4);
}

void MainWindow::on_PB_B2C5_1_clicked()
{
    ui->SW_B_2_C->setCurrentIndex(5);
}

void MainWindow::on_PB_B2C4_back_clicked()
{
    ui->SW_B_2_C->setCurrentIndex(0);
    save_file_no = 0;
}

void MainWindow::on_PB_B2C5_back_clicked()
{
    ui->SW_B_2_C->setCurrentIndex(0);
    save_file_no = 0;
}
void MainWindow::load_MessageBox_JIG1()
{
    QMessageBox msgBox;
    msgBox.setText(load_type);
    msgBox.setInformativeText("JIG 1 읽기 하시겠습니까?");
    msgBox.setStandardButtons(QMessageBox::Yes | QMessageBox::No);
    msgBox.setDefaultButton(QMessageBox::No);
    qDebug()<<"Show Popup";
    int ret = msgBox.exec();
    switch(ret){
    case QMessageBox::Yes:
        line_load_JIG1();
        break;
    case QMessageBox::No:
        line_JIG1_load_no = 0;
        break;
    default:
        line_JIG1_load_no = 0;
        break;
    }
}
void MainWindow::load_MessageBox_JIG2()
{
    QMessageBox msgBox;
    msgBox.setText(load_type);
    msgBox.setInformativeText("JIG 2 읽기 하시겠습니까?");
    msgBox.setStandardButtons(QMessageBox::Yes | QMessageBox::No);
    msgBox.setDefaultButton(QMessageBox::No);
    qDebug()<<"Show Popup";
    int ret = msgBox.exec();
    switch(ret){
    case QMessageBox::Yes:
        line_load_JIG2();
        break;
    case QMessageBox::No:
        line_JIG2_load_no = 0;
        break;
    default:
        line_JIG2_load_no = 0;
        break;
    }
}
void MainWindow::load_MessageBox_JIG3()
{
    QMessageBox msgBox;
    msgBox.setText(load_type);
    msgBox.setInformativeText("JIG 3 읽기 하시겠습니까?");
    msgBox.setStandardButtons(QMessageBox::Yes | QMessageBox::No);
    msgBox.setDefaultButton(QMessageBox::No);
    qDebug()<<"Show Popup";
    int ret = msgBox.exec();
    switch(ret){
    case QMessageBox::Yes:
        line_load_JIG3();
        break;
    case QMessageBox::No:
        line_JIG3_load_no = 0;
        break;
    default:
        line_JIG3_load_no = 0;
        break;
    }
}

void MainWindow::line_load_JIG1()
{
    QString filename;
    filename = QApplication::applicationDirPath() + "/data/" + load_type + ".jct";
    qDebug()<<filename;
    if(filename.isEmpty())
        return;
    QFile file(filename);
    ui->LE_LOAD_JIG1_1->setText(filename);
    QString text_chop = ui->LE_LOAD_JIG1_1->text();
    text_chop.chop(4);
    ui->LE_LOAD_JIG1_2->setText(text_chop.section("/", -1));

    if(!file.open(QIODevice::ReadOnly)){
        QMessageBox::warning(this, "파일 로드 실패", file.errorString());
        ui->LE_LOAD_JIG1_1->setText("");
        ui->LE_LOAD_JIG1_2->setText("");
        return;
    }
}

void MainWindow::line_load_JIG2()
{
    QString filename;
    filename = QApplication::applicationDirPath() + "/data/" + load_type + ".jct";
    qDebug()<<filename;
    if(filename.isEmpty())
        return;
    QFile file(filename);
    ui->LE_LOAD_JIG2_1->setText(filename);
    QString text_chop = ui->LE_LOAD_JIG2_1->text();
    text_chop.chop(4);
    ui->LE_LOAD_JIG2_2->setText(text_chop.section("/", -1));

    if(!file.open(QIODevice::ReadOnly)){
        QMessageBox::warning(this, "파일 로드 실패", file.errorString());
        ui->LE_LOAD_JIG2_1->setText("");
        ui->LE_LOAD_JIG2_2->setText("");
        return;
    }
}

void MainWindow::line_load_JIG3()
{
    QString filename;
    filename = QApplication::applicationDirPath() + "/data/" + load_type + ".jct";
    qDebug()<<filename;
    if(filename.isEmpty())
        return;
    QFile file(filename);
    ui->LE_LOAD_JIG3_1->setText(filename);
    QString text_chop = ui->LE_LOAD_JIG3_1->text();
    text_chop.chop(4);
    ui->LE_LOAD_JIG3_2->setText(text_chop.section("/", -1));

    if(!file.open(QIODevice::ReadOnly)){
        QMessageBox::warning(this, "파일 로드 실패", file.errorString());
        ui->LE_LOAD_JIG3_1->setText("");
        ui->LE_LOAD_JIG3_2->setText("");
        return;
    }
}

void MainWindow::on_BTN_Load_JIG_1_No_1_clicked()
{
    line_JIG1_load_no = 1;
    load_type = ui->BTN_Load_JIG_1_No_1->text();
    load_MessageBox_JIG1();
}

void MainWindow::on_BTN_Load_JIG_1_No_2_clicked()
{
    line_JIG1_load_no = 2;
    load_type = ui->BTN_Load_JIG_1_No_2->text();
    load_MessageBox_JIG1();
}

void MainWindow::on_BTN_Load_JIG_1_No_3_clicked()
{
    line_JIG1_load_no = 3;
    load_type = ui->BTN_Load_JIG_1_No_3->text();
    load_MessageBox_JIG1();
}

void MainWindow::on_BTN_Load_JIG_1_No_4_clicked()
{
    line_JIG1_load_no = 4;
    load_type = ui->BTN_Load_JIG_1_No_4->text();
    load_MessageBox_JIG1();
}

void MainWindow::on_BTN_Load_JIG_1_No_5_clicked()
{
    line_JIG1_load_no = 5;
    load_type = ui->BTN_Load_JIG_1_No_5->text();
    load_MessageBox_JIG1();
}

void MainWindow::on_BTN_Load_JIG_1_No_6_clicked()
{
    line_JIG1_load_no = 6;
    load_type = ui->BTN_Load_JIG_1_No_6->text();
    load_MessageBox_JIG1();
}

void MainWindow::on_BTN_Load_JIG_1_No_7_clicked()
{
    line_JIG1_load_no = 7;
    load_type = ui->BTN_Load_JIG_1_No_7->text();
    load_MessageBox_JIG1();
}

void MainWindow::on_BTN_Load_JIG_1_No_8_clicked()
{
    line_JIG1_load_no = 8;
    load_type = ui->BTN_Load_JIG_1_No_8->text();
    load_MessageBox_JIG1();
}

void MainWindow::on_BTN_Load_JIG_1_No_9_clicked()
{
    line_JIG1_load_no = 9;
    load_type = ui->BTN_Load_JIG_1_No_9->text();
    load_MessageBox_JIG1();
}

void MainWindow::on_BTN_Load_JIG_1_No_10_clicked()
{
    line_JIG1_load_no = 10;
    load_type = ui->BTN_Load_JIG_1_No_10->text();
    load_MessageBox_JIG1();
}

void MainWindow::on_BTN_Load_JIG_1_No_11_clicked()
{
    line_JIG1_load_no = 11;
    load_type = ui->BTN_Load_JIG_1_No_11->text();
    load_MessageBox_JIG1();
}

void MainWindow::on_BTN_Load_JIG_1_No_12_clicked()
{
    line_JIG1_load_no = 12;
    load_type = ui->BTN_Load_JIG_1_No_12->text();
    load_MessageBox_JIG1();
}

void MainWindow::on_BTN_Load_JIG_1_No_13_clicked()
{
    line_JIG1_load_no = 13;
    load_type = ui->BTN_Load_JIG_1_No_13->text();
    load_MessageBox_JIG1();
}

void MainWindow::on_BTN_Load_JIG_1_No_14_clicked()
{
    line_JIG1_load_no = 14;
    load_type = ui->BTN_Load_JIG_1_No_14->text();
    load_MessageBox_JIG1();
}

void MainWindow::on_BTN_Load_JIG_1_No_15_clicked()
{
    line_JIG1_load_no = 15;
    load_type = ui->BTN_Load_JIG_1_No_15->text();
    load_MessageBox_JIG1();
}

void MainWindow::on_BTN_Load_JIG_1_No_16_clicked()
{
    line_JIG1_load_no = 16;
    load_type = ui->BTN_Load_JIG_1_No_16->text();
    load_MessageBox_JIG1();
}

void MainWindow::on_BTN_Load_JIG_1_No_17_clicked()
{
    line_JIG1_load_no = 17;
    load_type = ui->BTN_Load_JIG_1_No_17->text();
    load_MessageBox_JIG1();
}

void MainWindow::on_BTN_Load_JIG_1_No_18_clicked()
{
    line_JIG1_load_no = 18;
    load_type = ui->BTN_Load_JIG_1_No_18->text();
    load_MessageBox_JIG1();
}

void MainWindow::on_BTN_Load_JIG_1_No_19_clicked()
{
    line_JIG1_load_no = 19;
    load_type = ui->BTN_Load_JIG_1_No_19->text();
    load_MessageBox_JIG1();
}

void MainWindow::on_BTN_Load_JIG_1_No_20_clicked()
{
    line_JIG1_load_no = 20;
    load_type = ui->BTN_Load_JIG_1_No_20->text();
    load_MessageBox_JIG1();
}

void MainWindow::on_BTN_Load_JIG_1_No_21_clicked()
{
    line_JIG1_load_no = 21;
    load_type = ui->BTN_Load_JIG_1_No_21->text();
    load_MessageBox_JIG1();
}

void MainWindow::on_BTN_Load_JIG_1_No_22_clicked()
{
    line_JIG1_load_no = 22;
    load_type = ui->BTN_Load_JIG_1_No_22->text();
    load_MessageBox_JIG1();
}

void MainWindow::on_BTN_Load_JIG_1_No_23_clicked()
{
    line_JIG1_load_no = 23;
    load_type = ui->BTN_Load_JIG_1_No_23->text();
    load_MessageBox_JIG1();
}

void MainWindow::on_BTN_Load_JIG_1_No_24_clicked()
{
    line_JIG1_load_no = 24;
    load_type = ui->BTN_Load_JIG_1_No_24->text();
    load_MessageBox_JIG1();
}

void MainWindow::on_BTN_Load_JIG_1_No_25_clicked()
{
    line_JIG1_load_no = 25;
    load_type = ui->BTN_Load_JIG_1_No_25->text();
    load_MessageBox_JIG1();
}

void MainWindow::on_BTN_Load_JIG_1_No_26_clicked()
{
    line_JIG1_load_no = 26;
    load_type = ui->BTN_Load_JIG_1_No_26->text();
    load_MessageBox_JIG1();
}

void MainWindow::on_BTN_Load_JIG_1_No_27_clicked()
{
    line_JIG1_load_no = 27;
    load_type = ui->BTN_Load_JIG_1_No_27->text();
    load_MessageBox_JIG1();
}

void MainWindow::on_BTN_Load_JIG_1_No_28_clicked()
{
    line_JIG1_load_no = 28;
    load_type = ui->BTN_Load_JIG_1_No_28->text();
    load_MessageBox_JIG1();
}

void MainWindow::on_BTN_Load_JIG_1_No_29_clicked()
{
    line_JIG1_load_no = 29;
    load_type = ui->BTN_Load_JIG_1_No_29->text();
    load_MessageBox_JIG1();
}

void MainWindow::on_BTN_Load_JIG_1_No_30_clicked()
{
    line_JIG1_load_no = 30;
    load_type = ui->BTN_Load_JIG_1_No_30->text();
    load_MessageBox_JIG1();
}

void MainWindow::on_BTN_Load_JIG_1_No_31_clicked()
{
    line_JIG1_load_no = 31;
    load_type = ui->BTN_Load_JIG_1_No_31->text();
    load_MessageBox_JIG1();
}

void MainWindow::on_BTN_Load_JIG_1_No_32_clicked()
{
    line_JIG1_load_no = 32;
    load_type = ui->BTN_Load_JIG_1_No_32->text();
    load_MessageBox_JIG1();
}

void MainWindow::on_BTN_Load_JIG_1_No_33_clicked()
{
    line_JIG1_load_no = 33;
    load_type = ui->BTN_Load_JIG_1_No_33->text();
    load_MessageBox_JIG1();
}

void MainWindow::on_BTN_Load_JIG_1_No_34_clicked()
{
    line_JIG1_load_no = 34;
    load_type = ui->BTN_Load_JIG_1_No_34->text();
    load_MessageBox_JIG1();
}

void MainWindow::on_BTN_Load_JIG_1_No_35_clicked()
{
    line_JIG1_load_no = 35;
    load_type = ui->BTN_Load_JIG_1_No_35->text();
    load_MessageBox_JIG1();
}

void MainWindow::on_BTN_Load_JIG_1_No_36_clicked()
{
    line_JIG1_load_no = 36;
    load_type = ui->BTN_Load_JIG_1_No_36->text();
    load_MessageBox_JIG1();
}

void MainWindow::on_BTN_Load_JIG_1_No_37_clicked()
{
    line_JIG1_load_no = 37;
    load_type = ui->BTN_Load_JIG_1_No_37->text();
    load_MessageBox_JIG1();
}

void MainWindow::on_BTN_Load_JIG_1_No_38_clicked()
{
    line_JIG1_load_no = 38;
    load_type = ui->BTN_Load_JIG_1_No_38->text();
    load_MessageBox_JIG1();
}

void MainWindow::on_BTN_Load_JIG_1_No_39_clicked()
{
    line_JIG1_load_no = 39;
    load_type = ui->BTN_Load_JIG_1_No_39->text();
    load_MessageBox_JIG1();
}

void MainWindow::on_BTN_Load_JIG_1_No_40_clicked()
{
    line_JIG1_load_no = 40;
    load_type = ui->BTN_Load_JIG_1_No_40->text();
    load_MessageBox_JIG1();
}

void MainWindow::on_BTN_Load_JIG_2_No_1_clicked()
{
    line_JIG2_load_no = 1;
    load_type = ui->BTN_Load_JIG_2_No_1->text();
    load_MessageBox_JIG2();
}

void MainWindow::on_BTN_Load_JIG_2_No_2_clicked()
{
    line_JIG2_load_no = 2;
    load_type = ui->BTN_Load_JIG_2_No_2->text();
    load_MessageBox_JIG2();
}

void MainWindow::on_BTN_Load_JIG_2_No_3_clicked()
{
    line_JIG2_load_no = 3;
    load_type = ui->BTN_Load_JIG_2_No_3->text();
    load_MessageBox_JIG2();
}

void MainWindow::on_BTN_Load_JIG_2_No_4_clicked()
{
    line_JIG2_load_no = 4;
    load_type = ui->BTN_Load_JIG_2_No_4->text();
    load_MessageBox_JIG2();
}

void MainWindow::on_BTN_Load_JIG_2_No_5_clicked()
{
    line_JIG2_load_no = 5;
    load_type = ui->BTN_Load_JIG_2_No_5->text();
    load_MessageBox_JIG2();
}

void MainWindow::on_BTN_Load_JIG_2_No_6_clicked()
{
    line_JIG2_load_no = 6;
    load_type = ui->BTN_Load_JIG_2_No_6->text();
    load_MessageBox_JIG2();
}

void MainWindow::on_BTN_Load_JIG_2_No_7_clicked()
{
    line_JIG2_load_no = 7;
    load_type = ui->BTN_Load_JIG_2_No_7->text();
    load_MessageBox_JIG2();
}

void MainWindow::on_BTN_Load_JIG_2_No_8_clicked()
{
    line_JIG2_load_no = 8;
    load_type = ui->BTN_Load_JIG_2_No_8->text();
    load_MessageBox_JIG2();
}

void MainWindow::on_BTN_Load_JIG_2_No_9_clicked()
{
    line_JIG2_load_no = 9;
    load_type = ui->BTN_Load_JIG_2_No_9->text();
    load_MessageBox_JIG2();
}

void MainWindow::on_BTN_Load_JIG_2_No_10_clicked()
{
    line_JIG2_load_no = 10;
    load_type = ui->BTN_Load_JIG_2_No_10->text();
    load_MessageBox_JIG2();
}

void MainWindow::on_BTN_Load_JIG_2_No_11_clicked()
{
    line_JIG2_load_no = 11;
    load_type = ui->BTN_Load_JIG_2_No_11->text();
    load_MessageBox_JIG2();
}

void MainWindow::on_BTN_Load_JIG_2_No_12_clicked()
{
    line_JIG2_load_no = 12;
    load_type = ui->BTN_Load_JIG_2_No_12->text();
    load_MessageBox_JIG2();
}

void MainWindow::on_BTN_Load_JIG_2_No_13_clicked()
{
    line_JIG2_load_no = 13;
    load_type = ui->BTN_Load_JIG_2_No_13->text();
    load_MessageBox_JIG2();
}

void MainWindow::on_BTN_Load_JIG_2_No_14_clicked()
{
    line_JIG2_load_no = 14;
    load_type = ui->BTN_Load_JIG_2_No_14->text();
    load_MessageBox_JIG2();
}

void MainWindow::on_BTN_Load_JIG_2_No_15_clicked()
{
    line_JIG2_load_no = 15;
    load_type = ui->BTN_Load_JIG_2_No_15->text();
    load_MessageBox_JIG2();
}

void MainWindow::on_BTN_Load_JIG_2_No_16_clicked()
{
    line_JIG2_load_no = 16;
    load_type = ui->BTN_Load_JIG_2_No_16->text();
    load_MessageBox_JIG2();
}

void MainWindow::on_BTN_Load_JIG_2_No_17_clicked()
{
    line_JIG2_load_no = 17;
    load_type = ui->BTN_Load_JIG_2_No_17->text();
    load_MessageBox_JIG2();
}

void MainWindow::on_BTN_Load_JIG_2_No_18_clicked()
{
    line_JIG2_load_no = 18;
    load_type = ui->BTN_Load_JIG_2_No_18->text();
    load_MessageBox_JIG2();
}

void MainWindow::on_BTN_Load_JIG_2_No_19_clicked()
{
    line_JIG2_load_no = 19;
    load_type = ui->BTN_Load_JIG_2_No_19->text();
    load_MessageBox_JIG2();
}

void MainWindow::on_BTN_Load_JIG_2_No_20_clicked()
{
    line_JIG2_load_no = 20;
    load_type = ui->BTN_Load_JIG_2_No_20->text();
    load_MessageBox_JIG2();
}

void MainWindow::on_BTN_Load_JIG_2_No_21_clicked()
{
    line_JIG2_load_no = 21;
    load_type = ui->BTN_Load_JIG_2_No_21->text();
    load_MessageBox_JIG2();
}

void MainWindow::on_BTN_Load_JIG_2_No_22_clicked()
{
    line_JIG2_load_no = 22;
    load_type = ui->BTN_Load_JIG_2_No_22->text();
    load_MessageBox_JIG2();
}

void MainWindow::on_BTN_Load_JIG_2_No_23_clicked()
{
    line_JIG2_load_no = 23;
    load_type = ui->BTN_Load_JIG_2_No_23->text();
    load_MessageBox_JIG2();
}

void MainWindow::on_BTN_Load_JIG_2_No_24_clicked()
{
    line_JIG2_load_no = 24;
    load_type = ui->BTN_Load_JIG_2_No_24->text();
    load_MessageBox_JIG2();
}

void MainWindow::on_BTN_Load_JIG_2_No_25_clicked()
{
    line_JIG2_load_no = 25;
    load_type = ui->BTN_Load_JIG_2_No_25->text();
    load_MessageBox_JIG2();
}

void MainWindow::on_BTN_Load_JIG_2_No_26_clicked()
{
    line_JIG2_load_no = 26;
    load_type = ui->BTN_Load_JIG_2_No_26->text();
    load_MessageBox_JIG2();
}

void MainWindow::on_BTN_Load_JIG_2_No_27_clicked()
{
    line_JIG2_load_no = 27;
    load_type = ui->BTN_Load_JIG_2_No_27->text();
    load_MessageBox_JIG2();
}

void MainWindow::on_BTN_Load_JIG_2_No_28_clicked()
{
    line_JIG2_load_no = 28;
    load_type = ui->BTN_Load_JIG_2_No_28->text();
    load_MessageBox_JIG2();
}

void MainWindow::on_BTN_Load_JIG_2_No_29_clicked()
{
    line_JIG2_load_no = 29;
    load_type = ui->BTN_Load_JIG_2_No_29->text();
    load_MessageBox_JIG2();
}

void MainWindow::on_BTN_Load_JIG_2_No_30_clicked()
{
    line_JIG2_load_no = 30;
    load_type = ui->BTN_Load_JIG_2_No_30->text();
    load_MessageBox_JIG2();
}

void MainWindow::on_BTN_Load_JIG_2_No_31_clicked()
{
    line_JIG2_load_no = 31;
    load_type = ui->BTN_Load_JIG_2_No_31->text();
    load_MessageBox_JIG2();
}

void MainWindow::on_BTN_Load_JIG_2_No_32_clicked()
{
    line_JIG2_load_no = 32;
    load_type = ui->BTN_Load_JIG_2_No_32->text();
    load_MessageBox_JIG2();
}

void MainWindow::on_BTN_Load_JIG_2_No_33_clicked()
{
    line_JIG2_load_no = 33;
    load_type = ui->BTN_Load_JIG_2_No_33->text();
    load_MessageBox_JIG2();
}

void MainWindow::on_BTN_Load_JIG_2_No_34_clicked()
{
    line_JIG2_load_no = 34;
    load_type = ui->BTN_Load_JIG_2_No_34->text();
    load_MessageBox_JIG2();
}

void MainWindow::on_BTN_Load_JIG_2_No_35_clicked()
{
    line_JIG2_load_no = 35;
    load_type = ui->BTN_Load_JIG_2_No_35->text();
    load_MessageBox_JIG2();
}

void MainWindow::on_BTN_Load_JIG_2_No_36_clicked()
{
    line_JIG2_load_no = 36;
    load_type = ui->BTN_Load_JIG_2_No_36->text();
    load_MessageBox_JIG2();
}

void MainWindow::on_BTN_Load_JIG_2_No_37_clicked()
{
    line_JIG2_load_no = 37;
    load_type = ui->BTN_Load_JIG_2_No_37->text();
    load_MessageBox_JIG2();
}

void MainWindow::on_BTN_Load_JIG_2_No_38_clicked()
{
    line_JIG2_load_no = 38;
    load_type = ui->BTN_Load_JIG_2_No_38->text();
    load_MessageBox_JIG2();
}

void MainWindow::on_BTN_Load_JIG_2_No_39_clicked()
{
    line_JIG2_load_no = 39;
    load_type = ui->BTN_Load_JIG_2_No_39->text();
    load_MessageBox_JIG2();
}

void MainWindow::on_BTN_Load_JIG_2_No_40_clicked()
{
    line_JIG2_load_no = 40;
    load_type = ui->BTN_Load_JIG_2_No_40->text();
    load_MessageBox_JIG2();
}

void MainWindow::on_BTN_Load_JIG_3_No_1_clicked()
{
    line_JIG3_load_no = 1;
    load_type = ui->BTN_Load_JIG_3_No_1->text();
    load_MessageBox_JIG3();
}

void MainWindow::on_BTN_Load_JIG_3_No_2_clicked()
{
    line_JIG3_load_no = 2;
    load_type = ui->BTN_Load_JIG_3_No_2->text();
    load_MessageBox_JIG3();
}

void MainWindow::on_BTN_Load_JIG_3_No_3_clicked()
{
    line_JIG3_load_no = 3;
    load_type = ui->BTN_Load_JIG_3_No_3->text();
    load_MessageBox_JIG3();
}

void MainWindow::on_BTN_Load_JIG_3_No_4_clicked()
{
    line_JIG3_load_no = 4;
    load_type = ui->BTN_Load_JIG_3_No_4->text();
    load_MessageBox_JIG3();
}

void MainWindow::on_BTN_Load_JIG_3_No_5_clicked()
{
    line_JIG3_load_no = 5;
    load_type = ui->BTN_Load_JIG_3_No_5->text();
    load_MessageBox_JIG3();
}

void MainWindow::on_BTN_Load_JIG_3_No_6_clicked()
{
    line_JIG3_load_no = 6;
    load_type = ui->BTN_Load_JIG_3_No_6->text();
    load_MessageBox_JIG3();
}

void MainWindow::on_BTN_Load_JIG_3_No_7_clicked()
{
    line_JIG3_load_no = 7;
    load_type = ui->BTN_Load_JIG_3_No_7->text();
    load_MessageBox_JIG3();
}

void MainWindow::on_BTN_Load_JIG_3_No_8_clicked()
{
    line_JIG3_load_no = 8;
    load_type = ui->BTN_Load_JIG_3_No_8->text();
    load_MessageBox_JIG3();
}

void MainWindow::on_BTN_Load_JIG_3_No_9_clicked()
{
    line_JIG3_load_no = 9;
    load_type = ui->BTN_Load_JIG_3_No_9->text();
    load_MessageBox_JIG3();
}

void MainWindow::on_BTN_Load_JIG_3_No_10_clicked()
{
    line_JIG3_load_no = 10;
    load_type = ui->BTN_Load_JIG_3_No_10->text();
    load_MessageBox_JIG3();
}

void MainWindow::on_BTN_Load_JIG_3_No_11_clicked()
{
    line_JIG3_load_no = 11;
    load_type = ui->BTN_Load_JIG_3_No_11->text();
    load_MessageBox_JIG3();
}

void MainWindow::on_BTN_Load_JIG_3_No_12_clicked()
{
    line_JIG3_load_no = 12;
    load_type = ui->BTN_Load_JIG_3_No_12->text();
    load_MessageBox_JIG3();
}

void MainWindow::on_BTN_Load_JIG_3_No_13_clicked()
{
    line_JIG3_load_no = 13;
    load_type = ui->BTN_Load_JIG_3_No_13->text();
    load_MessageBox_JIG3();
}

void MainWindow::on_BTN_Load_JIG_3_No_14_clicked()
{
    line_JIG3_load_no = 14;
    load_type = ui->BTN_Load_JIG_3_No_14->text();
    load_MessageBox_JIG3();
}

void MainWindow::on_BTN_Load_JIG_3_No_15_clicked()
{
    line_JIG3_load_no = 15;
    load_type = ui->BTN_Load_JIG_3_No_15->text();
    load_MessageBox_JIG3();
}

void MainWindow::on_BTN_Load_JIG_3_No_16_clicked()
{
    line_JIG3_load_no = 16;
    load_type = ui->BTN_Load_JIG_3_No_16->text();
    load_MessageBox_JIG3();
}

void MainWindow::on_BTN_Load_JIG_3_No_17_clicked()
{
    line_JIG3_load_no = 17;
    load_type = ui->BTN_Load_JIG_3_No_17->text();
    load_MessageBox_JIG3();
}

void MainWindow::on_BTN_Load_JIG_3_No_18_clicked()
{
    line_JIG3_load_no = 18;
    load_type = ui->BTN_Load_JIG_3_No_18->text();
    load_MessageBox_JIG3();
}

void MainWindow::on_BTN_Load_JIG_3_No_19_clicked()
{
    line_JIG3_load_no = 19;
    load_type = ui->BTN_Load_JIG_3_No_19->text();
    load_MessageBox_JIG3();
}

void MainWindow::on_BTN_Load_JIG_3_No_20_clicked()
{
    line_JIG3_load_no = 20;
    load_type = ui->BTN_Load_JIG_3_No_20->text();
    load_MessageBox_JIG3();
}

void MainWindow::on_BTN_Load_JIG_3_No_21_clicked()
{
    line_JIG3_load_no = 21;
    load_type = ui->BTN_Load_JIG_3_No_21->text();
    load_MessageBox_JIG3();
}

void MainWindow::on_BTN_Load_JIG_3_No_22_clicked()
{
    line_JIG3_load_no = 22;
    load_type = ui->BTN_Load_JIG_3_No_22->text();
    load_MessageBox_JIG3();
}

void MainWindow::on_BTN_Load_JIG_3_No_23_clicked()
{
    line_JIG3_load_no = 23;
    load_type = ui->BTN_Load_JIG_3_No_23->text();
    load_MessageBox_JIG3();
}

void MainWindow::on_BTN_Load_JIG_3_No_24_clicked()
{
    line_JIG3_load_no = 24;
    load_type = ui->BTN_Load_JIG_3_No_24->text();
    load_MessageBox_JIG3();
}

void MainWindow::on_BTN_Load_JIG_3_No_25_clicked()
{
    line_JIG3_load_no = 25;
    load_type = ui->BTN_Load_JIG_3_No_25->text();
    load_MessageBox_JIG3();
}

void MainWindow::on_BTN_Load_JIG_3_No_26_clicked()
{
    line_JIG3_load_no = 26;
    load_type = ui->BTN_Load_JIG_3_No_26->text();
    load_MessageBox_JIG3();
}

void MainWindow::on_BTN_Load_JIG_3_No_27_clicked()
{
    line_JIG3_load_no = 27;
    load_type = ui->BTN_Load_JIG_3_No_27->text();
    load_MessageBox_JIG3();
}

void MainWindow::on_BTN_Load_JIG_3_No_28_clicked()
{
    line_JIG3_load_no = 28;
    load_type = ui->BTN_Load_JIG_3_No_28->text();
    load_MessageBox_JIG3();
}

void MainWindow::on_BTN_Load_JIG_3_No_29_clicked()
{
    line_JIG3_load_no = 29;
    load_type = ui->BTN_Load_JIG_3_No_29->text();
    load_MessageBox_JIG3();
}

void MainWindow::on_BTN_Load_JIG_3_No_30_clicked()
{
    line_JIG3_load_no = 30;
    load_type = ui->BTN_Load_JIG_3_No_30->text();
    load_MessageBox_JIG3();
}

void MainWindow::on_BTN_Load_JIG_3_No_31_clicked()
{
    line_JIG3_load_no = 31;
    load_type = ui->BTN_Load_JIG_3_No_31->text();
    load_MessageBox_JIG3();
}

void MainWindow::on_BTN_Load_JIG_3_No_32_clicked()
{
    line_JIG3_load_no = 32;
    load_type = ui->BTN_Load_JIG_3_No_32->text();
    load_MessageBox_JIG3();
}

void MainWindow::on_BTN_Load_JIG_3_No_33_clicked()
{
    line_JIG3_load_no = 33;
    load_type = ui->BTN_Load_JIG_3_No_33->text();
    load_MessageBox_JIG3();
}

void MainWindow::on_BTN_Load_JIG_3_No_34_clicked()
{
    line_JIG3_load_no = 34;
    load_type = ui->BTN_Load_JIG_3_No_34->text();
    load_MessageBox_JIG3();
}

void MainWindow::on_BTN_Load_JIG_3_No_35_clicked()
{
    line_JIG3_load_no = 35;
    load_type = ui->BTN_Load_JIG_3_No_35->text();
    load_MessageBox_JIG3();
}

void MainWindow::on_BTN_Load_JIG_3_No_36_clicked()
{
    line_JIG3_load_no = 36;
    load_type = ui->BTN_Load_JIG_3_No_36->text();
    load_MessageBox_JIG3();
}

void MainWindow::on_BTN_Load_JIG_3_No_37_clicked()
{
    line_JIG3_load_no = 37;
    load_type = ui->BTN_Load_JIG_3_No_37->text();
    load_MessageBox_JIG3();
}

void MainWindow::on_BTN_Load_JIG_3_No_38_clicked()
{
    line_JIG3_load_no = 38;
    load_type = ui->BTN_Load_JIG_3_No_38->text();
    load_MessageBox_JIG3();
}

void MainWindow::on_BTN_Load_JIG_3_No_39_clicked()
{
    line_JIG3_load_no = 39;
    load_type = ui->BTN_Load_JIG_3_No_39->text();
    load_MessageBox_JIG3();
}

void MainWindow::on_BTN_Load_JIG_3_No_40_clicked()
{
    line_JIG3_load_no = 40;
    load_type = ui->BTN_Load_JIG_3_No_40->text();
    load_MessageBox_JIG3();
}

void MainWindow::on_BTN_mode_JIG_1_clicked()
{
     mode_type = 11; //JIG 1
}

void MainWindow::on_BTN_mode_JIG_2_clicked()
{
     mode_type = 12; //JIG 2
}

void MainWindow::on_BTN_mode_JIG_3_clicked()
{
     mode_type = 13; //JIG 3
}

void MainWindow::on_BTN_FILE_LOAD_JIG_1_clicked()
{
    line_JIG1_load_no = 0;
    QString filename;
    load_type = ui->LE_LOAD_JIG1_1->text();
    filename = QFileDialog::getOpenFileName(this, "JCT 용접 파일 로드", "", "JCT File (*.jct);; All Files (*)");
    qDebug()<<filename;
    if(filename.isEmpty())
        return;
    QFile file(filename);
    ui->LE_LOAD_JIG1_1->setText(filename);
    QString text_chop = ui->LE_LOAD_JIG1_1->text();
    text_chop.chop(4);
    ui->LE_LOAD_JIG1_2->setText(text_chop.section("/", -1));

    if(!file.open(QIODevice::ReadOnly)){
        QMessageBox::warning(this, "파일 로드 실패", file.errorString());
        return;
    }
}

void MainWindow::on_BTN_FILE_LOAD_JIG_2_clicked()
{
    line_JIG2_load_no = 0;
    QString filename;
    load_type = ui->LE_LOAD_JIG2_1->text();
    filename = QFileDialog::getOpenFileName(this, "JCT 용접 파일 로드", "", "JCT File (*.jct);; All Files (*)");
    qDebug()<<filename;
    if(filename.isEmpty())
        return;
    QFile file(filename);
    ui->LE_LOAD_JIG2_1->setText(filename);
    QString text_chop = ui->LE_LOAD_JIG2_1->text();
    text_chop.chop(4);
    ui->LE_LOAD_JIG2_2->setText(text_chop.section("/", -1));

    if(!file.open(QIODevice::ReadOnly)){
        QMessageBox::warning(this, "파일 로드 실패", file.errorString());
        return;
    }
}

void MainWindow::on_BTN_FILE_LOAD_JIG_3_clicked()
{
    line_JIG3_load_no = 0;
    QString filename;
    load_type = ui->LE_LOAD_JIG3_1->text();
    filename = QFileDialog::getOpenFileName(this, "JCT 용접 파일 로드", "", "JCT File (*.jct);; All Files (*)");
    qDebug()<<filename;
    if(filename.isEmpty())
        return;
    QFile file(filename);
    ui->LE_LOAD_JIG3_1->setText(filename);
    QString text_chop = ui->LE_LOAD_JIG3_1->text();
    text_chop.chop(4);
    ui->LE_LOAD_JIG3_2->setText(text_chop.section("/", -1));

    if(!file.open(QIODevice::ReadOnly)){
        QMessageBox::warning(this, "파일 로드 실패", file.errorString());
        return;
    }
}

void MainWindow::on_PB_C_5_Play_clicked()
{
    play_type = 2;
    Load_JIG1_make();
}

void MainWindow::on_PB_C_5_Pause_clicked()
{
    if(sockConnectionStatusCmd && sockConnectionStatusData){
        sockCmd.write("task pause ");
    }else{
        qDebug()<<"on_PB_C_5_Pause_clicked"<<endl;
        QMessageBox::warning(this, MSG_JCT_TITLE, MSG_NO_CONNECTION);
    }
    ui->PB_C_5_Play->setStyleSheet("QPushButton{border-image: url(:/a/image/실행-274x287.png)}");
    data_start = 0;
}

void MainWindow::on_PB_C_5_Stop_clicked()
{
    if(sockConnectionStatusCmd && sockConnectionStatusData){
        sockCmd.write("task stop ");
    }else{
        qDebug()<<"on_PB_C_5_Stop_clicked"<<endl;
        QMessageBox::warning(this, MSG_JCT_TITLE, MSG_NO_CONNECTION);
    }
    ui->PB_C_5_Play->setStyleSheet("QPushButton{border-image: url(:/a/image/실행-274x287.png)}");
    data_start = 0;
}

void MainWindow::Load_JIG1_make()
{
    QString filename = ui->LE_LOAD_JIG1_1->text();
    qDebug()<<filename;
    if(filename.isEmpty())
        return;
    QFile file(filename);
    if(!file.open(QIODevice::ReadOnly)){
        QMessageBox::warning(this, "파일 로드 실패", file.errorString());
        return;
    }
    QDataStream in(&file);
    welding_data.clear();
    in >> welding_data;
    Update_TW_10();
    command_data.clear();
    in >> command_data;
    Update_TW_1();

    mode_type = 11; //JIG1
    qDebug()<<"JIG1_load_1"<<endl;
    make_and_run(0);
}

void MainWindow::Load_JIG2_make()
{
    QString filename = ui->LE_LOAD_JIG2_1->text();
    qDebug()<<filename;
    if(filename.isEmpty())
        return;
    QFile file(filename);
    if(!file.open(QIODevice::ReadOnly)){
        QMessageBox::warning(this, "파일 로드 실패", file.errorString());
        return;
    }
    QDataStream in(&file);
    welding_data.clear();
    in >> welding_data;
    Update_TW_10();
    command_data.clear();
    in >> command_data;
    Update_TW_1();

    mode_type = 12; //JIG2
    qDebug()<<"JIG2_load_1"<<endl;
    make_and_run(0);
}

void MainWindow::Load_JIG3_make()
{
    QString filename = ui->LE_LOAD_JIG3_1->text();
    qDebug()<<filename;
    if(filename.isEmpty())
        return;
    QFile file(filename);
    if(!file.open(QIODevice::ReadOnly)){
        QMessageBox::warning(this, "파일 로드 실패", file.errorString());
        return;
    }
    QDataStream in(&file);
    welding_data.clear();
    in >> welding_data;
    Update_TW_10();
    command_data.clear();
    in >> command_data;
    Update_TW_1();

    mode_type = 13; //JIG3
    qDebug()<<"JIG3_load_1"<<endl;
    make_and_run(0);
}

void MainWindow::on_PB_A3C5_back_clicked()
{
    mode_type = 0;
    modify_mode = 0;
    data_start = 0;
    on_PB_B_2_Stop_clicked();
    REFRESH_clicked();
    ui->SW_A->setCurrentIndex(1);
    mMediaPlayer->stop();
}

void MainWindow::on_PB_A_Home_clicked()
{
    float   TOT_SPEED = 0.3;
    float   TOT_ACC = 0.1;
    if(IsMotionIdle()){
        MoveJoint(home_axis0, home_axis1, home_axis2, home_axis3, home_axis4, home_axis5, TOT_SPEED, TOT_ACC);
    }
}

void MainWindow::on_PB_A_RobotPower_clicked()
{
    if(robot_power == 0){
        QString text;
        text.sprintf("AvadaKedavra()");
        cmdConfirmFlag = false;
        sockCmd.write(text.toStdString().c_str(), text.toStdString().length());
        on_PB_POWER_A0_clicked();
    }
}

void MainWindow::on_PB_B_1_Air_pressed()
{
    if(data_weld_type == 3){
    QString text;

    text.sprintf("digital_out -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1");

    cmdConfirmFlag = false;
    sockCmd.write(text.toStdString().c_str(), text.toStdString().length());
    }
}

void MainWindow::on_PB_B_1_Air_released()
{
    if(data_weld_type == 3){
    QString text;

    text.sprintf("digital_out -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1, -1");

    cmdConfirmFlag = false;
    sockCmd.write(text.toStdString().c_str(), text.toStdString().length());
    }
}

void MainWindow::on_LE_B1R0_mm_cursorPositionChanged(int arg1, int arg2)
{
    data_B1R1_key_view = 1;
    B1R1_input = "";
    B1R1_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_B1R0_deg_cursorPositionChanged(int arg1, int arg2)
{
    data_B1R1_key_view = 2;
    B1R1_input = "";
    B1R1_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_B1R0_mm_selectionChanged()
{
    if(ui->LE_B1R0_mm->text()==""){
        on_LE_B1R0_mm_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_LE_B1R0_deg_selectionChanged()
{
    if(ui->LE_B1R0_deg->text()==""){
        on_LE_B1R0_deg_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_PB_SOKET_clicked() // 통신연결
{
    if(sockConnectionStatusCmd == false && sockConnectionStatusData == false){
        QMessageBox msgBox;
        msgBox.setText("통신 연결!!");
        msgBox.setInformativeText("통신 연결 하시겠습니까?");
        msgBox.setStandardButtons(QMessageBox::Yes | QMessageBox::No);
        msgBox.setDefaultButton(QMessageBox::No);
        qDebug()<<"Show Popup soket";
        int ret = msgBox.exec();
        switch(ret){
        case QMessageBox::Yes:
            rb_soket_on();
            break;
        case QMessageBox::No:
            break;
        default:
            break;
        }
    }

}

void MainWindow::on_PB_REAL_A1_clicked()
{
    if(sys_status.sdata.program_mode == 1){
        ProgramMode_Real();
    }
}

void MainWindow::on_PB_ARM_ACT_A1_clicked()
{
    if(sys_status.sdata.init_state_info != 6){
        CobotInit();
    }
}

void MainWindow::on_PB_ARM_ACT_A2_clicked()
{
    if(sys_status.sdata.init_state_info != 6){
        CobotInit();
    }
}

void MainWindow::on_PB_REAL_A2_clicked()
{
    if(sys_status.sdata.program_mode == 1){
        ProgramMode_Real();
    }
}

void MainWindow::on_PB_D_0_Use_robotfree_clicked()
{
    data_robotfree = 1;
}

void MainWindow::on_PB_D_0_Unuse_robotfree_clicked()
{
    data_robotfree = 0;
}



void MainWindow::on_PB_B_2_n_Fwd_pressed()
{
    int target_line = ui->LE_B_2_nPlay->text().toInt();
    if(target_line >=1 && target_line <= welding_data.size()){
        MoveTCP(welding_data[target_line-1].tcp[0],welding_data[target_line-1].tcp[1],welding_data[target_line-1].tcp[2],welding_data[target_line-1].tcp[3],welding_data[target_line-1].tcp[4],welding_data[target_line-1].tcp[5],0.1, 0.1);
    }
}

void MainWindow::on_PB_B_2_n_Fwd_released()
{
    on_PB_B_2_Stop_clicked();
}

void MainWindow::on_PB_B_2_n_Mod_clicked()
{
    int target_line = ui->LE_B_2_nPlay->text().toInt();
    QMessageBox msgBox;
    msgBox.setText("위치 수정");
    msgBox.setInformativeText("위치번호 : "+ui->LE_B_2_nPlay->text()+" 수정 하시겠습니까?");
    msgBox.setStandardButtons(QMessageBox::Yes | QMessageBox::No);
    msgBox.setDefaultButton(QMessageBox::No);
    int ret = msgBox.exec();
    switch(ret){
    case QMessageBox::Yes:
        if(target_line >=1 && target_line<=welding_data.size()){
            welding_data[target_line-1].tcp[0] = sys_status.sdata.tcp_ref[0];
            welding_data[target_line-1].tcp[1] = sys_status.sdata.tcp_ref[1];
            welding_data[target_line-1].tcp[2] = sys_status.sdata.tcp_ref[2];
            welding_data[target_line-1].tcp[3] = sys_status.sdata.tcp_ref[3];
            welding_data[target_line-1].tcp[4] = sys_status.sdata.tcp_ref[4];
            welding_data[target_line-1].tcp[5] = sys_status.sdata.tcp_ref[5];
            welding_data[target_line-1].joint[0] = sys_status.sdata.jnt_ref[0];
            welding_data[target_line-1].joint[1] = sys_status.sdata.jnt_ref[1];
            welding_data[target_line-1].joint[2] = sys_status.sdata.jnt_ref[2];
            welding_data[target_line-1].joint[3] = sys_status.sdata.jnt_ref[3];
            welding_data[target_line-1].joint[4] = sys_status.sdata.jnt_ref[4];
            welding_data[target_line-1].joint[5] = sys_status.sdata.jnt_ref[5];
        }
        break;
    case QMessageBox::No:
        break;
    default:
        break;
    }
}

void MainWindow::on_PB_B_1_Line_Fwd_pressed()
{
    int target_line = ui->LB_Line_Count->text().toInt();
    if(target_line >=1 && target_line<=welding_data.size()){
        bool check_fail = false;
        for(int k=0; k<6; k++){
            if(welding_data[target_line-1].command_option == WEL_CMD_INIT_J || welding_data[target_line-1].command_option == WEL_CMD_MOVE_J || welding_data[target_line-1].command_option == WEL_CMD_FINAL_J){
                if(welding_data[target_line-1].joint[k] > 360. || welding_data[target_line-1].joint[k] < -360.){
                    check_fail = true;
                }
            }
            if(welding_data[target_line-1].command_option != WEL_CMD_INIT_J && welding_data[target_line-1].command_option != WEL_CMD_MOVE_J && welding_data[target_line-1].command_option != WEL_CMD_FINAL_J){
                if(welding_data[target_line-1].tcp[k] > 2000. || welding_data[target_line-1].tcp[k] < -2000.){
                    check_fail = true;
                }
            }
        }
        if(check_fail){
            qDebug()<<"교시되지 않은 지점이 존재합니다.";
            QMessageBox::warning(this, MSG_JCT_TITLE, MSG_UN_TEACHED_INFORMATION);
            return;
        }
            MoveTCP(welding_data[target_line-1].tcp[0],welding_data[target_line-1].tcp[1],welding_data[target_line-1].tcp[2],welding_data[target_line-1].tcp[3],welding_data[target_line-1].tcp[4],welding_data[target_line-1].tcp[5],0.1, 0.1);
    }
}

void MainWindow::on_PB_B_1_Line_Fwd_released()
{
    on_PB_B_2_Stop_clicked();
}

void MainWindow::on_PB_B_1_Line_Mod_clicked()
{
    int target_line = ui->LB_Line_Count->text().toInt();
    QMessageBox msgBox;
    msgBox.setText("위치 수정");
    msgBox.setInformativeText("위치번호 : "+ui->LB_Line_Count->text()+" 수정 하시겠습니까?");
    msgBox.setStandardButtons(QMessageBox::Yes | QMessageBox::No);
    msgBox.setDefaultButton(QMessageBox::No);
    int ret = msgBox.exec();
    switch(ret){
    case QMessageBox::Yes:
        if(target_line >=1 && target_line<=welding_data.size()){
            welding_data[target_line-1].tcp[0] = sys_status.sdata.tcp_ref[0];
            welding_data[target_line-1].tcp[1] = sys_status.sdata.tcp_ref[1];
            welding_data[target_line-1].tcp[2] = sys_status.sdata.tcp_ref[2];
            welding_data[target_line-1].tcp[3] = sys_status.sdata.tcp_ref[3];
            welding_data[target_line-1].tcp[4] = sys_status.sdata.tcp_ref[4];
            welding_data[target_line-1].tcp[5] = sys_status.sdata.tcp_ref[5];
            welding_data[target_line-1].joint[0] = sys_status.sdata.jnt_ref[0];
            welding_data[target_line-1].joint[1] = sys_status.sdata.jnt_ref[1];
            welding_data[target_line-1].joint[2] = sys_status.sdata.jnt_ref[2];
            welding_data[target_line-1].joint[3] = sys_status.sdata.jnt_ref[3];
            welding_data[target_line-1].joint[4] = sys_status.sdata.jnt_ref[4];
            welding_data[target_line-1].joint[5] = sys_status.sdata.jnt_ref[5];
            welding_data[target_line-1].lv = 1;
            Update_TW_10();
        }
        break;
    case QMessageBox::No:
        break;
    default:
        break;
    }
}

void MainWindow::on_PB_B_1_Exit_clicked()
{
    ui->SW_B->setCurrentIndex(0);
}

void MainWindow::on_PB_B_1_Play_clicked()
{
    play_move = 1;
    bool check_fail = false;
            for(int i=0; i<welding_data.size(); i++){
                for(int k=0; k<6; k++){
                    if(welding_data[i].command_option == WEL_CMD_INIT_J || welding_data[i].command_option == WEL_CMD_MOVE_J || welding_data[i].command_option == WEL_CMD_FINAL_J){
                        if(welding_data[i].joint[k] > 360. || welding_data[i].joint[k] < -360.){
                            check_fail = true;
                        }

                    }
                    if(welding_data[i].command_option != WEL_CMD_INIT_J && welding_data[i].command_option != WEL_CMD_MOVE_J && welding_data[i].command_option != WEL_CMD_FINAL_J){
                        if(welding_data[i].tcp[k] > 2000. || welding_data[i].tcp[k] < -2000.){
                            check_fail = true;
                        }
                    }

                }
            }
            if(check_fail){
                qDebug()<<"교시되지 않은 지점이 존재합니다.";
                QMessageBox::warning(this, MSG_JCT_TITLE, MSG_UN_TEACHED_INFORMATION);
                return;
            }

            if(data_robotfree == 1)
            {
                QString text;
                text.sprintf("freedrive_teach_off()");
                cmdConfirmFlag = false;
                sockCmd.write(text.toStdString().c_str(), text.toStdString().length());
            }
            if(sys_status.sdata.digital_in[3] == 0 && sys_status.sdata.is_freedrive_mode == 0){
                if(data_sound == 1){
                    if(data_foot==1){
                        mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "교시완료되었습니다."+".MP3"));
                    }
                    if(data_foot==0){
                        mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "교시완료되었습니다.발판x."+".MP3"));
                    }
                    mMediaPlayer->play();
                }
                Update_TW_10_welding_data();
                ui->SW_B->setCurrentIndex(2);
                ui->SW_B_2_C->setCurrentIndex(0);
                if(data_weld_play==0){
                    ui->SW_B2C0->setCurrentIndex(0);
                    ui->SW_C7C0->setCurrentIndex(0);
                }
                if(data_weld_play==1){
                    ui->SW_B2C0->setCurrentIndex(2);
                    ui->SW_C7C0->setCurrentIndex(2);
                }
                if(ui->LE_D_0_data_0->text()=="0"){
                    ui->SW_data_B->setCurrentIndex(0);
                }
                if(ui->LE_D_0_data_0->text()=="1"){
                    ui->SW_data_B->setCurrentIndex(1);
                }
                if(ui->LE_D_0_data_0->text()=="2"){
                    ui->SW_data_B->setCurrentIndex(2);
                }
                if(ui->LE_D_0_data_0->text()=="3"){
                    ui->SW_data_B->setCurrentIndex(1);
                }
                if(ui->LE_D_0_data_0->text()=="0"){
                    ui->SW_data_B->setCurrentIndex(0);
                }
                if(data_next == 1){

                }

            }
            if(sys_status.sdata.digital_in[3] == 1){
                ui->LB_B_1->setText("로봇프리 기능을 꺼주세요.");
                if(data_sound == 1 && ment == 0)
                {
                    mMediaPlayer->setMedia(QUrl::fromLocalFile(file_pos + "로봇프리기능을꺼주세요."+".MP3"));
                    mMediaPlayer->play();
                    ment =1;
                }
            }
}

void MainWindow::on_PB_B_1_Line_Re_clicked()
{
    int target_line = ui->LB_Line_Count->text().toInt();
    if(target_line >=1 && target_line<=welding_data.size()){
        for(int i=0; i<target_line-1; i++){
        welding_data[i].lv = 1;
        }
        for(int i=target_line; i<welding_data.size(); i++){
            welding_data[i].lv = 0;
        }
        Update_TW_10();
    }
}



void MainWindow::on_PB_A3C7_back_clicked()
{
    ui->LE_C_0_Load_1->setText("");
    ui->LE_C_0_Load_2->setText("");
    ui->LE_C_0_Load_3->setText("");
    ui->LE_C_0_Load_4->setText("");
    ui->LE_C_0_Load_5->setText("");
    ui->LE_C_0_Load_6->setText("");
    ui->LE_C_0_Load_7->setText("");
    ui->LE_C_0_Load_8->setText("");
    ui->LE_C_0_Load_9->setText("");
    ui->LE_C_0_Load_10->setText("");
    file_load_no_1 = 0;
    file_load_no_2 = 0;
    file_load_no_3 = 0;
    file_load_no_4 = 0;
    file_load_no_5 = 0;
    file_load_no_6 = 0;
    file_load_no_7 = 0;
    file_load_no_8 = 0;
    file_load_no_9 = 0;
    file_load_no_10 = 0;

    mode_type = 0;
    play_type = 0;
    load_file_no = 0;
    ui->SW_A->setCurrentIndex(1);
}

void MainWindow::on_PB_C_7_Play_clicked()
{
    play_type = 3;
    Load_File_1_make();

}

void MainWindow::on_PB_C_7_Pause_clicked()
{
    if(sockConnectionStatusCmd && sockConnectionStatusData){
        sockCmd.write("task pause ");
    }else{
        qDebug()<<"on_PB_C_7_Pause_clicked"<<endl;
        QMessageBox::warning(this, MSG_JCT_TITLE, MSG_NO_CONNECTION);
    }
    ui->PB_C_7_Play->setStyleSheet("QPushButton{border-image: url(:/a/image/실행-274x287.png)}");
}

void MainWindow::on_PB_C_7_Stop_clicked()
{
    if(sockConnectionStatusCmd == true && sockConnectionStatusData == true){
        if(sockConnectionStatusCmd && sockConnectionStatusData){
            sockCmd.write("task stop ");
        }else{
            qDebug()<<"on_PB_C_7_Stop_clicked"<<endl;
            QMessageBox::warning(this, MSG_JCT_TITLE, MSG_NO_CONNECTION);
        }
        ui->PB_C_7_Play->setStyleSheet("QPushButton{border-image: url(:/a/image/실행-274x287.png)}");

        data_start = 0;
    }
}
void MainWindow::Load_File_1_make()
{
    QString filename = ui->LE_C_0_Load_1->text();
    qDebug()<<filename;
    if(filename.isEmpty())
        return;
    QFile file(filename);
    if(!file.open(QIODevice::ReadOnly)){
        QMessageBox::warning(this, "파일 로드 실패", file.errorString());
        return;
    }
    QDataStream in(&file);
    welding_data.clear();
    in >> welding_data;
    Update_TW_10();
    command_data.clear();
    in >> command_data;
    Update_TW_1();

    mode_type = 101; //Load_File_1
    qDebug()<<"Load_File_1"<<endl;
    make_and_run(0);
}
void MainWindow::Load_File_2_make()
{
    QString filename = ui->LE_C_0_Load_2->text();
    qDebug()<<filename;
    if(filename.isEmpty())
        return;
    QFile file(filename);
    if(!file.open(QIODevice::ReadOnly)){
        QMessageBox::warning(this, "파일 로드 실패", file.errorString());
        return;
    }
    QDataStream in(&file);
    welding_data.clear();
    in >> welding_data;
    Update_TW_10();
    command_data.clear();
    in >> command_data;
    Update_TW_1();

    mode_type = 102; //Load_File_2
    qDebug()<<"Load_File_2"<<endl;
    make_and_run(0);
}
void MainWindow::Load_File_3_make()
{
    QString filename = ui->LE_C_0_Load_3->text();
    qDebug()<<filename;
    if(filename.isEmpty())
        return;
    QFile file(filename);
    if(!file.open(QIODevice::ReadOnly)){
        QMessageBox::warning(this, "파일 로드 실패", file.errorString());
        return;
    }
    QDataStream in(&file);
    welding_data.clear();
    in >> welding_data;
    Update_TW_10();
    command_data.clear();
    in >> command_data;
    Update_TW_1();

    mode_type = 103; //Load_File_3
    qDebug()<<"Load_File_3"<<endl;
    make_and_run(0);
}
void MainWindow::Load_File_4_make()
{
    QString filename = ui->LE_C_0_Load_4->text();
    qDebug()<<filename;
    if(filename.isEmpty())
        return;
    QFile file(filename);
    if(!file.open(QIODevice::ReadOnly)){
        QMessageBox::warning(this, "파일 로드 실패", file.errorString());
        return;
    }
    QDataStream in(&file);
    welding_data.clear();
    in >> welding_data;
    Update_TW_10();
    command_data.clear();
    in >> command_data;
    Update_TW_1();

    mode_type = 104; //Load_File_4
    qDebug()<<"Load_File_4"<<endl;
    make_and_run(0);
}
void MainWindow::Load_File_5_make()
{
    QString filename = ui->LE_C_0_Load_5->text();
    qDebug()<<filename;
    if(filename.isEmpty())
        return;
    QFile file(filename);
    if(!file.open(QIODevice::ReadOnly)){
        QMessageBox::warning(this, "파일 로드 실패", file.errorString());
        return;
    }
    QDataStream in(&file);
    welding_data.clear();
    in >> welding_data;
    Update_TW_10();
    command_data.clear();
    in >> command_data;
    Update_TW_1();

    mode_type = 105; //Load_File_5
    qDebug()<<"Load_File_5"<<endl;
    make_and_run(0);
}
void MainWindow::Load_File_6_make()
{
    QString filename = ui->LE_C_0_Load_6->text();
    qDebug()<<filename;
    if(filename.isEmpty())
        return;
    QFile file(filename);
    if(!file.open(QIODevice::ReadOnly)){
        QMessageBox::warning(this, "파일 로드 실패", file.errorString());
        return;
    }
    QDataStream in(&file);
    welding_data.clear();
    in >> welding_data;
    Update_TW_10();
    command_data.clear();
    in >> command_data;
    Update_TW_1();

    mode_type = 106; //Load_File_6
    qDebug()<<"Load_File_6"<<endl;
    make_and_run(0);
}
void MainWindow::Load_File_7_make()
{
    QString filename = ui->LE_C_0_Load_7->text();
    qDebug()<<filename;
    if(filename.isEmpty())
        return;
    QFile file(filename);
    if(!file.open(QIODevice::ReadOnly)){
        QMessageBox::warning(this, "파일 로드 실패", file.errorString());
        return;
    }
    QDataStream in(&file);
    welding_data.clear();
    in >> welding_data;
    Update_TW_10();
    command_data.clear();
    in >> command_data;
    Update_TW_1();

    mode_type = 107; //Load_File_7
    qDebug()<<"Load_File_7"<<endl;
    make_and_run(0);
}
void MainWindow::Load_File_8_make()
{
    QString filename = ui->LE_C_0_Load_8->text();
    qDebug()<<filename;
    if(filename.isEmpty())
        return;
    QFile file(filename);
    if(!file.open(QIODevice::ReadOnly)){
        QMessageBox::warning(this, "파일 로드 실패", file.errorString());
        return;
    }
    QDataStream in(&file);
    welding_data.clear();
    in >> welding_data;
    Update_TW_10();
    command_data.clear();
    in >> command_data;
    Update_TW_1();

    mode_type = 108; //Load_File_8
    qDebug()<<"Load_File_8"<<endl;
    make_and_run(0);
}
void MainWindow::Load_File_9_make()
{
    QString filename = ui->LE_C_0_Load_9->text();
    qDebug()<<filename;
    if(filename.isEmpty())
        return;
    QFile file(filename);
    if(!file.open(QIODevice::ReadOnly)){
        QMessageBox::warning(this, "파일 로드 실패", file.errorString());
        return;
    }
    QDataStream in(&file);
    welding_data.clear();
    in >> welding_data;
    Update_TW_10();
    command_data.clear();
    in >> command_data;
    Update_TW_1();

    mode_type = 109; //Load_File_9
    qDebug()<<"Load_File_9"<<endl;
    make_and_run(0);
}
void MainWindow::Load_File_10_make()
{
    QString filename = ui->LE_C_0_Load_10->text();
    qDebug()<<filename;
    if(filename.isEmpty())
        return;
    QFile file(filename);
    if(!file.open(QIODevice::ReadOnly)){
        QMessageBox::warning(this, "파일 로드 실패", file.errorString());
        return;
    }
    QDataStream in(&file);
    welding_data.clear();
    in >> welding_data;
    Update_TW_10();
    command_data.clear();
    in >> command_data;
    Update_TW_1();

    mode_type = 110; //Load_File_10
    qDebug()<<"Load_File_10"<<endl;
    make_and_run(0);
}
void MainWindow::Load_File_All_make()
{
    mode_type = 100;
    qDebug()<<"Load_File_All"<<endl;
    make_and_run(0);
}

void MainWindow::on_PB_icv_sec_plus_clicked()
{
    icv_sec = icv_sec+0.1;
    ui->LE_icv_sec->setText(QString::number(icv_sec,'f',1));
    icv_sec = ui->LE_icv_sec->text().toFloat();

}

void MainWindow::on_PB_icv_sec_minus_clicked()
{
    icv_sec = icv_sec-0.1;
    ui->LE_icv_sec->setText(QString::number(icv_sec,'f',1));
    icv_sec = ui->LE_icv_sec->text().toFloat();
}

void MainWindow::on_PB_icv_x_plus_clicked()
{
    icv_x = ui->LE_icv_x->text().toFloat();
    ui->LE_icv_x->setText(QString::number(icv_x,'f',1));

    aicv_set(icv_sec,0,icv_x,0,0);
}

void MainWindow::on_PB_icv_x_minus_clicked()
{
    icv_x = ui->LE_icv_x->text().toFloat();
    ui->LE_icv_x->setText(QString::number(icv_x,'f',1));
    aicv_set(icv_sec,0,-icv_x,0,0);
}

void MainWindow::on_PB_icv_y_plus_clicked()
{
    icv_y = ui->LE_icv_y->text().toFloat();
    ui->LE_icv_y->setText(QString::number(icv_y,'f',1));
    aicv_set(icv_sec,0,0,icv_y,0);
}

void MainWindow::on_PB_icv_y_minus_clicked()
{
    icv_y = ui->LE_icv_y->text().toFloat();
    ui->LE_icv_y->setText(QString::number(icv_y,'f',1));
    aicv_set(icv_sec,0,0,-icv_y,0);
}

void MainWindow::on_PB_icv_z_plus_clicked()
{
    icv_z = ui->LE_icv_z->text().toFloat();
    ui->LE_icv_z->setText(QString::number(icv_z,'f',1));
    aicv_set(icv_sec,0,0,0,icv_z);
}

void MainWindow::on_PB_icv_z_minus_clicked()
{
    icv_z = ui->LE_icv_z->text().toFloat();
    ui->LE_icv_z->setText(QString::number(icv_z,'f',1));
    aicv_set(icv_sec,0,0,0,-icv_z);
}

void MainWindow::on_PB_arc_set_plus_A_clicked()
{
    arc_welding_amphere_plus();
}

void MainWindow::on_PB_arc_set_minus_A_clicked()
{
    arc_welding_amphere_minus();
}

void MainWindow::on_PB_arc_set_plus_V_clicked()
{
    arc_welding_voltage_plus();
}

void MainWindow::on_PB_arc_set_minus_V_clicked()
{
    arc_welding_voltage_minus();
}

void MainWindow::aicv_set(float aicv_sec,int aicv_type, float aicv_x, float aicv_y, float aicv_z)
{
    QString text;
    text.sprintf("icv_set (%.1f,%d,%.1f,%.1f,%.1f)",aicv_sec,aicv_type,aicv_x,aicv_y,aicv_z);
    cmdConfirmFlag = false;
    sockCmd.write(text.toStdString().c_str(), text.toStdString().length());
}

void MainWindow::arc_welding_amphere_plus()
{
    if(sys_status.sdata.digital_in[8] == 1){
        QString text;
        text.sprintf("arc_welding_amphere_plus(%.1f)",ui->LE_arc_set_A_2->text().toFloat());
        cmdConfirmFlag = false;
        sockCmd.write(text.toStdString().c_str(), text.toStdString().length());
    }
}

void MainWindow::arc_welding_amphere_minus()
{
    if(sys_status.sdata.digital_in[8] == 1){
        QString text;
        text.sprintf("arc_welding_amphere_minus(%.1f)",ui->LE_arc_set_A_2->text().toFloat());
        cmdConfirmFlag = false;
        sockCmd.write(text.toStdString().c_str(), text.toStdString().length());
    }
}

void MainWindow::arc_welding_voltage_plus()
{
    if(sys_status.sdata.digital_in[8] == 1){
        QString text;
        text.sprintf("arc_welding_voltage_plus(%.1f)",ui->LE_arc_set_V_2->text().toFloat());
        cmdConfirmFlag = false;
        sockCmd.write(text.toStdString().c_str(), text.toStdString().length());
    }
}
void MainWindow::arc_welding_voltage_minus()
{
    if(sys_status.sdata.digital_in[8] == 1){
        QString text;
        text.sprintf("arc_welding_voltage_minus(%.1f)",ui->LE_arc_set_V_2->text().toFloat());
        cmdConfirmFlag = false;
        sockCmd.write(text.toStdString().c_str(), text.toStdString().length());
    }
}

void MainWindow::on_LE_icv_sec_cursorPositionChanged(int arg1, int arg2)
{
    data_B2C01_key_view = 2;
    B2C01_input = "";
    B2C01_key_view();
    qDebug()<<arg1<<arg2<<endl;
}


void MainWindow::on_LE_icv_sec_selectionChanged()
{
    if(ui->LE_icv_sec->text()==""){
        on_LE_icv_sec_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_LE_icv_x_cursorPositionChanged(int arg1, int arg2)
{
    data_B2C01_key_view = 3;
    B2C01_input = "";
    B2C01_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_icv_x_selectionChanged()
{
    if(ui->LE_icv_x->text()==""){
        on_LE_icv_x_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_LE_icv_y_cursorPositionChanged(int arg1, int arg2)
{
    data_B2C01_key_view = 4;
    B2C01_input = "";
    B2C01_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_icv_y_selectionChanged()
{
    if(ui->LE_icv_y->text()==""){
        on_LE_icv_y_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_LE_icv_z_cursorPositionChanged(int arg1, int arg2)
{
    data_B2C01_key_view = 5;
    B2C01_input = "";
    B2C01_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_icv_z_selectionChanged()
{
    if(ui->LE_icv_z->text()==""){
        on_LE_icv_z_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_LE_arc_set_A_2_cursorPositionChanged(int arg1, int arg2)
{
    data_B2C01_key_view = 6;
    B2C01_input = "";
    B2C01_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_arc_set_A_2_selectionChanged()
{
    if(ui->LE_arc_set_A_2->text()==""){
        on_LE_arc_set_A_2_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_LE_arc_set_V_2_cursorPositionChanged(int arg1, int arg2)
{
    data_B2C01_key_view = 7;
    B2C01_input = "";
    B2C01_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_arc_set_V_2_selectionChanged()
{
    if(ui->LE_arc_set_V_2->text()==""){
        on_LE_arc_set_V_2_cursorPositionChanged(0,0);
    }
}
void MainWindow::C7C0_key_view()
{
    ui->LE_C7C0_key->setText("");
    ui->SW_C7C0->setCurrentIndex(1);
    switch (data_C7C0_key_view) {
    case 1:
        ui->LE_C7C0_key->setText(ui->LE_icv_sec_2->text());
        break;
    case 2:
        ui->LE_C7C0_key->setText(ui->LE_icv_x_2->text());
        break;
    case 3:
        ui->LE_C7C0_key->setText(ui->LE_icv_y_2->text());
        break;
    case 4:
        ui->LE_C7C0_key->setText(ui->LE_icv_z_2->text());
        break;
    case 5:
        ui->LE_C7C0_key->setText(ui->LE_arc_set_A_4->text());
        break;
    case 6:
        ui->LE_C7C0_key->setText(ui->LE_arc_set_V_4->text());
        break;
    default:
        break;
    }
}

void MainWindow::C7C0_key_clicked_number(QString number)
{
    C7C0_input += number;
    ui->LE_C7C0_key->setText(C7C0_input);
}
void MainWindow::on_PB_C7C0_key_dot_clicked(){ C7C0_key_clicked_number("."); }
void MainWindow::on_PB_C7C0_key_0_clicked(){ C7C0_key_clicked_number("0"); }
void MainWindow::on_PB_C7C0_key_1_clicked(){ C7C0_key_clicked_number("1"); }
void MainWindow::on_PB_C7C0_key_2_clicked(){ C7C0_key_clicked_number("2"); }
void MainWindow::on_PB_C7C0_key_3_clicked(){ C7C0_key_clicked_number("3"); }
void MainWindow::on_PB_C7C0_key_4_clicked(){ C7C0_key_clicked_number("4"); }
void MainWindow::on_PB_C7C0_key_5_clicked(){ C7C0_key_clicked_number("5"); }
void MainWindow::on_PB_C7C0_key_6_clicked(){ C7C0_key_clicked_number("6"); }
void MainWindow::on_PB_C7C0_key_7_clicked(){ C7C0_key_clicked_number("7"); }
void MainWindow::on_PB_C7C0_key_8_clicked(){ C7C0_key_clicked_number("8"); }
void MainWindow::on_PB_C7C0_key_9_clicked(){ C7C0_key_clicked_number("9"); }
void MainWindow::on_PB_C7C0_key_minus_clicked(){ C7C0_key_clicked_number("-"); }

void MainWindow::on_PB_C7C0_key_back_clicked()
{
    //! 현재입력된 값의 글자수가 1보다 클때
    if(C7C0_input.length() > 1) {
        //! 가장 마지막값 1개를 지움
        C7C0_input.resize(C7C0_input.length()-1);
        ui->LE_C7C0_key->setText(C7C0_input);
    } else {
        C7C0_input = "";
        ui->LE_C7C0_key->setText(C7C0_input);
    }
}

void MainWindow::on_PB_C7C0_key_enter_clicked()
{
    switch (data_C7C0_key_view) {
    case 1:
        ui->LE_icv_sec_2->setText(ui->LE_C7C0_key->text());
        icv_sec = ui->LE_icv_sec_2->text().toFloat();
        break;
    case 2:
        ui->LE_icv_x_2->setText(ui->LE_C7C0_key->text());
        icv_x = ui->LE_icv_x_2->text().toFloat();
        break;
    case 3:
        ui->LE_icv_y_2->setText(ui->LE_C7C0_key->text());
        icv_y = ui->LE_icv_y_2->text().toFloat();
        break;
    case 4:
        ui->LE_icv_z_2->setText(ui->LE_C7C0_key->text());
        icv_z = ui->LE_icv_z_2->text().toFloat();
        break;
    case 5:
        ui->LE_arc_set_A_4->setText(ui->LE_C7C0_key->text());
        break;
    case 6:
        ui->LE_arc_set_V_4->setText(ui->LE_C7C0_key->text());
        break;
    default:
        break;
    }
    data_C7C0_key_view = 0;
    if(data_weld_play==0){
        ui->SW_B2C0->setCurrentIndex(0);
        ui->SW_C7C0->setCurrentIndex(0);
    }
    if(data_weld_play==1){
        ui->SW_B2C0->setCurrentIndex(2);
        ui->SW_C7C0->setCurrentIndex(2);
    }
}

void MainWindow::on_PB_C7C0_key_exit_clicked()
{
    data_C7C0_key_view = 0;
    if(data_weld_play==0){
        ui->SW_B2C0->setCurrentIndex(0);
        ui->SW_C7C0->setCurrentIndex(0);
    }
    if(data_weld_play==1){
        ui->SW_B2C0->setCurrentIndex(2);
        ui->SW_C7C0->setCurrentIndex(2);
    }
}

void MainWindow::on_PB_icv_sec_plus_2_clicked()
{
    icv_sec = icv_sec+0.1;
    ui->LE_icv_sec_2->setText(QString::number(icv_sec,'f',1));
    icv_sec = ui->LE_icv_sec_2->text().toFloat();

}

void MainWindow::on_PB_icv_sec_minus_2_clicked()
{
    icv_sec = icv_sec-0.1;
    ui->LE_icv_sec_2->setText(QString::number(icv_sec,'f',1));
    icv_sec = ui->LE_icv_sec_2->text().toFloat();
}

void MainWindow::on_PB_icv_x_plus_2_clicked()
{
    icv_x = ui->LE_icv_x_2->text().toFloat();
    ui->LE_icv_x_2->setText(QString::number(icv_x,'f',1));

    aicv_set_2(icv_sec,0,icv_x,0,0);
}

void MainWindow::on_PB_icv_x_minus_2_clicked()
{
    icv_x = ui->LE_icv_x_2->text().toFloat();
    ui->LE_icv_x_2->setText(QString::number(icv_x,'f',1));
    aicv_set_2(icv_sec,0,-icv_x,0,0);
}

void MainWindow::on_PB_icv_y_plus_2_clicked()
{
    icv_y = ui->LE_icv_y_2->text().toFloat();
    ui->LE_icv_y_2->setText(QString::number(icv_y,'f',1));
    aicv_set_2(icv_sec,0,0,icv_y,0);
}

void MainWindow::on_PB_icv_y_minus_2_clicked()
{
    icv_y = ui->LE_icv_y_2->text().toFloat();
    ui->LE_icv_y_2->setText(QString::number(icv_y,'f',1));
    aicv_set_2(icv_sec,0,0,-icv_y,0);
}

void MainWindow::on_PB_icv_z_plus_2_clicked()
{
    icv_z = ui->LE_icv_z_2->text().toFloat();
    ui->LE_icv_z_2->setText(QString::number(icv_z,'f',1));
    aicv_set_2(icv_sec,0,0,0,icv_z);
}

void MainWindow::on_PB_icv_z_minus_2_clicked()
{
    icv_z = ui->LE_icv_z_2->text().toFloat();
    ui->LE_icv_z_2->setText(QString::number(icv_z,'f',1));
    aicv_set_2(icv_sec,0,0,0,-icv_z);
}

void MainWindow::on_PB_arc_set_plus_A_2_clicked()
{
    arc_welding_amphere_plus_2();
}

void MainWindow::on_PB_arc_set_minus_A_2_clicked()
{
    arc_welding_amphere_minus_2();
}

void MainWindow::on_PB_arc_set_plus_V_2_clicked()
{
    arc_welding_voltage_plus_2();
}

void MainWindow::on_PB_arc_set_minus_V_2_clicked()
{
    arc_welding_voltage_minus_2();
}

void MainWindow::aicv_set_2(float aicv_sec,int aicv_type, float aicv_x, float aicv_y, float aicv_z)
{
    QString text;
    text.sprintf("icv_set (%.1f,%d,%.1f,%.1f,%.1f)",aicv_sec,aicv_type,aicv_x,aicv_y,aicv_z);
    cmdConfirmFlag = false;
    sockCmd.write(text.toStdString().c_str(), text.toStdString().length());
}

void MainWindow::arc_welding_amphere_plus_2()
{
    if(sys_status.sdata.digital_in[8] == 1){
        QString text;
        text.sprintf("arc_welding_amphere_plus(%.1f)",ui->LE_arc_set_A_4->text().toFloat());
        cmdConfirmFlag = false;
        sockCmd.write(text.toStdString().c_str(), text.toStdString().length());
    }
}

void MainWindow::arc_welding_amphere_minus_2()
{
    if(sys_status.sdata.digital_in[8] == 1){
        QString text;
        text.sprintf("arc_welding_amphere_minus(%.1f)",ui->LE_arc_set_A_4->text().toFloat());
        cmdConfirmFlag = false;
        sockCmd.write(text.toStdString().c_str(), text.toStdString().length());
    }
}

void MainWindow::arc_welding_voltage_plus_2()
{
    if(sys_status.sdata.digital_in[8] == 1){
        QString text;
        text.sprintf("arc_welding_voltage_plus(%.1f)",ui->LE_arc_set_V_4->text().toFloat());
        cmdConfirmFlag = false;
        sockCmd.write(text.toStdString().c_str(), text.toStdString().length());
    }
}
void MainWindow::arc_welding_voltage_minus_2()
{
    if(sys_status.sdata.digital_in[8] == 1){
        QString text;
        text.sprintf("arc_welding_voltage_minus(%.1f)",ui->LE_arc_set_V_4->text().toFloat());
        cmdConfirmFlag = false;
        sockCmd.write(text.toStdString().c_str(), text.toStdString().length());
    }
}

void MainWindow::on_LE_icv_sec_2_cursorPositionChanged(int arg1, int arg2)
{
    data_C7C0_key_view = 1;
    C7C0_input = "";
    C7C0_key_view();
    qDebug()<<arg1<<arg2<<endl;
}


void MainWindow::on_LE_icv_sec_2_selectionChanged()
{
    if(ui->LE_icv_sec->text()==""){
        on_LE_icv_sec_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_LE_icv_x_2_cursorPositionChanged(int arg1, int arg2)
{
    data_C7C0_key_view = 2;
    C7C0_input = "";
    C7C0_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_icv_x_2_selectionChanged()
{
    if(ui->LE_icv_x->text()==""){
        on_LE_icv_x_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_LE_icv_y_2_cursorPositionChanged(int arg1, int arg2)
{
    data_C7C0_key_view = 3;
    C7C0_input = "";
    C7C0_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_icv_y_2_selectionChanged()
{
    if(ui->LE_icv_y->text()==""){
        on_LE_icv_y_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_LE_icv_z_2_cursorPositionChanged(int arg1, int arg2)
{
    data_C7C0_key_view = 4;
    C7C0_input = "";
    C7C0_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_icv_z_2_selectionChanged()
{
    if(ui->LE_icv_z->text()==""){
        on_LE_icv_z_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_LE_arc_set_A_4_cursorPositionChanged(int arg1, int arg2)
{
    data_C7C0_key_view = 5;
    C7C0_input = "";
    C7C0_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_arc_set_A_4_selectionChanged()
{
    if(ui->LE_arc_set_A_4->text()==""){
        on_LE_arc_set_A_4_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_LE_arc_set_V_4_cursorPositionChanged(int arg1, int arg2)
{
    data_C7C0_key_view = 6;
    C7C0_input = "";
    C7C0_key_view();
    qDebug()<<arg1<<arg2<<endl;
}

void MainWindow::on_LE_arc_set_V_4_selectionChanged()
{
    if(ui->LE_arc_set_V_4->text()==""){
        on_LE_arc_set_V_4_cursorPositionChanged(0,0);
    }
}

void MainWindow::on_PB_D_0_Use_weld_play_clicked()
{
    data_weld_play = 1;
}

void MainWindow::on_PB_D_0_Unuse_weld_play_clicked()
{
    data_weld_play = 0;
}
